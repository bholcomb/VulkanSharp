{
    [1] = IMG,
    [2] = AMD,
    [3] = AMDX,
    [4] = ARM,
    [5] = FSL,
    [6] = BRCM,
    [7] = NXP,
    [8] = NV,
    [9] = NVX,
    [10] = VIV,
    [11] = VSI,
    [12] = KDAB,
    [13] = ANDROID,
    [14] = CHROMIUM,
    [15] = FUCHSIA,
    [16] = GGP,
    [17] = GOOGLE,
    [18] = QCOM,
    [19] = LUNARG,
    [20] = SAMSUNG,
    [21] = SEC,
    [22] = TIZEN,
    [23] = RENDERDOC,
    [24] = NN,
    [25] = MVK,
    [26] = KHR,
    [27] = KHX,
    [28] = EXT,
    [29] = MESA,
    }
{
    ["vkCmdCopyQueryPoolResults"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdCopyQueryPoolResults,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = firstQuery,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = queryCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [6] = {
                ["name"] = dstOffset,
                ["type"] = VkDeviceSize ,
                },
            [7] = {
                ["name"] = stride,
                ["type"] = VkDeviceSize ,
                },
            [8] = {
                ["type"] = VkQueryResultFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkGetImageSparseMemoryRequirements2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_memory_requirements2,
        ["name"] = vkGetImageSparseMemoryRequirements2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkImageSparseMemoryRequirementsInfo2 * ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pSparseMemoryRequirementCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pSparseMemoryRequirementCount,
                ["type"] = VkSparseImageMemoryRequirements2 * ,
                ["name"] = pSparseMemoryRequirements,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdSetLineWidth"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetLineWidth,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = lineWidth,
                ["type"] = float ,
                },
            },
        },
    ["vkCreateCommandPool"] = {
        ["returnType"] = VkResult,
        ["group"] = Command pool commands,
        ["name"] = vkCreateCommandPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkCommandPoolCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pCommandPool,
                ["type"] = VkCommandPool * ,
                },
            },
        },
    ["vkDestroyFramebuffer"] = {
        ["returnType"] = void,
        ["group"] = Pass commands,
        ["name"] = vkDestroyFramebuffer,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkFramebuffer ,
                ["name"] = framebuffer,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDeviceMemoryCommitment"] = {
        ["returnType"] = void,
        ["group"] = Memory commands,
        ["name"] = vkGetDeviceMemoryCommitment,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [3] = {
                ["name"] = pCommittedMemoryInBytes,
                ["type"] = VkDeviceSize * ,
                },
            },
        },
    ["vkCreateSemaphore"] = {
        ["returnType"] = VkResult,
        ["group"] = Queue semaphore commands,
        ["name"] = vkCreateSemaphore,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkSemaphoreCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSemaphore,
                ["type"] = VkSemaphore * ,
                },
            },
        },
    ["vkDestroyDebugReportCallbackEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_report,
        ["name"] = vkDestroyDebugReportCallbackEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["type"] = VkDebugReportCallbackEXT ,
                ["name"] = callback,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdBindVertexBuffers"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBindVertexBuffers,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstBinding,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = bindingCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = bindingCount,
                ["type"] = const VkBuffer * ,
                ["name"] = pBuffers,
                },
            [5] = {
                ["len"] = bindingCount,
                ["type"] = const VkDeviceSize * ,
                ["name"] = pOffsets,
                },
            },
        },
    ["vkCmdBeginRenderPass"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBeginRenderPass,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pRenderPassBegin,
                ["type"] = const VkRenderPassBeginInfo * ,
                },
            [3] = {
                ["name"] = contents,
                ["type"] = VkSubpassContents ,
                },
            },
        },
    ["vkCmdDebugMarkerEndEXT"] = {
        ["returnType"] = void,
        ["name"] = vkCmdDebugMarkerEndEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            },
        },
    ["vkDestroyInstance"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkDestroyInstance,
        ["params"] = {
            [1] = {
                ["externsync"] = true,
                ["type"] = VkInstance ,
                ["name"] = instance,
                ["optional"] = true,
                },
            [2] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateXlibSurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_xlib_surface,
        ["name"] = vkCreateXlibSurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkXlibSurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkGetDeviceGroupSurfacePresentModes2EXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["name"] = vkGetDeviceGroupSurfacePresentModes2EXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pSurfaceInfo,
                ["type"] = const VkPhysicalDeviceSurfaceInfo2KHR * ,
                },
            [3] = {
                ["type"] = VkDeviceGroupPresentModeFlagsKHR * ,
                ["name"] = pModes,
                ["optional"] = false,true,
                },
            },
        },
    ["vkMergePipelineCaches"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline Cache commands,
        ["name"] = vkMergePipelineCaches,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkPipelineCache ,
                ["name"] = dstCache,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = srcCacheCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = srcCacheCount,
                ["type"] = const VkPipelineCache * ,
                ["name"] = pSrcCaches,
                },
            },
        },
    ["vkGetPhysicalDeviceImageFormatProperties"] = {
        ["returnType"] = VkResult,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceImageFormatProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkImageType ,
                },
            [4] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            [5] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [6] = {
                ["type"] = VkImageCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [7] = {
                ["name"] = pImageFormatProperties,
                ["type"] = VkImageFormatProperties * ,
                },
            },
        },
    ["vkCmdBeginDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkCmdBeginDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = pLabelInfo,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                },
            },
        },
    ["vkCmdDispatchIndirect"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDispatchIndirect,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            },
        },
    ["vkCmdDispatchBase"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_device_group,
        ["name"] = vkCmdDispatchBase,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = baseGroupX,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = baseGroupY,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = baseGroupZ,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = groupCountX,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = groupCountY,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = groupCountZ,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDisplayPowerControlEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_display_control,
        ["name"] = vkDisplayPowerControlEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            [3] = {
                ["name"] = pDisplayPowerInfo,
                ["type"] = const VkDisplayPowerInfoEXT * ,
                },
            },
        },
    ["vkGetPhysicalDeviceExternalImageFormatPropertiesNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_external_memory_capabilities,
        ["name"] = vkGetPhysicalDeviceExternalImageFormatPropertiesNV,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkImageType ,
                },
            [4] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            [5] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [6] = {
                ["type"] = VkImageCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [7] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = externalHandleType,
                ["optional"] = true,
                },
            [8] = {
                ["name"] = pExternalImageFormatProperties,
                ["type"] = VkExternalImageFormatPropertiesNV * ,
                },
            },
        },
    ["vkFreeCommandBuffers"] = {
        ["returnType"] = void,
        ["group"] = Command buffer commands,
        ["name"] = vkFreeCommandBuffers,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkCommandPool ,
                ["name"] = commandPool,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = commandBufferCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const VkCommandBuffer * ,
                ["name"] = pCommandBuffers,
                ["len"] = commandBufferCount,
                ["externsync"] = true,
                },
            },
        },
    ["vkCreateSharedSwapchainsKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display_swapchain,
        ["name"] = vkCreateSharedSwapchainsKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchainCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = swapchainCount,
                ["type"] = const VkSwapchainCreateInfoKHR * ,
                ["name"] = pCreateInfos,
                ["externsync"] = pCreateInfos[].surface,pCreateInfos[].oldSwapchain,
                },
            [4] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = swapchainCount,
                ["type"] = VkSwapchainKHR * ,
                ["name"] = pSwapchains,
                },
            },
        },
    ["vkGetImageMemoryRequirements"] = {
        ["returnType"] = void,
        ["group"] = Memory management API commands,
        ["name"] = vkGetImageMemoryRequirements,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = pMemoryRequirements,
                ["type"] = VkMemoryRequirements * ,
                },
            },
        },
    ["vkGetPhysicalDeviceImageFormatProperties2"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceImageFormatProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pImageFormatInfo,
                ["type"] = const VkPhysicalDeviceImageFormatInfo2 * ,
                },
            [3] = {
                ["name"] = pImageFormatProperties,
                ["type"] = VkImageFormatProperties2 * ,
                },
            },
        },
    ["vkDebugReportMessageEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_report,
        ["name"] = vkDebugReportMessageEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkDebugReportFlagsEXT ,
                },
            [3] = {
                ["name"] = objectType,
                ["type"] = VkDebugReportObjectTypeEXT ,
                },
            [4] = {
                ["name"] = object,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["name"] = location,
                ["type"] = size_t ,
                },
            [6] = {
                ["name"] = messageCode,
                ["type"] = int32_t ,
                },
            [7] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pLayerPrefix,
                },
            [8] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pMessage,
                },
            },
        },
    ["vkGetPhysicalDeviceMultisamplePropertiesEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_sample_locations,
        ["name"] = vkGetPhysicalDeviceMultisamplePropertiesEXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [3] = {
                ["name"] = pMultisampleProperties,
                ["type"] = VkMultisamplePropertiesEXT * ,
                },
            },
        },
    ["vkMapMemory"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory commands,
        ["name"] = vkMapMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["type"] = VkMemoryMapFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [6] = {
                ["type"] = void ** ,
                ["name"] = ppData,
                ["optional"] = false,true,
                },
            },
        },
    ["vkCmdSetStencilWriteMask"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetStencilWriteMask,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = faceMask,
                ["type"] = VkStencilFaceFlags ,
                },
            [3] = {
                ["name"] = writeMask,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDestroyDescriptorUpdateTemplate"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_descriptor_update_template,
        ["name"] = vkDestroyDescriptorUpdateTemplate,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkDescriptorUpdateTemplate ,
                ["name"] = descriptorUpdateTemplate,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDescriptorSetLayoutSupport"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_maintenance3,
        ["name"] = vkGetDescriptorSetLayoutSupport,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDescriptorSetLayoutCreateInfo * ,
                },
            [3] = {
                ["name"] = pSupport,
                ["type"] = VkDescriptorSetLayoutSupport * ,
                },
            },
        },
    ["vkGetBufferMemoryRequirements2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_memory_requirements2,
        ["name"] = vkGetBufferMemoryRequirements2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkBufferMemoryRequirementsInfo2 * ,
                },
            [3] = {
                ["name"] = pMemoryRequirements,
                ["type"] = VkMemoryRequirements2 * ,
                },
            },
        },
    ["vkDestroyPipeline"] = {
        ["returnType"] = void,
        ["group"] = Pipeline commands,
        ["name"] = vkDestroyPipeline,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkPipeline ,
                ["name"] = pipeline,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetPipelineCacheData"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline Cache commands,
        ["name"] = vkGetPipelineCacheData,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pipelineCache,
                ["type"] = VkPipelineCache ,
                },
            [3] = {
                ["type"] = size_t * ,
                ["name"] = pDataSize,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pDataSize,
                ["type"] = void * ,
                ["name"] = pData,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateStreamDescriptorSurfaceGGP"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_GGP_stream_descriptor_surface,
        ["name"] = vkCreateStreamDescriptorSurfaceGGP,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkStreamDescriptorSurfaceCreateInfoGGP * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkCmdSetExclusiveScissorNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_scissor_exclusive,
        ["name"] = vkCmdSetExclusiveScissorNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstExclusiveScissor,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = exclusiveScissorCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = exclusiveScissorCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pExclusiveScissors,
                },
            },
        },
    ["vkGetSemaphoreFdKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_semaphore_fd,
        ["name"] = vkGetSemaphoreFdKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetFdInfo,
                ["type"] = const VkSemaphoreGetFdInfoKHR * ,
                },
            [3] = {
                ["name"] = pFd,
                ["type"] = int * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfacePresentModesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_surface,
        ["name"] = vkGetPhysicalDeviceSurfacePresentModesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPresentModeCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPresentModeCount,
                ["type"] = VkPresentModeKHR * ,
                ["name"] = pPresentModes,
                ["optional"] = true,
                },
            },
        },
    ["vkGetPhysicalDeviceWaylandPresentationSupportKHR"] = {
        ["returnType"] = VkBool32,
        ["extension"] = VK_KHR_wayland_surface,
        ["name"] = vkGetPhysicalDeviceWaylandPresentationSupportKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = display,
                ["type"] = struct wl_display * ,
                },
            },
        },
    ["vkDestroyIndirectCommandsLayoutNVX"] = {
        ["returnType"] = void,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkDestroyIndirectCommandsLayoutNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = indirectCommandsLayout,
                ["type"] = VkIndirectCommandsLayoutNVX ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkDestroyAccelerationStructureNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkDestroyAccelerationStructureNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = accelerationStructure,
                ["type"] = VkAccelerationStructureNV ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkDestroyRenderPass"] = {
        ["returnType"] = void,
        ["group"] = Pass commands,
        ["name"] = vkDestroyRenderPass,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkRenderPass ,
                ["name"] = renderPass,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdFillBuffer"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdFillBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = dstOffset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = data,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDestroyDevice"] = {
        ["returnType"] = void,
        ["group"] = Device commands,
        ["name"] = vkDestroyDevice,
        ["params"] = {
            [1] = {
                ["externsync"] = true,
                ["type"] = VkDevice ,
                ["name"] = device,
                ["optional"] = true,
                },
            [2] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateIndirectCommandsLayoutNVX"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkCreateIndirectCommandsLayoutNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkIndirectCommandsLayoutCreateInfoNVX * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pIndirectCommandsLayout,
                ["type"] = VkIndirectCommandsLayoutNVX * ,
                },
            },
        },
    ["vkCreatePipelineLayout"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline layout commands,
        ["name"] = vkCreatePipelineLayout,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkPipelineLayoutCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pPipelineLayout,
                ["type"] = VkPipelineLayout * ,
                },
            },
        },
    ["vkCreateRenderPass"] = {
        ["returnType"] = VkResult,
        ["group"] = Pass commands,
        ["name"] = vkCreateRenderPass,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkRenderPassCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pRenderPass,
                ["type"] = VkRenderPass * ,
                },
            },
        },
    ["vkResetDescriptorPool"] = {
        ["returnType"] = VkResult,
        ["group"] = Descriptor set commands,
        ["name"] = vkResetDescriptorPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkDescriptorPool ,
                ["name"] = descriptorPool,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = VkDescriptorPoolResetFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkDestroySurfaceKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_surface,
        ["name"] = vkDestroySurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkSurfaceKHR ,
                ["name"] = surface,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdDebugMarkerInsertEXT"] = {
        ["returnType"] = void,
        ["name"] = vkCmdDebugMarkerInsertEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = pMarkerInfo,
                ["type"] = const VkDebugMarkerMarkerInfoEXT * ,
                },
            },
        },
    ["vkCmdBeginTransformFeedbackEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdBeginTransformFeedbackEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstCounterBuffer,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = counterBufferCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = counterBufferCount,
                ["type"] = const VkBuffer * ,
                ["name"] = pCounterBuffers,
                ["noautovalidity"] = true,
                },
            [5] = {
                ["len"] = counterBufferCount,
                ["type"] = const VkDeviceSize * ,
                ["name"] = pCounterBufferOffsets,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdDrawIndexed"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDrawIndexed,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = indexCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = instanceCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = firstIndex,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = vertexOffset,
                ["type"] = int32_t ,
                },
            [6] = {
                ["name"] = firstInstance,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkEnumerateInstanceLayerProperties"] = {
        ["returnType"] = VkResult,
        ["group"] = Layer discovery commands,
        ["name"] = vkEnumerateInstanceLayerProperties,
        ["params"] = {
            [1] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [2] = {
                ["len"] = pPropertyCount,
                ["type"] = VkLayerProperties * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDisplayModePropertiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkGetDisplayModePropertiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayModePropertiesKHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdWaitEvents"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdWaitEvents,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = eventCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = eventCount,
                ["type"] = const VkEvent * ,
                ["name"] = pEvents,
                },
            [4] = {
                ["name"] = srcStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [5] = {
                ["name"] = dstStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = memoryBarrierCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = memoryBarrierCount,
                ["type"] = const VkMemoryBarrier * ,
                ["name"] = pMemoryBarriers,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = bufferMemoryBarrierCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = bufferMemoryBarrierCount,
                ["type"] = const VkBufferMemoryBarrier * ,
                ["name"] = pBufferMemoryBarriers,
                },
            [10] = {
                ["type"] = uint32_t ,
                ["name"] = imageMemoryBarrierCount,
                ["optional"] = true,
                },
            [11] = {
                ["len"] = imageMemoryBarrierCount,
                ["type"] = const VkImageMemoryBarrier * ,
                ["name"] = pImageMemoryBarriers,
                },
            },
        },
    ["vkDestroyBufferView"] = {
        ["returnType"] = void,
        ["group"] = Buffer view commands,
        ["name"] = vkDestroyBufferView,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkBufferView ,
                ["name"] = bufferView,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkFreeDescriptorSets"] = {
        ["returnType"] = VkResult,
        ["group"] = Descriptor set commands,
        ["name"] = vkFreeDescriptorSets,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkDescriptorPool ,
                ["name"] = descriptorPool,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = descriptorSetCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const VkDescriptorSet * ,
                ["name"] = pDescriptorSets,
                ["len"] = descriptorSetCount,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdNextSubpass2KHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_create_renderpass2,
        ["name"] = vkCmdNextSubpass2KHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pSubpassBeginInfo,
                ["type"] = const VkSubpassBeginInfoKHR * ,
                },
            [3] = {
                ["name"] = pSubpassEndInfo,
                ["type"] = const VkSubpassEndInfoKHR * ,
                },
            },
        },
    ["vkGetFenceStatus"] = {
        ["returnType"] = VkResult,
        ["group"] = Fence commands,
        ["name"] = vkGetFenceStatus,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = fence,
                ["type"] = VkFence ,
                },
            },
        },
    ["vkDestroyPipelineCache"] = {
        ["returnType"] = void,
        ["group"] = Pipeline Cache commands,
        ["name"] = vkDestroyPipelineCache,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkPipelineCache ,
                ["name"] = pipelineCache,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdResetQueryPool"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdResetQueryPool,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = firstQuery,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = queryCount,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkCmdSetSampleLocationsEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_sample_locations,
        ["name"] = vkCmdSetSampleLocationsEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pSampleLocationsInfo,
                ["type"] = const VkSampleLocationsInfoEXT * ,
                },
            },
        },
    ["vkCmdPushDescriptorSetKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_push_descriptor,
        ["name"] = vkCmdPushDescriptorSetKHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [3] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [4] = {
                ["name"] = set,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = descriptorWriteCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = descriptorWriteCount,
                ["type"] = const VkWriteDescriptorSet * ,
                ["name"] = pDescriptorWrites,
                },
            },
        },
    ["vkReleaseDisplayEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_direct_mode_display,
        ["name"] = vkReleaseDisplayEXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            },
        },
    ["vkAllocateCommandBuffers"] = {
        ["returnType"] = VkResult,
        ["group"] = Command buffer commands,
        ["name"] = vkAllocateCommandBuffers,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkCommandBufferAllocateInfo * ,
                ["name"] = pAllocateInfo,
                ["externsync"] = pAllocateInfo::commandPool,
                },
            [3] = {
                ["len"] = pAllocateInfo::commandBufferCount,
                ["type"] = VkCommandBuffer * ,
                ["name"] = pCommandBuffers,
                },
            },
        },
    ["vkCreateRenderPass2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_create_renderpass2,
        ["name"] = vkCreateRenderPass2KHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkRenderPassCreateInfo2KHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pRenderPass,
                ["type"] = VkRenderPass * ,
                },
            },
        },
    ["vkGetAndroidHardwareBufferPropertiesANDROID"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["name"] = vkGetAndroidHardwareBufferPropertiesANDROID,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = const struct AHardwareBuffer * ,
                },
            [3] = {
                ["name"] = pProperties,
                ["type"] = VkAndroidHardwareBufferPropertiesANDROID * ,
                },
            },
        },
    ["vkQueuePresentKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkQueuePresentKHR,
        ["params"] = {
            [1] = {
                ["type"] = VkQueue ,
                ["name"] = queue,
                ["externsync"] = true,
                },
            [2] = {
                ["type"] = const VkPresentInfoKHR * ,
                ["name"] = pPresentInfo,
                ["externsync"] = pPresentInfo.pWaitSemaphores[],pPresentInfo.pSwapchains[],
                },
            },
        },
    ["vkGetFenceFdKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_fence_fd,
        ["name"] = vkGetFenceFdKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetFdInfo,
                ["type"] = const VkFenceGetFdInfoKHR * ,
                },
            [3] = {
                ["name"] = pFd,
                ["type"] = int * ,
                },
            },
        },
    ["vkCmdDrawMeshTasksIndirectNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_mesh_shader,
        ["name"] = vkCmdDrawMeshTasksIndirectNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = drawCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceWin32PresentationSupportKHR"] = {
        ["returnType"] = VkBool32,
        ["extension"] = VK_KHR_win32_surface,
        ["name"] = vkGetPhysicalDeviceWin32PresentationSupportKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDestroyObjectTableNVX"] = {
        ["returnType"] = void,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkDestroyObjectTableNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkObjectTableNVX ,
                ["name"] = objectTable,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkInvalidateMappedMemoryRanges"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory commands,
        ["name"] = vkInvalidateMappedMemoryRanges,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = memoryRangeCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = memoryRangeCount,
                ["type"] = const VkMappedMemoryRange * ,
                ["name"] = pMemoryRanges,
                },
            },
        },
    ["vkGetDisplayModeProperties2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_display_properties2,
        ["name"] = vkGetDisplayModeProperties2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayModeProperties2KHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkGetSwapchainCounterEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_display_control,
        ["name"] = vkGetSwapchainCounterEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchain,
                ["type"] = VkSwapchainKHR ,
                },
            [3] = {
                ["name"] = counter,
                ["type"] = VkSurfaceCounterFlagBitsEXT ,
                },
            [4] = {
                ["name"] = pCounterValue,
                ["type"] = uint64_t * ,
                },
            },
        },
    ["vkDeviceWaitIdle"] = {
        ["returnType"] = VkResult,
        ["group"] = queue commands,
        ["name"] = vkDeviceWaitIdle,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            },
        },
    ["vkSetHdrMetadataEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_hdr_metadata,
        ["name"] = vkSetHdrMetadataEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchainCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = swapchainCount,
                ["type"] = const VkSwapchainKHR * ,
                ["name"] = pSwapchains,
                },
            [4] = {
                ["len"] = swapchainCount,
                ["type"] = const VkHdrMetadataEXT * ,
                ["name"] = pMetadata,
                },
            },
        },
    ["vkGetPhysicalDeviceMemoryProperties"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceMemoryProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pMemoryProperties,
                ["type"] = VkPhysicalDeviceMemoryProperties * ,
                },
            },
        },
    ["vkCmdSetStencilReference"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetStencilReference,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = faceMask,
                ["type"] = VkStencilFaceFlags ,
                },
            [3] = {
                ["name"] = reference,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetMemoryWin32HandleNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_external_memory_win32,
        ["name"] = vkGetMemoryWin32HandleNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [3] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                },
            [4] = {
                ["name"] = pHandle,
                ["type"] = HANDLE * ,
                },
            },
        },
    ["vkGetPastPresentationTimingGOOGLE"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_GOOGLE_display_timing,
        ["name"] = vkGetPastPresentationTimingGOOGLE,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPresentationTimingCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPresentationTimingCount,
                ["type"] = VkPastPresentationTimingGOOGLE * ,
                ["name"] = pPresentationTimings,
                ["optional"] = true,
                },
            },
        },
    ["vkEnumerateDeviceLayerProperties"] = {
        ["returnType"] = VkResult,
        ["group"] = Layer discovery commands,
        ["name"] = vkEnumerateDeviceLayerProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkLayerProperties * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdUpdateBuffer"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdUpdateBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = dstOffset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = dataSize,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["len"] = dataSize,
                ["type"] = const void * ,
                ["name"] = pData,
                },
            },
        },
    ["vkGetQueryPoolResults"] = {
        ["returnType"] = VkResult,
        ["group"] = Query commands,
        ["name"] = vkGetQueryPoolResults,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = firstQuery,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = queryCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = dataSize,
                ["type"] = size_t ,
                },
            [6] = {
                ["len"] = dataSize,
                ["type"] = void * ,
                ["name"] = pData,
                },
            [7] = {
                ["name"] = stride,
                ["type"] = VkDeviceSize ,
                },
            [8] = {
                ["type"] = VkQueryResultFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdBeginQuery"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBeginQuery,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = query,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["type"] = VkQueryControlFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDescriptorPool"] = {
        ["returnType"] = VkResult,
        ["group"] = Descriptor set commands,
        ["name"] = vkCreateDescriptorPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDescriptorPoolCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pDescriptorPool,
                ["type"] = VkDescriptorPool * ,
                },
            },
        },
    ["vkResetCommandPool"] = {
        ["returnType"] = VkResult,
        ["group"] = Command pool commands,
        ["name"] = vkResetCommandPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkCommandPool ,
                ["name"] = commandPool,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = VkCommandPoolResetFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdSetDeviceMask"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_device_group,
        ["name"] = vkCmdSetDeviceMask,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = deviceMask,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetRayTracingShaderGroupHandlesNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkGetRayTracingShaderGroupHandlesNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pipeline,
                ["type"] = VkPipeline ,
                },
            [3] = {
                ["name"] = firstGroup,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = groupCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = dataSize,
                ["type"] = size_t ,
                },
            [6] = {
                ["len"] = dataSize,
                ["type"] = void * ,
                ["name"] = pData,
                },
            },
        },
    ["vkGetDisplayPlaneCapabilitiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkGetDisplayPlaneCapabilitiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = VkDisplayModeKHR ,
                ["name"] = mode,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = planeIndex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = pCapabilities,
                ["type"] = VkDisplayPlaneCapabilitiesKHR * ,
                },
            },
        },
    ["vkDestroyDescriptorPool"] = {
        ["returnType"] = void,
        ["group"] = Descriptor set commands,
        ["name"] = vkDestroyDescriptorPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkDescriptorPool ,
                ["name"] = descriptorPool,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdCopyImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdCopyImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcImage,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = srcImageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = dstImage,
                ["type"] = VkImage ,
                },
            [5] = {
                ["name"] = dstImageLayout,
                ["type"] = VkImageLayout ,
                },
            [6] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = regionCount,
                ["type"] = const VkImageCopy * ,
                ["name"] = pRegions,
                },
            },
        },
    ["vkCreateHeadlessSurfaceEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_headless_surface,
        ["name"] = vkCreateHeadlessSurfaceEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkHeadlessSurfaceCreateInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkGetDeviceQueue2"] = {
        ["returnType"] = void,
        ["group"] = Originally based on VK_KHR_protected_memory (extension 146), which was never published; thus the mystifying large value= numbers below. These are not aliased since they weren't actually promoted from an extension.,
        ["name"] = vkGetDeviceQueue2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pQueueInfo,
                ["type"] = const VkDeviceQueueInfo2 * ,
                },
            [3] = {
                ["name"] = pQueue,
                ["type"] = VkQueue * ,
                },
            },
        },
    ["vkDebugMarkerSetObjectNameEXT"] = {
        ["returnType"] = VkResult,
        ["name"] = vkDebugMarkerSetObjectNameEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkDebugMarkerObjectNameInfoEXT * ,
                ["name"] = pNameInfo,
                ["externsync"] = pNameInfo.object,
                },
            },
        },
    ["vkCmdDrawIndirectByteCountEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdDrawIndirectByteCountEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = instanceCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = firstInstance,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = counterBuffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = counterBufferOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = counterOffset,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = vertexStride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_cooperative_matrix,
        ["name"] = vkGetPhysicalDeviceCooperativeMatrixPropertiesNV,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkCooperativeMatrixPropertiesNV * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateComputePipelines"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline commands,
        ["name"] = vkCreateComputePipelines,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkPipelineCache ,
                ["name"] = pipelineCache,
                ["optional"] = true,
                },
            [3] = {
                ["name"] = createInfoCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = createInfoCount,
                ["type"] = const VkComputePipelineCreateInfo * ,
                ["name"] = pCreateInfos,
                },
            [5] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = createInfoCount,
                ["type"] = VkPipeline * ,
                ["name"] = pPipelines,
                },
            },
        },
    ["vkResetQueryPoolEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_host_query_reset,
        ["name"] = vkResetQueryPoolEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = firstQuery,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = queryCount,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceExternalBufferProperties"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_external_memory_capabilities,
        ["name"] = vkGetPhysicalDeviceExternalBufferProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pExternalBufferInfo,
                ["type"] = const VkPhysicalDeviceExternalBufferInfo * ,
                },
            [3] = {
                ["name"] = pExternalBufferProperties,
                ["type"] = VkExternalBufferProperties * ,
                },
            },
        },
    ["vkQueueWaitIdle"] = {
        ["returnType"] = VkResult,
        ["group"] = queue commands,
        ["name"] = vkQueueWaitIdle,
        ["params"] = {
            [1] = {
                ["type"] = VkQueue ,
                ["name"] = queue,
                ["externsync"] = true,
                },
            },
        },
    ["vkGetEventStatus"] = {
        ["returnType"] = VkResult,
        ["group"] = Event commands,
        ["name"] = vkGetEventStatus,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = event,
                ["type"] = VkEvent ,
                },
            },
        },
    ["vkCreatePipelineCache"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline Cache commands,
        ["name"] = vkCreatePipelineCache,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkPipelineCacheCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pPipelineCache,
                ["type"] = VkPipelineCache * ,
                },
            },
        },
    ["vkUpdateDescriptorSets"] = {
        ["returnType"] = void,
        ["group"] = Descriptor set commands,
        ["name"] = vkUpdateDescriptorSets,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = uint32_t ,
                ["name"] = descriptorWriteCount,
                ["optional"] = true,
                },
            [3] = {
                ["len"] = descriptorWriteCount,
                ["type"] = const VkWriteDescriptorSet * ,
                ["name"] = pDescriptorWrites,
                ["externsync"] = pDescriptorWrites[].dstSet,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = descriptorCopyCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = descriptorCopyCount,
                ["type"] = const VkCopyDescriptorSet * ,
                ["name"] = pDescriptorCopies,
                ["externsync"] = pDescriptorCopies[].dstSet,
                },
            },
        },
    ["vkCmdBindDescriptorSets"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBindDescriptorSets,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [3] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [4] = {
                ["name"] = firstSet,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = descriptorSetCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = descriptorSetCount,
                ["type"] = const VkDescriptorSet * ,
                ["name"] = pDescriptorSets,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = dynamicOffsetCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = dynamicOffsetCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDynamicOffsets,
                },
            },
        },
    ["vkEndCommandBuffer"] = {
        ["returnType"] = VkResult,
        ["group"] = Command buffer commands,
        ["name"] = vkEndCommandBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdDrawIndirectCountKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_draw_indirect_count,
        ["name"] = vkCmdDrawIndirectCountKHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = countBuffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = countBufferOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = maxDrawCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetQueueCheckpointDataNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_device_diagnostic_checkpoints,
        ["name"] = vkGetQueueCheckpointDataNV,
        ["params"] = {
            [1] = {
                ["name"] = queue,
                ["type"] = VkQueue ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pCheckpointDataCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pCheckpointDataCount,
                ["type"] = VkCheckpointDataNV * ,
                ["name"] = pCheckpointData,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDebugUtilsMessengerEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkCreateDebugUtilsMessengerEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDebugUtilsMessengerCreateInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pMessenger,
                ["type"] = VkDebugUtilsMessengerEXT * ,
                },
            },
        },
    ["vkQueueInsertDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkQueueInsertDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = queue,
                ["type"] = VkQueue ,
                },
            [2] = {
                ["name"] = pLabelInfo,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                },
            },
        },
    ["vkGetPhysicalDeviceFormatProperties2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceFormatProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = pFormatProperties,
                ["type"] = VkFormatProperties2 * ,
                },
            },
        },
    ["vkEnumeratePhysicalDeviceGroups"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_device_group_creation,
        ["name"] = vkEnumeratePhysicalDeviceGroups,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPhysicalDeviceGroupCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPhysicalDeviceGroupCount,
                ["type"] = VkPhysicalDeviceGroupProperties * ,
                ["name"] = pPhysicalDeviceGroupProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDeviceQueue"] = {
        ["returnType"] = void,
        ["group"] = queue commands,
        ["name"] = vkGetDeviceQueue,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = queueIndex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = pQueue,
                ["type"] = VkQueue * ,
                },
            },
        },
    ["vkCreateDisplayModeKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkCreateDisplayModeKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = VkDisplayKHR ,
                ["name"] = display,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDisplayModeCreateInfoKHR * ,
                },
            [4] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = pMode,
                ["type"] = VkDisplayModeKHR * ,
                },
            },
        },
    ["vkCmdSetDepthBounds"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetDepthBounds,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = minDepthBounds,
                ["type"] = float ,
                },
            [3] = {
                ["name"] = maxDepthBounds,
                ["type"] = float ,
                },
            },
        },
    ["vkCmdSetEvent"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetEvent,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = event,
                ["type"] = VkEvent ,
                },
            [3] = {
                ["name"] = stageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            },
        },
    ["vkCmdEndConditionalRenderingEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_conditional_rendering,
        ["name"] = vkCmdEndConditionalRenderingEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            },
        },
    ["vkGetDisplayPlaneSupportedDisplaysKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkGetDisplayPlaneSupportedDisplaysKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = planeIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pDisplayCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pDisplayCount,
                ["type"] = VkDisplayKHR * ,
                ["name"] = pDisplays,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateGraphicsPipelines"] = {
        ["returnType"] = VkResult,
        ["group"] = Pipeline commands,
        ["name"] = vkCreateGraphicsPipelines,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkPipelineCache ,
                ["name"] = pipelineCache,
                ["optional"] = true,
                },
            [3] = {
                ["name"] = createInfoCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = createInfoCount,
                ["type"] = const VkGraphicsPipelineCreateInfo * ,
                ["name"] = pCreateInfos,
                },
            [5] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = createInfoCount,
                ["type"] = VkPipeline * ,
                ["name"] = pPipelines,
                },
            },
        },
    ["vkGetShaderInfoAMD"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_AMD_shader_info,
        ["name"] = vkGetShaderInfoAMD,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pipeline,
                ["type"] = VkPipeline ,
                },
            [3] = {
                ["name"] = shaderStage,
                ["type"] = VkShaderStageFlagBits ,
                },
            [4] = {
                ["name"] = infoType,
                ["type"] = VkShaderInfoTypeAMD ,
                },
            [5] = {
                ["type"] = size_t * ,
                ["name"] = pInfoSize,
                ["optional"] = false,true,
                },
            [6] = {
                ["len"] = pInfoSize,
                ["type"] = void * ,
                ["name"] = pInfo,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdClearColorImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdClearColorImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = imageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = pColor,
                ["type"] = const VkClearColorValue * ,
                },
            [5] = {
                ["name"] = rangeCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = rangeCount,
                ["type"] = const VkImageSubresourceRange * ,
                ["name"] = pRanges,
                },
            },
        },
    ["vkGetPhysicalDeviceFeatures"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceFeatures,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pFeatures,
                ["type"] = VkPhysicalDeviceFeatures * ,
                },
            },
        },
    ["vkCreateMetalSurfaceEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_metal_surface,
        ["name"] = vkCreateMetalSurfaceEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkMetalSurfaceCreateInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkDestroyBuffer"] = {
        ["returnType"] = void,
        ["group"] = Buffer commands,
        ["name"] = vkDestroyBuffer,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkBuffer ,
                ["name"] = buffer,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceSupportKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_surface,
        ["name"] = vkGetPhysicalDeviceSurfaceSupportKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [4] = {
                ["name"] = pSupported,
                ["type"] = VkBool32 * ,
                },
            },
        },
    ["vkCreateViSurfaceNN"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NN_vi_surface,
        ["name"] = vkCreateViSurfaceNN,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkViSurfaceCreateInfoNN * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkGetPhysicalDeviceFeatures2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceFeatures2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pFeatures,
                ["type"] = VkPhysicalDeviceFeatures2 * ,
                },
            },
        },
    ["vkCreateAccelerationStructureNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCreateAccelerationStructureNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkAccelerationStructureCreateInfoNV * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pAccelerationStructure,
                ["type"] = VkAccelerationStructureNV * ,
                },
            },
        },
    ["vkRegisterDisplayEventEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_display_control,
        ["name"] = vkRegisterDisplayEventEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            [3] = {
                ["name"] = pDisplayEventInfo,
                ["type"] = const VkDisplayEventInfoEXT * ,
                },
            [4] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = pFence,
                ["type"] = VkFence * ,
                },
            },
        },
    ["vkCreateXcbSurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_xcb_surface,
        ["name"] = vkCreateXcbSurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkXcbSurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkEnumerateInstanceExtensionProperties"] = {
        ["returnType"] = VkResult,
        ["group"] = Extension discovery commands,
        ["name"] = vkEnumerateInstanceExtensionProperties,
        ["params"] = {
            [1] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pLayerName,
                ["optional"] = true,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkExtensionProperties * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkGetSemaphoreWin32HandleKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["name"] = vkGetSemaphoreWin32HandleKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetWin32HandleInfo,
                ["type"] = const VkSemaphoreGetWin32HandleInfoKHR * ,
                },
            [3] = {
                ["name"] = pHandle,
                ["type"] = HANDLE * ,
                },
            },
        },
    ["vkCmdSetCoarseSampleOrderNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_shading_rate_image,
        ["name"] = vkCmdSetCoarseSampleOrderNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = sampleOrderType,
                ["type"] = VkCoarseSampleOrderTypeNV ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = customSampleOrderCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = customSampleOrderCount,
                ["type"] = const VkCoarseSampleOrderCustomNV * ,
                ["name"] = pCustomSampleOrders,
                },
            },
        },
    ["vkDestroyFence"] = {
        ["returnType"] = void,
        ["group"] = Fence commands,
        ["name"] = vkDestroyFence,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkFence ,
                ["name"] = fence,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDeviceProcAddr"] = {
        ["returnType"] = PFN_vkVoidFunction,
        ["group"] = Device initialization,
        ["name"] = vkGetDeviceProcAddr,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pName,
                },
            },
        },
    ["vkGetInstanceProcAddr"] = {
        ["returnType"] = PFN_vkVoidFunction,
        ["group"] = Device initialization,
        ["name"] = vkGetInstanceProcAddr,
        ["params"] = {
            [1] = {
                ["type"] = VkInstance ,
                ["name"] = instance,
                ["optional"] = true,
                },
            [2] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pName,
                },
            },
        },
    ["vkGetPhysicalDeviceDisplayPlaneProperties2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_display_properties2,
        ["name"] = vkGetPhysicalDeviceDisplayPlaneProperties2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayPlaneProperties2KHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkGetPhysicalDeviceQueueFamilyProperties"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceQueueFamilyProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pQueueFamilyPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pQueueFamilyPropertyCount,
                ["type"] = VkQueueFamilyProperties * ,
                ["name"] = pQueueFamilyProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkAcquireNextImageKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkAcquireNextImageKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = timeout,
                ["type"] = uint64_t ,
                },
            [4] = {
                ["externsync"] = true,
                ["type"] = VkSemaphore ,
                ["name"] = semaphore,
                ["optional"] = true,
                },
            [5] = {
                ["externsync"] = true,
                ["type"] = VkFence ,
                ["name"] = fence,
                ["optional"] = true,
                },
            [6] = {
                ["name"] = pImageIndex,
                ["type"] = uint32_t * ,
                },
            },
        },
    ["vkCmdEndTransformFeedbackEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdEndTransformFeedbackEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstCounterBuffer,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = counterBufferCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = counterBufferCount,
                ["type"] = const VkBuffer * ,
                ["name"] = pCounterBuffers,
                ["noautovalidity"] = true,
                },
            [5] = {
                ["len"] = counterBufferCount,
                ["type"] = const VkDeviceSize * ,
                ["name"] = pCounterBufferOffsets,
                ["optional"] = true,
                },
            },
        },
    ["vkEnumerateDeviceExtensionProperties"] = {
        ["returnType"] = VkResult,
        ["group"] = Extension discovery commands,
        ["name"] = vkEnumerateDeviceExtensionProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pLayerName,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPropertyCount,
                ["type"] = VkExtensionProperties * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkSubmitDebugUtilsMessageEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkSubmitDebugUtilsMessageEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = messageSeverity,
                ["type"] = VkDebugUtilsMessageSeverityFlagBitsEXT ,
                },
            [3] = {
                ["name"] = messageTypes,
                ["type"] = VkDebugUtilsMessageTypeFlagsEXT ,
                },
            [4] = {
                ["name"] = pCallbackData,
                ["type"] = const VkDebugUtilsMessengerCallbackDataEXT * ,
                },
            },
        },
    ["vkGetMemoryWin32HandleKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_memory_win32,
        ["name"] = vkGetMemoryWin32HandleKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetWin32HandleInfo,
                ["type"] = const VkMemoryGetWin32HandleInfoKHR * ,
                },
            [3] = {
                ["name"] = pHandle,
                ["type"] = HANDLE * ,
                },
            },
        },
    ["vkCmdSetViewportShadingRatePaletteNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_shading_rate_image,
        ["name"] = vkCmdSetViewportShadingRatePaletteNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstViewport,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = viewportCount,
                ["type"] = const VkShadingRatePaletteNV * ,
                ["name"] = pShadingRatePalettes,
                },
            },
        },
    ["vkCmdBeginConditionalRenderingEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_conditional_rendering,
        ["name"] = vkCmdBeginConditionalRenderingEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pConditionalRenderingBegin,
                ["type"] = const VkConditionalRenderingBeginInfoEXT * ,
                },
            },
        },
    ["vkDestroyShaderModule"] = {
        ["returnType"] = void,
        ["group"] = Shader commands,
        ["name"] = vkDestroyShaderModule,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkShaderModule ,
                ["name"] = shaderModule,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateFramebuffer"] = {
        ["returnType"] = VkResult,
        ["group"] = Pass commands,
        ["name"] = vkCreateFramebuffer,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkFramebufferCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pFramebuffer,
                ["type"] = VkFramebuffer * ,
                },
            },
        },
    ["vkGetMemoryFdKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_memory_fd,
        ["name"] = vkGetMemoryFdKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetFdInfo,
                ["type"] = const VkMemoryGetFdInfoKHR * ,
                },
            [3] = {
                ["name"] = pFd,
                ["type"] = int * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfacePresentModes2EXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["name"] = vkGetPhysicalDeviceSurfacePresentModes2EXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pSurfaceInfo,
                ["type"] = const VkPhysicalDeviceSurfaceInfo2KHR * ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPresentModeCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPresentModeCount,
                ["type"] = VkPresentModeKHR * ,
                ["name"] = pPresentModes,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateSampler"] = {
        ["returnType"] = VkResult,
        ["group"] = Sampler commands,
        ["name"] = vkCreateSampler,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkSamplerCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSampler,
                ["type"] = VkSampler * ,
                },
            },
        },
    ["vkCreateQueryPool"] = {
        ["returnType"] = VkResult,
        ["group"] = Query commands,
        ["name"] = vkCreateQueryPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkQueryPoolCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pQueryPool,
                ["type"] = VkQueryPool * ,
                },
            },
        },
    ["vkGetPhysicalDeviceXlibPresentationSupportKHR"] = {
        ["returnType"] = VkBool32,
        ["extension"] = VK_KHR_xlib_surface,
        ["name"] = vkGetPhysicalDeviceXlibPresentationSupportKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = dpy,
                ["type"] = Display * ,
                },
            [4] = {
                ["name"] = visualID,
                ["type"] = VisualID ,
                },
            },
        },
    ["vkCmdBindIndexBuffer"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBindIndexBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = indexType,
                ["type"] = VkIndexType ,
                },
            },
        },
    ["vkGetPhysicalDeviceQueueFamilyProperties2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceQueueFamilyProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pQueueFamilyPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pQueueFamilyPropertyCount,
                ["type"] = VkQueueFamilyProperties2 * ,
                ["name"] = pQueueFamilyProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDescriptorSetLayout"] = {
        ["returnType"] = VkResult,
        ["group"] = Descriptor set commands,
        ["name"] = vkCreateDescriptorSetLayout,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDescriptorSetLayoutCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSetLayout,
                ["type"] = VkDescriptorSetLayout * ,
                },
            },
        },
    ["vkCmdCopyBufferToImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdCopyBufferToImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcBuffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = dstImage,
                ["type"] = VkImage ,
                },
            [4] = {
                ["name"] = dstImageLayout,
                ["type"] = VkImageLayout ,
                },
            [5] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = regionCount,
                ["type"] = const VkBufferImageCopy * ,
                ["name"] = pRegions,
                },
            },
        },
    ["vkCreateWin32SurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_win32_surface,
        ["name"] = vkCreateWin32SurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkWin32SurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkDestroyValidationCacheEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_validation_cache,
        ["name"] = vkDestroyValidationCacheEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkValidationCacheEXT ,
                ["name"] = validationCache,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdSetStencilCompareMask"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetStencilCompareMask,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = faceMask,
                ["type"] = VkStencilFaceFlags ,
                },
            [3] = {
                ["name"] = compareMask,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDestroyEvent"] = {
        ["returnType"] = void,
        ["group"] = Event commands,
        ["name"] = vkDestroyEvent,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkEvent ,
                ["name"] = event,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkImportSemaphoreWin32HandleKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["name"] = vkImportSemaphoreWin32HandleKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pImportSemaphoreWin32HandleInfo,
                ["type"] = const VkImportSemaphoreWin32HandleInfoKHR * ,
                },
            },
        },
    ["vkSetEvent"] = {
        ["returnType"] = VkResult,
        ["group"] = Event commands,
        ["name"] = vkSetEvent,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkEvent ,
                ["name"] = event,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdNextSubpass"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdNextSubpass,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = contents,
                ["type"] = VkSubpassContents ,
                },
            },
        },
    ["vkCreateAndroidSurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_android_surface,
        ["name"] = vkCreateAndroidSurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkAndroidSurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkQueueBeginDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkQueueBeginDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = queue,
                ["type"] = VkQueue ,
                },
            [2] = {
                ["name"] = pLabelInfo,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                },
            },
        },
    ["vkGetAccelerationStructureMemoryRequirementsNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkGetAccelerationStructureMemoryRequirementsNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkAccelerationStructureMemoryRequirementsInfoNV * ,
                },
            [3] = {
                ["name"] = pMemoryRequirements,
                ["type"] = VkMemoryRequirements2KHR * ,
                },
            },
        },
    ["vkGetSwapchainGrallocUsageANDROID"] = {
        ["returnType"] = VkResult,
        ["name"] = vkGetSwapchainGrallocUsageANDROID,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = imageUsage,
                ["type"] = VkImageUsageFlags ,
                },
            [4] = {
                ["name"] = grallocUsage,
                ["type"] = int * ,
                },
            },
        },
    ["vkRegisterObjectsNVX"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkRegisterObjectsNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkObjectTableNVX ,
                ["name"] = objectTable,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = objectCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = objectCount,
                ["type"] = const VkObjectTableEntryNVX * const* ,
                ["name"] = ppObjectTableEntries,
                },
            [5] = {
                ["len"] = objectCount,
                ["type"] = const uint32_t * ,
                ["name"] = pObjectIndices,
                },
            },
        },
    ["vkReleaseFullScreenExclusiveModeEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["name"] = vkReleaseFullScreenExclusiveModeEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchain,
                ["type"] = VkSwapchainKHR ,
                },
            },
        },
    ["vkGetPhysicalDeviceProperties2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pProperties,
                ["type"] = VkPhysicalDeviceProperties2 * ,
                },
            },
        },
    ["vkCmdClearAttachments"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdClearAttachments,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = attachmentCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = attachmentCount,
                ["type"] = const VkClearAttachment * ,
                ["name"] = pAttachments,
                },
            [4] = {
                ["name"] = rectCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = rectCount,
                ["type"] = const VkClearRect * ,
                ["name"] = pRects,
                },
            },
        },
    ["vkCmdCopyImageToBuffer"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdCopyImageToBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcImage,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = srcImageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = regionCount,
                ["type"] = const VkBufferImageCopy * ,
                ["name"] = pRegions,
                },
            },
        },
    ["vkAcquireFullScreenExclusiveModeEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["name"] = vkAcquireFullScreenExclusiveModeEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchain,
                ["type"] = VkSwapchainKHR ,
                },
            },
        },
    ["vkGetImageViewHandleNVX"] = {
        ["returnType"] = uint32_t,
        ["extension"] = VK_NVX_image_view_handle,
        ["name"] = vkGetImageViewHandleNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkImageViewHandleInfoNVX * ,
                },
            },
        },
    ["vkGetBufferDeviceAddressEXT"] = {
        ["returnType"] = VkDeviceAddress,
        ["extension"] = VK_EXT_buffer_device_address,
        ["name"] = vkGetBufferDeviceAddressEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkBufferDeviceAddressInfoEXT * ,
                },
            },
        },
    ["vkCmdBlitImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBlitImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcImage,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = srcImageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = dstImage,
                ["type"] = VkImage ,
                },
            [5] = {
                ["name"] = dstImageLayout,
                ["type"] = VkImageLayout ,
                },
            [6] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = regionCount,
                ["type"] = const VkImageBlit * ,
                ["name"] = pRegions,
                },
            [8] = {
                ["name"] = filter,
                ["type"] = VkFilter ,
                },
            },
        },
    ["vkGetImageDrmFormatModifierPropertiesEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["name"] = vkGetImageDrmFormatModifierPropertiesEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = pProperties,
                ["type"] = VkImageDrmFormatModifierPropertiesEXT * ,
                },
            },
        },
    ["vkCmdBeginRenderPass2KHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_create_renderpass2,
        ["name"] = vkCmdBeginRenderPass2KHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pRenderPassBegin,
                ["type"] = const VkRenderPassBeginInfo * ,
                },
            [3] = {
                ["name"] = pSubpassBeginInfo,
                ["type"] = const VkSubpassBeginInfoKHR * ,
                },
            },
        },
    ["vkGetAccelerationStructureHandleNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkGetAccelerationStructureHandleNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = accelerationStructure,
                ["type"] = VkAccelerationStructureNV ,
                },
            [3] = {
                ["name"] = dataSize,
                ["type"] = size_t ,
                },
            [4] = {
                ["len"] = dataSize,
                ["type"] = void * ,
                ["name"] = pData,
                },
            },
        },
    ["vkBeginCommandBuffer"] = {
        ["returnType"] = VkResult,
        ["group"] = Command buffer commands,
        ["name"] = vkBeginCommandBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pBeginInfo,
                ["type"] = const VkCommandBufferBeginInfo * ,
                },
            },
        },
    ["vkGetPhysicalDeviceXcbPresentationSupportKHR"] = {
        ["returnType"] = VkBool32,
        ["extension"] = VK_KHR_xcb_surface,
        ["name"] = vkGetPhysicalDeviceXcbPresentationSupportKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = connection,
                ["type"] = xcb_connection_t * ,
                },
            [4] = {
                ["name"] = visual_id,
                ["type"] = xcb_visualid_t ,
                },
            },
        },
    ["vkCmdBuildAccelerationStructureNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCmdBuildAccelerationStructureNV,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkAccelerationStructureInfoNV * ,
                },
            [3] = {
                ["type"] = VkBuffer ,
                ["name"] = instanceData,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = instanceOffset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = update,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = dst,
                ["type"] = VkAccelerationStructureNV ,
                },
            [7] = {
                ["type"] = VkAccelerationStructureNV ,
                ["name"] = src,
                ["optional"] = true,
                },
            [8] = {
                ["name"] = scratch,
                ["type"] = VkBuffer ,
                },
            [9] = {
                ["name"] = scratchOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        },
    ["vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX"] = {
        ["returnType"] = void,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pFeatures,
                ["type"] = VkDeviceGeneratedCommandsFeaturesNVX * ,
                },
            [3] = {
                ["name"] = pLimits,
                ["type"] = VkDeviceGeneratedCommandsLimitsNVX * ,
                },
            },
        },
    ["vkCreateImage"] = {
        ["returnType"] = VkResult,
        ["group"] = Image commands,
        ["name"] = vkCreateImage,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkImageCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pImage,
                ["type"] = VkImage * ,
                },
            },
        },
    ["vkQueueSignalReleaseImageANDROID"] = {
        ["returnType"] = VkResult,
        ["name"] = vkQueueSignalReleaseImageANDROID,
        ["params"] = {
            [1] = {
                ["name"] = queue,
                ["type"] = VkQueue ,
                },
            [2] = {
                ["name"] = waitSemaphoreCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = pWaitSemaphores,
                ["type"] = const VkSemaphore * ,
                },
            [4] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [5] = {
                ["name"] = pNativeFenceFd,
                ["type"] = int * ,
                },
            },
        },
    ["vkGetPhysicalDeviceDisplayPlanePropertiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkGetPhysicalDeviceDisplayPlanePropertiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayPlanePropertiesKHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDisplayPlaneSurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkCreateDisplayPlaneSurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDisplaySurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkQueueBindSparse"] = {
        ["returnType"] = VkResult,
        ["group"] = Sparse resource memory management API commands,
        ["name"] = vkQueueBindSparse,
        ["params"] = {
            [1] = {
                ["type"] = VkQueue ,
                ["name"] = queue,
                ["externsync"] = true,
                },
            [2] = {
                ["type"] = uint32_t ,
                ["name"] = bindInfoCount,
                ["optional"] = true,
                },
            [3] = {
                ["len"] = bindInfoCount,
                ["type"] = const VkBindSparseInfo * ,
                ["name"] = pBindInfo,
                ["externsync"] = pBindInfo[].pWaitSemaphores[],pBindInfo[].pSignalSemaphores[],pBindInfo[].pBufferBinds[].buffer,pBindInfo[].pImageOpaqueBinds[].image,pBindInfo[].pImageBinds[].image,
                },
            [4] = {
                ["externsync"] = true,
                ["type"] = VkFence ,
                ["name"] = fence,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdBindShadingRateImageNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_shading_rate_image,
        ["name"] = vkCmdBindShadingRateImageNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = imageView,
                ["type"] = VkImageView ,
                },
            [3] = {
                ["name"] = imageLayout,
                ["type"] = VkImageLayout ,
                },
            },
        },
    ["vkCmdBeginQueryIndexedEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdBeginQueryIndexedEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = query,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["type"] = VkQueryControlFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = index,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkBindAccelerationStructureMemoryNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkBindAccelerationStructureMemoryNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = bindInfoCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindInfoCount,
                ["type"] = const VkBindAccelerationStructureMemoryInfoNV * ,
                ["name"] = pBindInfos,
                },
            },
        },
    ["vkCompileDeferredNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCompileDeferredNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pipeline,
                ["type"] = VkPipeline ,
                },
            [3] = {
                ["name"] = shader,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetImageMemoryRequirements2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_memory_requirements2,
        ["name"] = vkGetImageMemoryRequirements2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkImageMemoryRequirementsInfo2 * ,
                },
            [3] = {
                ["name"] = pMemoryRequirements,
                ["type"] = VkMemoryRequirements2 * ,
                },
            },
        },
    ["vkCmdDrawMeshTasksIndirectCountNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_mesh_shader,
        ["name"] = vkCmdDrawMeshTasksIndirectCountNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = countBuffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = countBufferOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = maxDrawCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetMemoryFdPropertiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_memory_fd,
        ["name"] = vkGetMemoryFdPropertiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            [3] = {
                ["name"] = fd,
                ["type"] = int ,
                },
            [4] = {
                ["name"] = pMemoryFdProperties,
                ["type"] = VkMemoryFdPropertiesKHR * ,
                },
            },
        },
    ["vkCmdEndQueryIndexedEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdEndQueryIndexedEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = query,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = index,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkBindBufferMemory"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory management API commands,
        ["name"] = vkBindBufferMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkBuffer ,
                ["name"] = buffer,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [4] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        },
    ["vkCmdDrawIndexedIndirectCountKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_draw_indirect_count,
        ["name"] = vkCmdDrawIndexedIndirectCountKHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = countBuffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = countBufferOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = maxDrawCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDevicePresentRectanglesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkGetPhysicalDevicePresentRectanglesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = VkSurfaceKHR ,
                ["name"] = surface,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pRectCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pRectCount,
                ["type"] = VkRect2D * ,
                ["name"] = pRects,
                ["optional"] = true,
                },
            },
        },
    ["vkAcquireXlibDisplayEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_acquire_xlib_display,
        ["name"] = vkAcquireXlibDisplayEXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = dpy,
                ["type"] = Display * ,
                },
            [3] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            },
        },
    ["vkCmdCopyAccelerationStructureNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCmdCopyAccelerationStructureNV,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = dst,
                ["type"] = VkAccelerationStructureNV ,
                },
            [3] = {
                ["name"] = src,
                ["type"] = VkAccelerationStructureNV ,
                },
            [4] = {
                ["name"] = mode,
                ["type"] = VkCopyAccelerationStructureModeNV ,
                },
            },
        },
    ["vkCmdBindTransformFeedbackBuffersEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_transform_feedback,
        ["name"] = vkCmdBindTransformFeedbackBuffersEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstBinding,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = bindingCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = bindingCount,
                ["type"] = const VkBuffer * ,
                ["name"] = pBuffers,
                },
            [5] = {
                ["len"] = bindingCount,
                ["type"] = const VkDeviceSize * ,
                ["name"] = pOffsets,
                },
            [6] = {
                ["len"] = bindingCount,
                ["type"] = const VkDeviceSize * ,
                ["name"] = pSizes,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdSetCheckpointNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_device_diagnostic_checkpoints,
        ["name"] = vkCmdSetCheckpointNV,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pCheckpointMarker,
                },
            },
        },
    ["vkGetMemoryAndroidHardwareBufferANDROID"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["name"] = vkGetMemoryAndroidHardwareBufferANDROID,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pInfo,
                ["type"] = const VkMemoryGetAndroidHardwareBufferInfoANDROID * ,
                },
            [3] = {
                ["name"] = pBuffer,
                ["type"] = struct AHardwareBuffer ** ,
                },
            },
        },
    ["vkCreateWaylandSurfaceKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_wayland_surface,
        ["name"] = vkCreateWaylandSurfaceKHR,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkWaylandSurfaceCreateInfoKHR * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkCmdEndRenderPass2KHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_create_renderpass2,
        ["name"] = vkCmdEndRenderPass2KHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pSubpassEndInfo,
                ["type"] = const VkSubpassEndInfoKHR * ,
                },
            },
        },
    ["vkAcquireNextImage2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkAcquireNextImage2KHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pAcquireInfo,
                ["type"] = const VkAcquireNextImageInfoKHR * ,
                },
            [3] = {
                ["name"] = pImageIndex,
                ["type"] = uint32_t * ,
                },
            },
        },
    ["vkDestroySwapchainKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkDestroySwapchainKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateRayTracingPipelinesNV"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCreateRayTracingPipelinesNV,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkPipelineCache ,
                ["name"] = pipelineCache,
                ["optional"] = true,
                },
            [3] = {
                ["name"] = createInfoCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = createInfoCount,
                ["type"] = const VkRayTracingPipelineCreateInfoNV * ,
                ["name"] = pCreateInfos,
                },
            [5] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = createInfoCount,
                ["type"] = VkPipeline * ,
                ["name"] = pPipelines,
                },
            },
        },
    ["vkDestroyImage"] = {
        ["returnType"] = void,
        ["group"] = Image commands,
        ["name"] = vkDestroyImage,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkImage ,
                ["name"] = image,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateSwapchainKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkCreateSwapchainKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkSwapchainCreateInfoKHR * ,
                ["name"] = pCreateInfo,
                ["externsync"] = pCreateInfo.surface,pCreateInfo.oldSwapchain,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSwapchain,
                ["type"] = VkSwapchainKHR * ,
                },
            },
        },
    ["vkGetMemoryHostPointerPropertiesEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_external_memory_host,
        ["name"] = vkGetMemoryHostPointerPropertiesEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            [3] = {
                ["type"] = const void * ,
                ["name"] = pHostPointer,
                ["optional"] = false,
                },
            [4] = {
                ["name"] = pMemoryHostPointerProperties,
                ["type"] = VkMemoryHostPointerPropertiesEXT * ,
                },
            },
        },
    ["vkDestroySampler"] = {
        ["returnType"] = void,
        ["group"] = Sampler commands,
        ["name"] = vkDestroySampler,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkSampler ,
                ["name"] = sampler,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdEndDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkCmdEndDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            },
        },
    ["vkCreateObjectTableNVX"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkCreateObjectTableNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkObjectTableCreateInfoNVX * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pObjectTable,
                ["type"] = VkObjectTableNVX * ,
                },
            },
        },
    ["vkDestroyDebugUtilsMessengerEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkDestroyDebugUtilsMessengerEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["type"] = VkDebugUtilsMessengerEXT ,
                ["name"] = messenger,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkBindImageMemory2"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_bind_memory2,
        ["name"] = vkBindImageMemory2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = bindInfoCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindInfoCount,
                ["type"] = const VkBindImageMemoryInfo * ,
                ["name"] = pBindInfos,
                },
            },
        },
    ["vkCmdEndQuery"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdEndQuery,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [3] = {
                ["name"] = query,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkCmdDispatch"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDispatch,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = groupCountX,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = groupCountY,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = groupCountZ,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkCmdPushDescriptorSetWithTemplateKHR"] = {
        ["returnType"] = void,
        ["extension"] = VK_KHR_push_descriptor,
        ["name"] = vkCmdPushDescriptorSetWithTemplateKHR,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = descriptorUpdateTemplate,
                ["type"] = VkDescriptorUpdateTemplate ,
                },
            [3] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [4] = {
                ["name"] = set,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pData,
                },
            },
        },
    ["vkQueueEndDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkQueueEndDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = queue,
                ["type"] = VkQueue ,
                },
            },
        },
    ["vkGetRenderAreaGranularity"] = {
        ["returnType"] = void,
        ["group"] = Pass commands,
        ["name"] = vkGetRenderAreaGranularity,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = renderPass,
                ["type"] = VkRenderPass ,
                },
            [3] = {
                ["name"] = pGranularity,
                ["type"] = VkExtent2D * ,
                },
            },
        },
    ["vkSetDebugUtilsObjectTagEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkSetDebugUtilsObjectTagEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkDebugUtilsObjectTagInfoEXT * ,
                ["name"] = pTagInfo,
                ["externsync"] = pTagInfo.objectHandle,
                },
            },
        },
    ["vkCmdSetDepthBias"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetDepthBias,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = depthBiasConstantFactor,
                ["type"] = float ,
                },
            [3] = {
                ["name"] = depthBiasClamp,
                ["type"] = float ,
                },
            [4] = {
                ["name"] = depthBiasSlopeFactor,
                ["type"] = float ,
                },
            },
        },
    ["vkGetSwapchainImagesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkGetSwapchainImagesKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapchain,
                ["type"] = VkSwapchainKHR ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pSwapchainImageCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pSwapchainImageCount,
                ["type"] = VkImage * ,
                ["name"] = pSwapchainImages,
                ["optional"] = true,
                },
            },
        },
    ["vkSetDebugUtilsObjectNameEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkSetDebugUtilsObjectNameEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkDebugUtilsObjectNameInfoEXT * ,
                ["name"] = pNameInfo,
                ["externsync"] = pNameInfo.objectHandle,
                },
            },
        },
    ["vkCmdDebugMarkerBeginEXT"] = {
        ["returnType"] = void,
        ["name"] = vkCmdDebugMarkerBeginEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = pMarkerInfo,
                ["type"] = const VkDebugMarkerMarkerInfoEXT * ,
                },
            },
        },
    ["vkCmdCopyBuffer"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdCopyBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcBuffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [4] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = regionCount,
                ["type"] = const VkBufferCopy * ,
                ["name"] = pRegions,
                },
            },
        },
    ["vkGetCalibratedTimestampsEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_calibrated_timestamps,
        ["name"] = vkGetCalibratedTimestampsEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = timestampCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = timestampCount,
                ["type"] = const VkCalibratedTimestampInfoEXT * ,
                ["name"] = pTimestampInfos,
                },
            [4] = {
                ["len"] = timestampCount,
                ["type"] = uint64_t * ,
                ["name"] = pTimestamps,
                },
            [5] = {
                ["name"] = pMaxDeviation,
                ["type"] = uint64_t * ,
                },
            },
        },
    ["vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_calibrated_timestamps,
        ["name"] = vkGetPhysicalDeviceCalibrateableTimeDomainsEXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pTimeDomainCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pTimeDomainCount,
                ["type"] = VkTimeDomainEXT * ,
                ["name"] = pTimeDomains,
                ["optional"] = true,
                },
            },
        },
    ["vkSetLocalDimmingAMD"] = {
        ["returnType"] = void,
        ["extension"] = VK_AMD_display_native_hdr,
        ["name"] = vkSetLocalDimmingAMD,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = swapChain,
                ["type"] = VkSwapchainKHR ,
                },
            [3] = {
                ["name"] = localDimmingEnable,
                ["type"] = VkBool32 ,
                },
            },
        },
    ["vkAcquireImageANDROID"] = {
        ["returnType"] = VkResult,
        ["name"] = vkAcquireImageANDROID,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = nativeFenceFd,
                ["type"] = int ,
                },
            [4] = {
                ["name"] = semaphore,
                ["type"] = VkSemaphore ,
                },
            [5] = {
                ["name"] = fence,
                ["type"] = VkFence ,
                },
            },
        },
    ["vkCreateImageView"] = {
        ["returnType"] = VkResult,
        ["group"] = Image view commands,
        ["name"] = vkCreateImageView,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkImageViewCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pView,
                ["type"] = VkImageView * ,
                },
            },
        },
    ["vkMergeValidationCachesEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_validation_cache,
        ["name"] = vkMergeValidationCachesEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkValidationCacheEXT ,
                ["name"] = dstCache,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = srcCacheCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = srcCacheCount,
                ["type"] = const VkValidationCacheEXT * ,
                ["name"] = pSrcCaches,
                },
            },
        },
    ["vkCmdPipelineBarrier"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdPipelineBarrier,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [3] = {
                ["name"] = dstStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [4] = {
                ["type"] = VkDependencyFlags ,
                ["name"] = dependencyFlags,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = memoryBarrierCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = memoryBarrierCount,
                ["type"] = const VkMemoryBarrier * ,
                ["name"] = pMemoryBarriers,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = bufferMemoryBarrierCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = bufferMemoryBarrierCount,
                ["type"] = const VkBufferMemoryBarrier * ,
                ["name"] = pBufferMemoryBarriers,
                },
            [9] = {
                ["type"] = uint32_t ,
                ["name"] = imageMemoryBarrierCount,
                ["optional"] = true,
                },
            [10] = {
                ["len"] = imageMemoryBarrierCount,
                ["type"] = const VkImageMemoryBarrier * ,
                ["name"] = pImageMemoryBarriers,
                },
            },
        },
    ["vkGetValidationCacheDataEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_validation_cache,
        ["name"] = vkGetValidationCacheDataEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = validationCache,
                ["type"] = VkValidationCacheEXT ,
                },
            [3] = {
                ["type"] = size_t * ,
                ["name"] = pDataSize,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pDataSize,
                ["type"] = void * ,
                ["name"] = pData,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateValidationCacheEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_validation_cache,
        ["name"] = vkCreateValidationCacheEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkValidationCacheCreateInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pValidationCache,
                ["type"] = VkValidationCacheEXT * ,
                },
            },
        },
    ["vkGetPhysicalDeviceDisplayProperties2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_display_properties2,
        ["name"] = vkGetPhysicalDeviceDisplayProperties2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayProperties2KHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdPushConstants"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdPushConstants,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [3] = {
                ["name"] = stageFlags,
                ["type"] = VkShaderStageFlags ,
                },
            [4] = {
                ["name"] = offset,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = size,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = size,
                ["type"] = const void * ,
                ["name"] = pValues,
                },
            },
        },
    ["vkDestroySamplerYcbcrConversion"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
        ["name"] = vkDestroySamplerYcbcrConversion,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkSamplerYcbcrConversion ,
                ["name"] = ycbcrConversion,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkGetBufferMemoryRequirements"] = {
        ["returnType"] = void,
        ["group"] = Memory management API commands,
        ["name"] = vkGetBufferMemoryRequirements,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = pMemoryRequirements,
                ["type"] = VkMemoryRequirements * ,
                },
            },
        },
    ["vkCreateSamplerYcbcrConversion"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
        ["name"] = vkCreateSamplerYcbcrConversion,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkSamplerYcbcrConversionCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pYcbcrConversion,
                ["type"] = VkSamplerYcbcrConversion * ,
                },
            },
        },
    ["vkImportFenceWin32HandleKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_fence_win32,
        ["name"] = vkImportFenceWin32HandleKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pImportFenceWin32HandleInfo,
                ["type"] = const VkImportFenceWin32HandleInfoKHR * ,
                },
            },
        },
    ["vkBindImageMemory"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory management API commands,
        ["name"] = vkBindImageMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkImage ,
                ["name"] = image,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [4] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        },
    ["vkGetImageSparseMemoryRequirements"] = {
        ["returnType"] = void,
        ["group"] = Sparse resource memory management API commands,
        ["name"] = vkGetImageSparseMemoryRequirements,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pSparseMemoryRequirementCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pSparseMemoryRequirementCount,
                ["type"] = VkSparseImageMemoryRequirements * ,
                ["name"] = pSparseMemoryRequirements,
                ["optional"] = true,
                },
            },
        },
    ["vkGetDisplayPlaneCapabilities2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_display_properties2,
        ["name"] = vkGetDisplayPlaneCapabilities2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pDisplayPlaneInfo,
                ["type"] = const VkDisplayPlaneInfo2KHR * ,
                },
            [3] = {
                ["name"] = pCapabilities,
                ["type"] = VkDisplayPlaneCapabilities2KHR * ,
                },
            },
        },
    ["vkGetPhysicalDeviceProperties"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pProperties,
                ["type"] = VkPhysicalDeviceProperties * ,
                },
            },
        },
    ["vkTrimCommandPool"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_maintenance1,
        ["name"] = vkTrimCommandPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkCommandPool ,
                ["name"] = commandPool,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = VkCommandPoolTrimFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateIOSSurfaceMVK"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_MVK_ios_surface,
        ["name"] = vkCreateIOSSurfaceMVK,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkIOSSurfaceCreateInfoMVK * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceFormats2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_surface_capabilities2,
        ["name"] = vkGetPhysicalDeviceSurfaceFormats2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pSurfaceInfo,
                ["type"] = const VkPhysicalDeviceSurfaceInfo2KHR * ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pSurfaceFormatCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pSurfaceFormatCount,
                ["type"] = VkSurfaceFormat2KHR * ,
                ["name"] = pSurfaceFormats,
                ["optional"] = true,
                },
            },
        },
    ["vkResetCommandBuffer"] = {
        ["returnType"] = VkResult,
        ["group"] = Command buffer commands,
        ["name"] = vkResetCommandBuffer,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["type"] = VkCommandBufferResetFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdSetDiscardRectangleEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_discard_rectangles,
        ["name"] = vkCmdSetDiscardRectangleEXT,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstDiscardRectangle,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = discardRectangleCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = discardRectangleCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pDiscardRectangles,
                },
            },
        },
    ["vkCmdSetBlendConstants"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetBlendConstants,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = blendConstants,
                ["type"] = const float [4] ,
                },
            },
        },
    ["vkCmdBindPipeline"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdBindPipeline,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [3] = {
                ["name"] = pipeline,
                ["type"] = VkPipeline ,
                },
            },
        },
    ["vkCreateMacOSSurfaceMVK"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_MVK_macos_surface,
        ["name"] = vkCreateMacOSSurfaceMVK,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkMacOSSurfaceCreateInfoMVK * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkCreateInstance"] = {
        ["returnType"] = VkResult,
        ["group"] = Device initialization,
        ["name"] = vkCreateInstance,
        ["params"] = {
            [1] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkInstanceCreateInfo * ,
                },
            [2] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [3] = {
                ["name"] = pInstance,
                ["type"] = VkInstance * ,
                },
            },
        },
    ["vkCmdDrawIndexedIndirect"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDrawIndexedIndirect,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = drawCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetFenceWin32HandleKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_fence_win32,
        ["name"] = vkGetFenceWin32HandleKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pGetWin32HandleInfo,
                ["type"] = const VkFenceGetWin32HandleInfoKHR * ,
                },
            [3] = {
                ["name"] = pHandle,
                ["type"] = HANDLE * ,
                },
            },
        },
    ["vkGetDeviceGroupSurfacePresentModesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkGetDeviceGroupSurfacePresentModesKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkSurfaceKHR ,
                ["name"] = surface,
                ["externsync"] = true,
                },
            [3] = {
                ["type"] = VkDeviceGroupPresentModeFlagsKHR * ,
                ["name"] = pModes,
                ["optional"] = false,true,
                },
            },
        },
    ["vkGetRefreshCycleDurationGOOGLE"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_GOOGLE_display_timing,
        ["name"] = vkGetRefreshCycleDurationGOOGLE,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = pDisplayTimingProperties,
                ["type"] = VkRefreshCycleDurationGOOGLE * ,
                },
            },
        },
    ["vkAllocateMemory"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory commands,
        ["name"] = vkAllocateMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pAllocateInfo,
                ["type"] = const VkMemoryAllocateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pMemory,
                ["type"] = VkDeviceMemory * ,
                },
            },
        },
    ["vkGetImageSubresourceLayout"] = {
        ["returnType"] = void,
        ["group"] = Image commands,
        ["name"] = vkGetImageSubresourceLayout,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = pSubresource,
                ["type"] = const VkImageSubresource * ,
                },
            [4] = {
                ["name"] = pLayout,
                ["type"] = VkSubresourceLayout * ,
                },
            },
        },
    ["vkUpdateDescriptorSetWithTemplate"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_descriptor_update_template,
        ["name"] = vkUpdateDescriptorSetWithTemplate,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkDescriptorSet ,
                ["name"] = descriptorSet,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = descriptorUpdateTemplate,
                ["type"] = VkDescriptorUpdateTemplate ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pData,
                },
            },
        },
    ["vkCmdSetViewport"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetViewport,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstViewport,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = viewportCount,
                ["type"] = const VkViewport * ,
                ["name"] = pViewports,
                },
            },
        },
    ["vkGetRandROutputDisplayEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_acquire_xlib_display,
        ["name"] = vkGetRandROutputDisplayEXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = dpy,
                ["type"] = Display * ,
                },
            [3] = {
                ["name"] = rrOutput,
                ["type"] = RROutput ,
                },
            [4] = {
                ["name"] = pDisplay,
                ["type"] = VkDisplayKHR * ,
                },
            },
        },
    ["vkGetSwapchainStatusKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_shared_presentable_image,
        ["name"] = vkGetSwapchainStatusKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdReserveSpaceForCommandsNVX"] = {
        ["returnType"] = void,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkCmdReserveSpaceForCommandsNVX,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pReserveSpaceInfo,
                ["type"] = const VkCmdReserveSpaceForCommandsInfoNVX * ,
                },
            },
        },
    ["vkCreateEvent"] = {
        ["returnType"] = VkResult,
        ["group"] = Event commands,
        ["name"] = vkCreateEvent,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkEventCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pEvent,
                ["type"] = VkEvent * ,
                },
            },
        },
    ["vkGetMemoryWin32HandlePropertiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_memory_win32,
        ["name"] = vkGetMemoryWin32HandlePropertiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            [3] = {
                ["name"] = handle,
                ["type"] = HANDLE ,
                },
            [4] = {
                ["name"] = pMemoryWin32HandleProperties,
                ["type"] = VkMemoryWin32HandlePropertiesKHR * ,
                },
            },
        },
    ["vkGetDeviceGroupPeerMemoryFeatures"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_device_group,
        ["name"] = vkGetDeviceGroupPeerMemoryFeatures,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = heapIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = localDeviceIndex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = remoteDeviceIndex,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = pPeerMemoryFeatures,
                ["type"] = VkPeerMemoryFeatureFlags * ,
                },
            },
        },
    ["vkGetPhysicalDeviceDisplayPropertiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_display,
        ["name"] = vkGetPhysicalDeviceDisplayPropertiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPropertyCount,
                ["type"] = VkDisplayPropertiesKHR * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkQueueSubmit"] = {
        ["returnType"] = VkResult,
        ["group"] = queue commands,
        ["name"] = vkQueueSubmit,
        ["params"] = {
            [1] = {
                ["type"] = VkQueue ,
                ["name"] = queue,
                ["externsync"] = true,
                },
            [2] = {
                ["type"] = uint32_t ,
                ["name"] = submitCount,
                ["optional"] = true,
                },
            [3] = {
                ["len"] = submitCount,
                ["type"] = const VkSubmitInfo * ,
                ["name"] = pSubmits,
                ["externsync"] = pSubmits[].pWaitSemaphores[],pSubmits[].pSignalSemaphores[],
                },
            [4] = {
                ["externsync"] = true,
                ["type"] = VkFence ,
                ["name"] = fence,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdEndRenderPass"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdEndRenderPass,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            },
        },
    ["vkCreateFence"] = {
        ["returnType"] = VkResult,
        ["group"] = Fence commands,
        ["name"] = vkCreateFence,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkFenceCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pFence,
                ["type"] = VkFence * ,
                },
            },
        },
    ["vkDestroySemaphore"] = {
        ["returnType"] = void,
        ["group"] = Queue semaphore commands,
        ["name"] = vkDestroySemaphore,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkSemaphore ,
                ["name"] = semaphore,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdTraceRaysNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCmdTraceRaysNV,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = raygenShaderBindingTableBuffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = raygenShaderBindingOffset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["type"] = VkBuffer ,
                ["name"] = missShaderBindingTableBuffer,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = missShaderBindingOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = missShaderBindingStride,
                ["type"] = VkDeviceSize ,
                },
            [7] = {
                ["type"] = VkBuffer ,
                ["name"] = hitShaderBindingTableBuffer,
                ["optional"] = true,
                },
            [8] = {
                ["name"] = hitShaderBindingOffset,
                ["type"] = VkDeviceSize ,
                },
            [9] = {
                ["name"] = hitShaderBindingStride,
                ["type"] = VkDeviceSize ,
                },
            [10] = {
                ["type"] = VkBuffer ,
                ["name"] = callableShaderBindingTableBuffer,
                ["optional"] = true,
                },
            [11] = {
                ["name"] = callableShaderBindingOffset,
                ["type"] = VkDeviceSize ,
                },
            [12] = {
                ["name"] = callableShaderBindingStride,
                ["type"] = VkDeviceSize ,
                },
            [13] = {
                ["name"] = width,
                ["type"] = uint32_t ,
                },
            [14] = {
                ["name"] = height,
                ["type"] = uint32_t ,
                },
            [15] = {
                ["name"] = depth,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceCapabilitiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_surface,
        ["name"] = vkGetPhysicalDeviceSurfaceCapabilitiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [3] = {
                ["name"] = pSurfaceCapabilities,
                ["type"] = VkSurfaceCapabilitiesKHR * ,
                },
            },
        },
    ["vkGetDeviceGroupPresentCapabilitiesKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_swapchain,
        ["name"] = vkGetDeviceGroupPresentCapabilitiesKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pDeviceGroupPresentCapabilities,
                ["type"] = VkDeviceGroupPresentCapabilitiesKHR * ,
                },
            },
        },
    ["vkCreateImagePipeSurfaceFUCHSIA"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_FUCHSIA_imagepipe_surface,
        ["name"] = vkCreateImagePipeSurfaceFUCHSIA,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkImagePipeSurfaceCreateInfoFUCHSIA * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pSurface,
                ["type"] = VkSurfaceKHR * ,
                },
            },
        },
    ["vkCmdClearDepthStencilImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdClearDepthStencilImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = imageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = pDepthStencil,
                ["type"] = const VkClearDepthStencilValue * ,
                },
            [5] = {
                ["name"] = rangeCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = rangeCount,
                ["type"] = const VkImageSubresourceRange * ,
                ["name"] = pRanges,
                },
            },
        },
    ["vkCmdWriteAccelerationStructuresPropertiesNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_ray_tracing,
        ["name"] = vkCmdWriteAccelerationStructuresPropertiesNV,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = accelerationStructureCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = accelerationStructureCount,
                ["type"] = const VkAccelerationStructureNV * ,
                ["name"] = pAccelerationStructures,
                },
            [4] = {
                ["name"] = queryType,
                ["type"] = VkQueryType ,
                },
            [5] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [6] = {
                ["name"] = firstQuery,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceCapabilities2KHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_get_surface_capabilities2,
        ["name"] = vkGetPhysicalDeviceSurfaceCapabilities2KHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pSurfaceInfo,
                ["type"] = const VkPhysicalDeviceSurfaceInfo2KHR * ,
                },
            [3] = {
                ["name"] = pSurfaceCapabilities,
                ["type"] = VkSurfaceCapabilities2KHR * ,
                },
            },
        },
    ["vkCmdWriteBufferMarkerAMD"] = {
        ["returnType"] = void,
        ["extension"] = VK_AMD_buffer_marker,
        ["name"] = vkCmdWriteBufferMarkerAMD,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pipelineStage,
                ["type"] = VkPipelineStageFlagBits ,
                },
            [3] = {
                ["name"] = dstBuffer,
                ["type"] = VkBuffer ,
                },
            [4] = {
                ["name"] = dstOffset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = marker,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkCmdDraw"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDraw,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = vertexCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = instanceCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = firstVertex,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = firstInstance,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkDestroyCommandPool"] = {
        ["returnType"] = void,
        ["group"] = Command pool commands,
        ["name"] = vkDestroyCommandPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkCommandPool ,
                ["name"] = commandPool,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDebugReportCallbackEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_debug_report,
        ["name"] = vkCreateDebugReportCallbackEXT,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDebugReportCallbackCreateInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pCallback,
                ["type"] = VkDebugReportCallbackEXT * ,
                },
            },
        },
    ["vkRegisterDeviceEventEXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_display_control,
        ["name"] = vkRegisterDeviceEventEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pDeviceEventInfo,
                ["type"] = const VkDeviceEventInfoEXT * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pFence,
                ["type"] = VkFence * ,
                },
            },
        },
    ["vkBindBufferMemory2"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_bind_memory2,
        ["name"] = vkBindBufferMemory2,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = bindInfoCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindInfoCount,
                ["type"] = const VkBindBufferMemoryInfo * ,
                ["name"] = pBindInfos,
                },
            },
        },
    ["vkFlushMappedMemoryRanges"] = {
        ["returnType"] = VkResult,
        ["group"] = Memory commands,
        ["name"] = vkFlushMappedMemoryRanges,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = memoryRangeCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = memoryRangeCount,
                ["type"] = const VkMappedMemoryRange * ,
                ["name"] = pMemoryRanges,
                },
            },
        },
    ["vkDestroyQueryPool"] = {
        ["returnType"] = void,
        ["group"] = Query commands,
        ["name"] = vkDestroyQueryPool,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkQueryPool ,
                ["name"] = queryPool,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkUnregisterObjectsNVX"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkUnregisterObjectsNVX,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkObjectTableNVX ,
                ["name"] = objectTable,
                ["externsync"] = true,
                },
            [3] = {
                ["name"] = objectCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = objectCount,
                ["type"] = const VkObjectEntryTypeNVX * ,
                ["name"] = pObjectEntryTypes,
                },
            [5] = {
                ["len"] = objectCount,
                ["type"] = const uint32_t * ,
                ["name"] = pObjectIndices,
                },
            },
        },
    ["vkCreateDevice"] = {
        ["returnType"] = VkResult,
        ["group"] = Device commands,
        ["name"] = vkCreateDevice,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDeviceCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pDevice,
                ["type"] = VkDevice * ,
                },
            },
        },
    ["vkCmdDrawMeshTasksNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_mesh_shader,
        ["name"] = vkCmdDrawMeshTasksNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = taskCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = firstTask,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkCmdExecuteCommands"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdExecuteCommands,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = commandBufferCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = commandBufferCount,
                ["type"] = const VkCommandBuffer * ,
                ["name"] = pCommandBuffers,
                },
            },
        },
    ["vkImportFenceFdKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_fence_fd,
        ["name"] = vkImportFenceFdKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pImportFenceFdInfo,
                ["type"] = const VkImportFenceFdInfoKHR * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceFormatsKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_surface,
        ["name"] = vkGetPhysicalDeviceSurfaceFormatsKHR,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pSurfaceFormatCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pSurfaceFormatCount,
                ["type"] = VkSurfaceFormatKHR * ,
                ["name"] = pSurfaceFormats,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateBuffer"] = {
        ["returnType"] = VkResult,
        ["group"] = Buffer commands,
        ["name"] = vkCreateBuffer,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkBufferCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pBuffer,
                ["type"] = VkBuffer * ,
                },
            },
        },
    ["vkGetPhysicalDeviceExternalFenceProperties"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_external_fence_capabilities,
        ["name"] = vkGetPhysicalDeviceExternalFenceProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pExternalFenceInfo,
                ["type"] = const VkPhysicalDeviceExternalFenceInfo * ,
                },
            [3] = {
                ["name"] = pExternalFenceProperties,
                ["type"] = VkExternalFenceProperties * ,
                },
            },
        },
    ["vkDestroyImageView"] = {
        ["returnType"] = void,
        ["group"] = Image view commands,
        ["name"] = vkDestroyImageView,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkImageView ,
                ["name"] = imageView,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateDescriptorUpdateTemplate"] = {
        ["returnType"] = VkResult,
        ["group"] = Promoted from VK_KHR_descriptor_update_template,
        ["name"] = vkCreateDescriptorUpdateTemplate,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkDescriptorUpdateTemplateCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pDescriptorUpdateTemplate,
                ["type"] = VkDescriptorUpdateTemplate * ,
                },
            },
        },
    ["vkCreateBufferView"] = {
        ["returnType"] = VkResult,
        ["group"] = Buffer view commands,
        ["name"] = vkCreateBufferView,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkBufferViewCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pView,
                ["type"] = VkBufferView * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSparseImageFormatProperties2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pFormatInfo,
                ["type"] = const VkPhysicalDeviceSparseImageFormatInfo2 * ,
                },
            [3] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [4] = {
                ["len"] = pPropertyCount,
                ["type"] = VkSparseImageFormatProperties2 * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    ["vkWaitForFences"] = {
        ["returnType"] = VkResult,
        ["group"] = Fence commands,
        ["name"] = vkWaitForFences,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = fenceCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = fenceCount,
                ["type"] = const VkFence * ,
                ["name"] = pFences,
                },
            [4] = {
                ["name"] = waitAll,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = timeout,
                ["type"] = uint64_t ,
                },
            },
        },
    ["vkDestroyDescriptorSetLayout"] = {
        ["returnType"] = void,
        ["group"] = Descriptor set commands,
        ["name"] = vkDestroyDescriptorSetLayout,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkDescriptorSetLayout ,
                ["name"] = descriptorSetLayout,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkEnumeratePhysicalDevices"] = {
        ["returnType"] = VkResult,
        ["group"] = Device initialization,
        ["name"] = vkEnumeratePhysicalDevices,
        ["params"] = {
            [1] = {
                ["name"] = instance,
                ["type"] = VkInstance ,
                },
            [2] = {
                ["type"] = uint32_t * ,
                ["name"] = pPhysicalDeviceCount,
                ["optional"] = false,true,
                },
            [3] = {
                ["len"] = pPhysicalDeviceCount,
                ["type"] = VkPhysicalDevice * ,
                ["name"] = pPhysicalDevices,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdProcessCommandsNVX"] = {
        ["returnType"] = void,
        ["extension"] = VK_NVX_device_generated_commands,
        ["name"] = vkCmdProcessCommandsNVX,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pProcessCommandsInfo,
                ["type"] = const VkCmdProcessCommandsInfoNVX * ,
                },
            },
        },
    ["vkGetPhysicalDeviceSurfaceCapabilities2EXT"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_EXT_display_surface_counter,
        ["name"] = vkGetPhysicalDeviceSurfaceCapabilities2EXT,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [3] = {
                ["name"] = pSurfaceCapabilities,
                ["type"] = VkSurfaceCapabilities2EXT * ,
                },
            },
        },
    ["vkAllocateDescriptorSets"] = {
        ["returnType"] = VkResult,
        ["group"] = Descriptor set commands,
        ["name"] = vkAllocateDescriptorSets,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkDescriptorSetAllocateInfo * ,
                ["name"] = pAllocateInfo,
                ["externsync"] = pAllocateInfo::descriptorPool,
                },
            [3] = {
                ["len"] = pAllocateInfo::descriptorSetCount,
                ["type"] = VkDescriptorSet * ,
                ["name"] = pDescriptorSets,
                },
            },
        },
    ["vkGetPhysicalDeviceMemoryProperties2"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
        ["name"] = vkGetPhysicalDeviceMemoryProperties2,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pMemoryProperties,
                ["type"] = VkPhysicalDeviceMemoryProperties2 * ,
                },
            },
        },
    ["vkGetPhysicalDeviceExternalSemaphoreProperties"] = {
        ["returnType"] = void,
        ["group"] = Promoted from VK_KHR_external_semaphore_capabilities,
        ["name"] = vkGetPhysicalDeviceExternalSemaphoreProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = pExternalSemaphoreInfo,
                ["type"] = const VkPhysicalDeviceExternalSemaphoreInfo * ,
                },
            [3] = {
                ["name"] = pExternalSemaphoreProperties,
                ["type"] = VkExternalSemaphoreProperties * ,
                },
            },
        },
    ["vkCmdInsertDebugUtilsLabelEXT"] = {
        ["returnType"] = void,
        ["extension"] = VK_EXT_debug_utils,
        ["name"] = vkCmdInsertDebugUtilsLabelEXT,
        ["params"] = {
            [1] = {
                ["name"] = commandBuffer,
                ["type"] = VkCommandBuffer ,
                },
            [2] = {
                ["name"] = pLabelInfo,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                },
            },
        },
    ["vkFreeMemory"] = {
        ["returnType"] = void,
        ["group"] = Memory commands,
        ["name"] = vkFreeMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCmdWriteTimestamp"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdWriteTimestamp,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = pipelineStage,
                ["type"] = VkPipelineStageFlagBits ,
                },
            [3] = {
                ["name"] = queryPool,
                ["type"] = VkQueryPool ,
                },
            [4] = {
                ["name"] = query,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkEnumerateInstanceVersion"] = {
        ["returnType"] = VkResult,
        ["group"] = Device Initialization,
        ["name"] = vkEnumerateInstanceVersion,
        ["params"] = {
            [1] = {
                ["name"] = pApiVersion,
                ["type"] = uint32_t * ,
                },
            },
        },
    ["vkImportSemaphoreFdKHR"] = {
        ["returnType"] = VkResult,
        ["extension"] = VK_KHR_external_semaphore_fd,
        ["name"] = vkImportSemaphoreFdKHR,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pImportSemaphoreFdInfo,
                ["type"] = const VkImportSemaphoreFdInfoKHR * ,
                },
            },
        },
    ["vkResetFences"] = {
        ["returnType"] = VkResult,
        ["group"] = Fence commands,
        ["name"] = vkResetFences,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = fenceCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = fenceCount,
                ["type"] = const VkFence * ,
                ["name"] = pFences,
                ["externsync"] = true,
                },
            },
        },
    ["vkResetEvent"] = {
        ["returnType"] = VkResult,
        ["group"] = Event commands,
        ["name"] = vkResetEvent,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkEvent ,
                ["name"] = event,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdSetViewportWScalingNV"] = {
        ["returnType"] = void,
        ["extension"] = VK_NV_clip_space_w_scaling,
        ["name"] = vkCmdSetViewportWScalingNV,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstViewport,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = viewportCount,
                ["type"] = const VkViewportWScalingNV * ,
                ["name"] = pViewportWScalings,
                },
            },
        },
    ["vkDebugMarkerSetObjectTagEXT"] = {
        ["returnType"] = VkResult,
        ["name"] = vkDebugMarkerSetObjectTagEXT,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = const VkDebugMarkerObjectTagInfoEXT * ,
                ["name"] = pTagInfo,
                ["externsync"] = pTagInfo.object,
                },
            },
        },
    ["vkDestroyPipelineLayout"] = {
        ["returnType"] = void,
        ["group"] = Pipeline layout commands,
        ["name"] = vkDestroyPipelineLayout,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["externsync"] = true,
                ["type"] = VkPipelineLayout ,
                ["name"] = pipelineLayout,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            },
        },
    ["vkCreateShaderModule"] = {
        ["returnType"] = VkResult,
        ["group"] = Shader commands,
        ["name"] = vkCreateShaderModule,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["name"] = pCreateInfo,
                ["type"] = const VkShaderModuleCreateInfo * ,
                },
            [3] = {
                ["type"] = const VkAllocationCallbacks * ,
                ["name"] = pAllocator,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pShaderModule,
                ["type"] = VkShaderModule * ,
                },
            },
        },
    ["vkCmdDrawIndirect"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdDrawIndirect,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = drawCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            },
        },
    ["vkGetPhysicalDeviceFormatProperties"] = {
        ["returnType"] = void,
        ["group"] = Device initialization,
        ["name"] = vkGetPhysicalDeviceFormatProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = pFormatProperties,
                ["type"] = VkFormatProperties * ,
                },
            },
        },
    ["vkCmdSetScissor"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdSetScissor,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = firstScissor,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = scissorCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = scissorCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pScissors,
                },
            },
        },
    ["vkUnmapMemory"] = {
        ["returnType"] = void,
        ["group"] = Memory commands,
        ["name"] = vkUnmapMemory,
        ["params"] = {
            [1] = {
                ["name"] = device,
                ["type"] = VkDevice ,
                },
            [2] = {
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                ["externsync"] = true,
                },
            },
        },
    ["vkCmdResetEvent"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdResetEvent,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = event,
                ["type"] = VkEvent ,
                },
            [3] = {
                ["name"] = stageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            },
        },
    ["vkCmdResolveImage"] = {
        ["returnType"] = void,
        ["group"] = Command buffer building commands,
        ["name"] = vkCmdResolveImage,
        ["params"] = {
            [1] = {
                ["type"] = VkCommandBuffer ,
                ["name"] = commandBuffer,
                ["externsync"] = true,
                },
            [2] = {
                ["name"] = srcImage,
                ["type"] = VkImage ,
                },
            [3] = {
                ["name"] = srcImageLayout,
                ["type"] = VkImageLayout ,
                },
            [4] = {
                ["name"] = dstImage,
                ["type"] = VkImage ,
                },
            [5] = {
                ["name"] = dstImageLayout,
                ["type"] = VkImageLayout ,
                },
            [6] = {
                ["name"] = regionCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = regionCount,
                ["type"] = const VkImageResolve * ,
                ["name"] = pRegions,
                },
            },
        },
    ["vkGetPhysicalDeviceSparseImageFormatProperties"] = {
        ["returnType"] = void,
        ["group"] = Sparse resource memory management API commands,
        ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties,
        ["params"] = {
            [1] = {
                ["name"] = physicalDevice,
                ["type"] = VkPhysicalDevice ,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkImageType ,
                },
            [4] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [5] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [6] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            [7] = {
                ["type"] = uint32_t * ,
                ["name"] = pPropertyCount,
                ["optional"] = false,true,
                },
            [8] = {
                ["len"] = pPropertyCount,
                ["type"] = VkSparseImageFormatProperties * ,
                ["name"] = pProperties,
                ["optional"] = true,
                },
            },
        },
    }
{
    ["VkPrimitiveTopology"] = {
        [1] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_LIST,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,
            ["value"] = 10,
            },
        },
    ["VkIndirectCommandsTokenTypeNVX"] = {
        [1] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX,
            ["value"] = 7,
            },
        ["extension"] = VK_NVX_device_generated_commands,
        },
    ["VkShadingRatePaletteEntryNV"] = {
        [1] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV,
            ["value"] = 11,
            },
        ["extension"] = VK_NV_shading_rate_image,
        },
    ["VkFrontFace"] = {
        [1] = {
            ["name"] = VK_FRONT_FACE_COUNTER_CLOCKWISE,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_FRONT_FACE_CLOCKWISE,
            ["value"] = 1,
            },
        },
    ["VkConservativeRasterizationModeEXT"] = {
        [1] = {
            ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT,
            ["value"] = 2,
            },
        ["extension"] = VK_EXT_conservative_rasterization,
        },
    ["VkDynamicState"] = {
        [1] = {
            ["name"] = VK_DYNAMIC_STATE_VIEWPORT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_DYNAMIC_STATE_SCISSOR,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_DYNAMIC_STATE_LINE_WIDTH,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_DYNAMIC_STATE_DEPTH_BIAS,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_DYNAMIC_STATE_BLEND_CONSTANTS,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_DYNAMIC_STATE_DEPTH_BOUNDS,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_DYNAMIC_STATE_STENCIL_WRITE_MASK,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_DYNAMIC_STATE_STENCIL_REFERENCE,
            ["value"] = 8,
            },
        [10] = {
            ["value"] = 1000088000,
            ["name"] = VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV,
            ["extension"] = VK_NV_clip_space_w_scaling,
            },
        [11] = {
            ["value"] = 1000100000,
            ["name"] = VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT,
            ["extension"] = VK_EXT_discard_rectangles,
            },
        [12] = {
            ["value"] = 1000144000,
            ["name"] = VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [13] = {
            ["value"] = 1000165004,
            ["name"] = VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [14] = {
            ["value"] = 1000165006,
            ["name"] = VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [15] = {
            ["value"] = 1000206001,
            ["name"] = VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV,
            ["extension"] = VK_NV_scissor_exclusive,
            },
        },
    ["VkImageViewType"] = {
        [1] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_1D,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_2D,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_3D,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_CUBE,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_1D_ARRAY,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_2D_ARRAY,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,
            ["value"] = 6,
            },
        },
    ["VkSamplerMipmapMode"] = {
        [1] = {
            ["name"] = VK_SAMPLER_MIPMAP_MODE_NEAREST,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLER_MIPMAP_MODE_LINEAR,
            ["value"] = 1,
            },
        },
    ["VkShaderInfoTypeAMD"] = {
        [1] = {
            ["name"] = VK_SHADER_INFO_TYPE_STATISTICS_AMD,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SHADER_INFO_TYPE_BINARY_AMD,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD,
            ["value"] = 2,
            },
        ["extension"] = VK_AMD_shader_info,
        },
    ["VkDeviceEventTypeEXT"] = {
        [1] = {
            ["name"] = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,
            ["value"] = 0,
            },
        ["extension"] = VK_EXT_display_control,
        },
    ["VkStencilOp"] = {
        [1] = {
            ["name"] = VK_STENCIL_OP_KEEP,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_STENCIL_OP_ZERO,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_STENCIL_OP_REPLACE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_STENCIL_OP_INCREMENT_AND_CLAMP,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_STENCIL_OP_DECREMENT_AND_CLAMP,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_STENCIL_OP_INVERT,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_STENCIL_OP_INCREMENT_AND_WRAP,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_STENCIL_OP_DECREMENT_AND_WRAP,
            ["value"] = 7,
            },
        },
    ["VkFilter"] = {
        [1] = {
            ["name"] = VK_FILTER_NEAREST,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_FILTER_LINEAR,
            ["value"] = 1,
            },
        [3] = {
            ["value"] = 1000016000,
            ["name"] = VK_FILTER_CUBIC_IMG,
            ["extension"] = VK_IMG_filter_cubic,
            },
        },
    ["VkBorderColor"] = {
        [1] = {
            ["name"] = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_BORDER_COLOR_INT_TRANSPARENT_BLACK,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_BORDER_COLOR_INT_OPAQUE_BLACK,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_BORDER_COLOR_INT_OPAQUE_WHITE,
            ["value"] = 5,
            },
        },
    ["VkImageTiling"] = {
        [1] = {
            ["name"] = VK_IMAGE_TILING_OPTIMAL,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_TILING_LINEAR,
            ["value"] = 1,
            },
        [3] = {
            ["value"] = 1000159000,
            ["name"] = VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        },
    ["VkComponentSwizzle"] = {
        [1] = {
            ["name"] = VK_COMPONENT_SWIZZLE_IDENTITY,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COMPONENT_SWIZZLE_ZERO,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_COMPONENT_SWIZZLE_ONE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_COMPONENT_SWIZZLE_R,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_COMPONENT_SWIZZLE_G,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_COMPONENT_SWIZZLE_B,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_COMPONENT_SWIZZLE_A,
            ["value"] = 6,
            },
        },
    ["VkColorSpaceKHR"] = {
        [1] = {
            ["name"] = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,
            ["value"] = 0,
            },
        [2] = {
            ["value"] = 1000105001,
            ["name"] = VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [3] = {
            ["value"] = 1000105002,
            ["name"] = VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [4] = {
            ["value"] = 1000105003,
            ["name"] = VK_COLOR_SPACE_DCI_P3_LINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [5] = {
            ["value"] = 1000105004,
            ["name"] = VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [6] = {
            ["value"] = 1000105005,
            ["name"] = VK_COLOR_SPACE_BT709_LINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [7] = {
            ["value"] = 1000105006,
            ["name"] = VK_COLOR_SPACE_BT709_NONLINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [8] = {
            ["value"] = 1000105007,
            ["name"] = VK_COLOR_SPACE_BT2020_LINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [9] = {
            ["value"] = 1000105008,
            ["name"] = VK_COLOR_SPACE_HDR10_ST2084_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [10] = {
            ["value"] = 1000105009,
            ["name"] = VK_COLOR_SPACE_DOLBYVISION_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [11] = {
            ["value"] = 1000105010,
            ["name"] = VK_COLOR_SPACE_HDR10_HLG_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [12] = {
            ["value"] = 1000105011,
            ["name"] = VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [13] = {
            ["value"] = 1000105012,
            ["name"] = VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [14] = {
            ["value"] = 1000105013,
            ["name"] = VK_COLOR_SPACE_PASS_THROUGH_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [15] = {
            ["value"] = 1000105014,
            ["name"] = VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT,
            ["extension"] = VK_EXT_swapchain_colorspace,
            },
        [16] = {
            ["value"] = 1000214000,
            ["name"] = VK_COLOR_SPACE_DISPLAY_NATIVE_AMD,
            ["extension"] = VK_AMD_display_native_hdr,
            },
        },
    ["VkBlendOp"] = {
        [1] = {
            ["name"] = VK_BLEND_OP_ADD,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_BLEND_OP_SUBTRACT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_BLEND_OP_REVERSE_SUBTRACT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_BLEND_OP_MIN,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_BLEND_OP_MAX,
            ["value"] = 4,
            },
        [6] = {
            ["value"] = 1000149000,
            ["name"] = VK_BLEND_OP_ZERO_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [7] = {
            ["value"] = 1000149001,
            ["name"] = VK_BLEND_OP_SRC_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [8] = {
            ["value"] = 1000149002,
            ["name"] = VK_BLEND_OP_DST_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [9] = {
            ["value"] = 1000149003,
            ["name"] = VK_BLEND_OP_SRC_OVER_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [10] = {
            ["value"] = 1000149004,
            ["name"] = VK_BLEND_OP_DST_OVER_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [11] = {
            ["value"] = 1000149005,
            ["name"] = VK_BLEND_OP_SRC_IN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [12] = {
            ["value"] = 1000149006,
            ["name"] = VK_BLEND_OP_DST_IN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [13] = {
            ["value"] = 1000149007,
            ["name"] = VK_BLEND_OP_SRC_OUT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [14] = {
            ["value"] = 1000149008,
            ["name"] = VK_BLEND_OP_DST_OUT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [15] = {
            ["value"] = 1000149009,
            ["name"] = VK_BLEND_OP_SRC_ATOP_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [16] = {
            ["value"] = 1000149010,
            ["name"] = VK_BLEND_OP_DST_ATOP_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [17] = {
            ["value"] = 1000149011,
            ["name"] = VK_BLEND_OP_XOR_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [18] = {
            ["value"] = 1000149012,
            ["name"] = VK_BLEND_OP_MULTIPLY_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [19] = {
            ["value"] = 1000149013,
            ["name"] = VK_BLEND_OP_SCREEN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [20] = {
            ["value"] = 1000149014,
            ["name"] = VK_BLEND_OP_OVERLAY_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [21] = {
            ["value"] = 1000149015,
            ["name"] = VK_BLEND_OP_DARKEN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [22] = {
            ["value"] = 1000149016,
            ["name"] = VK_BLEND_OP_LIGHTEN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [23] = {
            ["value"] = 1000149017,
            ["name"] = VK_BLEND_OP_COLORDODGE_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [24] = {
            ["value"] = 1000149018,
            ["name"] = VK_BLEND_OP_COLORBURN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [25] = {
            ["value"] = 1000149019,
            ["name"] = VK_BLEND_OP_HARDLIGHT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [26] = {
            ["value"] = 1000149020,
            ["name"] = VK_BLEND_OP_SOFTLIGHT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [27] = {
            ["value"] = 1000149021,
            ["name"] = VK_BLEND_OP_DIFFERENCE_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [28] = {
            ["value"] = 1000149022,
            ["name"] = VK_BLEND_OP_EXCLUSION_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [29] = {
            ["value"] = 1000149023,
            ["name"] = VK_BLEND_OP_INVERT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [30] = {
            ["value"] = 1000149024,
            ["name"] = VK_BLEND_OP_INVERT_RGB_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [31] = {
            ["value"] = 1000149025,
            ["name"] = VK_BLEND_OP_LINEARDODGE_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [32] = {
            ["value"] = 1000149026,
            ["name"] = VK_BLEND_OP_LINEARBURN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [33] = {
            ["value"] = 1000149027,
            ["name"] = VK_BLEND_OP_VIVIDLIGHT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [34] = {
            ["value"] = 1000149028,
            ["name"] = VK_BLEND_OP_LINEARLIGHT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [35] = {
            ["value"] = 1000149029,
            ["name"] = VK_BLEND_OP_PINLIGHT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [36] = {
            ["value"] = 1000149030,
            ["name"] = VK_BLEND_OP_HARDMIX_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [37] = {
            ["value"] = 1000149031,
            ["name"] = VK_BLEND_OP_HSL_HUE_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [38] = {
            ["value"] = 1000149032,
            ["name"] = VK_BLEND_OP_HSL_SATURATION_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [39] = {
            ["value"] = 1000149033,
            ["name"] = VK_BLEND_OP_HSL_COLOR_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [40] = {
            ["value"] = 1000149034,
            ["name"] = VK_BLEND_OP_HSL_LUMINOSITY_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [41] = {
            ["value"] = 1000149035,
            ["name"] = VK_BLEND_OP_PLUS_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [42] = {
            ["value"] = 1000149036,
            ["name"] = VK_BLEND_OP_PLUS_CLAMPED_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [43] = {
            ["value"] = 1000149037,
            ["name"] = VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [44] = {
            ["value"] = 1000149038,
            ["name"] = VK_BLEND_OP_PLUS_DARKER_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [45] = {
            ["value"] = 1000149039,
            ["name"] = VK_BLEND_OP_MINUS_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [46] = {
            ["value"] = 1000149040,
            ["name"] = VK_BLEND_OP_MINUS_CLAMPED_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [47] = {
            ["value"] = 1000149041,
            ["name"] = VK_BLEND_OP_CONTRAST_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [48] = {
            ["value"] = 1000149042,
            ["name"] = VK_BLEND_OP_INVERT_OVG_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [49] = {
            ["value"] = 1000149043,
            ["name"] = VK_BLEND_OP_RED_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [50] = {
            ["value"] = 1000149044,
            ["name"] = VK_BLEND_OP_GREEN_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [51] = {
            ["value"] = 1000149045,
            ["name"] = VK_BLEND_OP_BLUE_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        },
    ["VkResult"] = {
        [1] = {
            ["name"] = VK_SUCCESS,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_NOT_READY,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_TIMEOUT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_EVENT_SET,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_EVENT_RESET,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_INCOMPLETE,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_ERROR_OUT_OF_HOST_MEMORY,
            ["value"] = -1,
            },
        [8] = {
            ["name"] = VK_ERROR_OUT_OF_DEVICE_MEMORY,
            ["value"] = -2,
            },
        [9] = {
            ["name"] = VK_ERROR_INITIALIZATION_FAILED,
            ["value"] = -3,
            },
        [10] = {
            ["name"] = VK_ERROR_DEVICE_LOST,
            ["value"] = -4,
            },
        [11] = {
            ["name"] = VK_ERROR_MEMORY_MAP_FAILED,
            ["value"] = -5,
            },
        [12] = {
            ["name"] = VK_ERROR_LAYER_NOT_PRESENT,
            ["value"] = -6,
            },
        [13] = {
            ["name"] = VK_ERROR_EXTENSION_NOT_PRESENT,
            ["value"] = -7,
            },
        [14] = {
            ["name"] = VK_ERROR_FEATURE_NOT_PRESENT,
            ["value"] = -8,
            },
        [15] = {
            ["name"] = VK_ERROR_INCOMPATIBLE_DRIVER,
            ["value"] = -9,
            },
        [16] = {
            ["name"] = VK_ERROR_TOO_MANY_OBJECTS,
            ["value"] = -10,
            },
        [17] = {
            ["name"] = VK_ERROR_FORMAT_NOT_SUPPORTED,
            ["value"] = -11,
            },
        [18] = {
            ["name"] = VK_ERROR_FRAGMENTED_POOL,
            ["value"] = -12,
            },
        [19] = {
            ["value"] = 1000001000,
            ["name"] = VK_ERROR_SURFACE_LOST_KHR,
            ["extension"] = VK_KHR_surface,
            },
        [20] = {
            ["value"] = 1000001001,
            ["name"] = VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
            ["extension"] = VK_KHR_surface,
            },
        [21] = {
            ["value"] = 1000002003,
            ["name"] = VK_SUBOPTIMAL_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [22] = {
            ["value"] = 1000002004,
            ["name"] = VK_ERROR_OUT_OF_DATE_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [23] = {
            ["value"] = 1000004001,
            ["name"] = VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
            ["extension"] = VK_KHR_display_swapchain,
            },
        [24] = {
            ["value"] = 1000012001,
            ["name"] = VK_ERROR_VALIDATION_FAILED_EXT,
            ["extension"] = VK_EXT_debug_report,
            },
        [25] = {
            ["value"] = 1000013000,
            ["name"] = VK_ERROR_INVALID_SHADER_NV,
            ["extension"] = VK_NV_glsl_shader,
            },
        [26] = {
            ["value"] = 1000159000,
            ["name"] = VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [27] = {
            ["value"] = 1000162000,
            ["name"] = VK_ERROR_FRAGMENTATION_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [28] = {
            ["value"] = 1000175001,
            ["name"] = VK_ERROR_NOT_PERMITTED_EXT,
            ["extension"] = VK_EXT_global_priority,
            },
        [29] = {
            ["value"] = 1000245000,
            ["name"] = VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        [30] = {
            ["value"] = 1000256000,
            ["name"] = VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT,
            ["extension"] = VK_EXT_full_screen_exclusive,
            },
        },
    ["VkVendorId"] = {
        [1] = {
            ["name"] = VK_VENDOR_ID_VIV,
            ["value"] = 0x10001,
            },
        [2] = {
            ["name"] = VK_VENDOR_ID_VSI,
            ["value"] = 0x10002,
            },
        [3] = {
            ["name"] = VK_VENDOR_ID_KAZAN,
            ["value"] = 0x10003,
            },
        },
    ["VkPhysicalDeviceType"] = {
        [1] = {
            ["name"] = VK_PHYSICAL_DEVICE_TYPE_OTHER,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_PHYSICAL_DEVICE_TYPE_CPU,
            ["value"] = 4,
            },
        },
    ["VkValidationCacheHeaderVersionEXT"] = {
        [1] = {
            ["name"] = VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT,
            ["value"] = 1,
            },
        ["extension"] = VK_EXT_validation_cache,
        },
    ["VkIndexType"] = {
        [1] = {
            ["name"] = VK_INDEX_TYPE_UINT16,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_INDEX_TYPE_UINT32,
            ["value"] = 1,
            },
        [3] = {
            ["value"] = 1000166000,
            ["name"] = VK_INDEX_TYPE_NONE_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    ["VkAttachmentStoreOp"] = {
        [1] = {
            ["name"] = VK_ATTACHMENT_STORE_OP_STORE,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_ATTACHMENT_STORE_OP_DONT_CARE,
            ["value"] = 1,
            },
        },
    ["VkDescriptorUpdateTemplateType"] = {
        [1] = {
            ["name"] = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET,
            ["value"] = 0,
            },
        },
    ["VkStructureType"] = {
        [1] = {
            ["name"] = VK_STRUCTURE_TYPE_APPLICATION_INFO,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_STRUCTURE_TYPE_SUBMIT_INFO,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
            ["value"] = 15,
            },
        [17] = {
            ["name"] = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
            ["value"] = 16,
            },
        [18] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
            ["value"] = 17,
            },
        [19] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
            ["value"] = 18,
            },
        [20] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
            ["value"] = 19,
            },
        [21] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
            ["value"] = 20,
            },
        [22] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
            ["value"] = 21,
            },
        [23] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
            ["value"] = 22,
            },
        [24] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
            ["value"] = 23,
            },
        [25] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
            ["value"] = 24,
            },
        [26] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
            ["value"] = 25,
            },
        [27] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
            ["value"] = 26,
            },
        [28] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
            ["value"] = 27,
            },
        [29] = {
            ["name"] = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
            ["value"] = 28,
            },
        [30] = {
            ["name"] = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
            ["value"] = 29,
            },
        [31] = {
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
            ["value"] = 30,
            },
        [32] = {
            ["name"] = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
            ["value"] = 31,
            },
        [33] = {
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
            ["value"] = 32,
            },
        [34] = {
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
            ["value"] = 33,
            },
        [35] = {
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
            ["value"] = 34,
            },
        [36] = {
            ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
            ["value"] = 35,
            },
        [37] = {
            ["name"] = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
            ["value"] = 36,
            },
        [38] = {
            ["name"] = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
            ["value"] = 37,
            },
        [39] = {
            ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
            ["value"] = 38,
            },
        [40] = {
            ["name"] = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
            ["value"] = 39,
            },
        [41] = {
            ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
            ["value"] = 40,
            },
        [42] = {
            ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
            ["value"] = 41,
            },
        [43] = {
            ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
            ["value"] = 42,
            },
        [44] = {
            ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
            ["value"] = 43,
            },
        [45] = {
            ["name"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
            ["value"] = 44,
            },
        [46] = {
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
            ["value"] = 45,
            },
        [47] = {
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
            ["value"] = 46,
            },
        [48] = {
            ["name"] = VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,
            ["value"] = 47,
            },
        [49] = {
            ["name"] = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,
            ["value"] = 48,
            },
        [50] = {
            ["value"] = 1000002000,
            ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [51] = {
            ["value"] = 1000002001,
            ["name"] = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [52] = {
            ["value"] = 1000002007,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [53] = {
            ["value"] = 1000002008,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [54] = {
            ["value"] = 1000002009,
            ["name"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [55] = {
            ["value"] = 1000002010,
            ["name"] = VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [56] = {
            ["value"] = 1000002011,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [57] = {
            ["value"] = 1000002012,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [58] = {
            ["value"] = 1000003000,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_display,
            },
        [59] = {
            ["value"] = 1000003001,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_display,
            },
        [60] = {
            ["value"] = 1000004000,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,
            ["extension"] = VK_KHR_display_swapchain,
            },
        [61] = {
            ["value"] = 1000005000,
            ["name"] = VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_xlib_surface,
            },
        [62] = {
            ["value"] = 1000006000,
            ["name"] = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_xcb_surface,
            },
        [63] = {
            ["value"] = 1000007000,
            ["name"] = VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_wayland_surface,
            },
        [64] = {
            ["value"] = 1000009000,
            ["name"] = VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_android_surface,
            },
        [65] = {
            ["value"] = 1000010000,
            ["name"] = VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_win32_surface,
            },
        [66] = {
            ["value"] = 1000012000,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_debug_report,
            },
        [67] = {
            ["value"] = 1000019000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,
            ["extension"] = VK_AMD_rasterization_order,
            },
        [68] = {
            ["value"] = 1000027000,
            ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,
            ["extension"] = VK_NV_dedicated_allocation,
            },
        [69] = {
            ["value"] = 1000027001,
            ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,
            ["extension"] = VK_NV_dedicated_allocation,
            },
        [70] = {
            ["value"] = 1000027002,
            ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,
            ["extension"] = VK_NV_dedicated_allocation,
            },
        [71] = {
            ["value"] = 1000029000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [72] = {
            ["value"] = 1000029001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [73] = {
            ["value"] = 1000029002,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [74] = {
            ["value"] = 1000031000,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,
            ["extension"] = VK_NVX_image_view_handle,
            },
        [75] = {
            ["value"] = 1000042000,
            ["name"] = VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,
            ["extension"] = VK_AMD_texture_gather_bias_lod,
            },
        [76] = {
            ["value"] = 1000050000,
            ["name"] = VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP,
            ["extension"] = VK_GGP_stream_descriptor_surface,
            },
        [77] = {
            ["value"] = 1000051000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,
            ["extension"] = VK_NV_corner_sampled_image,
            },
        [78] = {
            ["value"] = 1000057000,
            ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,
            ["extension"] = VK_NV_external_memory,
            },
        [79] = {
            ["value"] = 1000057001,
            ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,
            ["extension"] = VK_NV_external_memory,
            },
        [80] = {
            ["value"] = 1000058000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV,
            ["extension"] = VK_NV_external_memory_win32,
            },
        [81] = {
            ["value"] = 1000058001,
            ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV,
            ["extension"] = VK_NV_external_memory_win32,
            },
        [82] = {
            ["value"] = 1000062000,
            ["name"] = VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,
            ["extension"] = VK_EXT_validation_flags,
            },
        [83] = {
            ["value"] = 1000063000,
            ["name"] = VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN,
            ["extension"] = VK_NN_vi_surface,
            },
        [84] = {
            ["value"] = 1000068000,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,
            ["extension"] = VK_EXT_astc_decode_mode,
            },
        [85] = {
            ["value"] = 1000068001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,
            ["extension"] = VK_EXT_astc_decode_mode,
            },
        [86] = {
            ["value"] = 1000074000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_memory_win32,
            },
        [87] = {
            ["value"] = 1000074001,
            ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_memory_win32,
            },
        [88] = {
            ["value"] = 1000074002,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR,
            ["extension"] = VK_KHR_external_memory_win32,
            },
        [89] = {
            ["value"] = 1000074003,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_memory_win32,
            },
        [90] = {
            ["value"] = 1000075000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_memory_fd,
            },
        [91] = {
            ["value"] = 1000075001,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,
            ["extension"] = VK_KHR_external_memory_fd,
            },
        [92] = {
            ["value"] = 1000075002,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_memory_fd,
            },
        [93] = {
            ["value"] = 1000076000,
            ["name"] = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR,
            ["extension"] = VK_KHR_win32_keyed_mutex,
            },
        [94] = {
            ["value"] = 1000079000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_win32,
            },
        [95] = {
            ["value"] = 1000079001,
            ["name"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_win32,
            },
        [96] = {
            ["value"] = 1000079002,
            ["name"] = VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_win32,
            },
        [97] = {
            ["value"] = 1000079003,
            ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_win32,
            },
        [98] = {
            ["value"] = 1000080000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_fd,
            },
        [99] = {
            ["value"] = 1000080001,
            ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_semaphore_fd,
            },
        [100] = {
            ["value"] = 1000081000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,
            ["extension"] = VK_KHR_push_descriptor,
            },
        [101] = {
            ["value"] = 1000082000,
            ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [102] = {
            ["value"] = 1000082001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [103] = {
            ["value"] = 1000082002,
            ["name"] = VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [104] = {
            ["value"] = 1000083000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR,
            ["extension"] = VK_KHR_shader_float16_int8,
            },
        [105] = {
            ["value"] = 1000085000,
            ["name"] = VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,
            ["extension"] = VK_KHR_incremental_present,
            },
        [106] = {
            ["value"] = 1000087000,
            ["name"] = VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [107] = {
            ["value"] = 1000087001,
            ["name"] = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [108] = {
            ["value"] = 1000087002,
            ["name"] = VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [109] = {
            ["value"] = 1000087003,
            ["name"] = VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [110] = {
            ["value"] = 1000087004,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [111] = {
            ["value"] = 1000087005,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [112] = {
            ["value"] = 1000088000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_clip_space_w_scaling,
            },
        [113] = {
            ["value"] = 1000091000,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,
            ["extension"] = VK_EXT_display_surface_counter,
            },
        [114] = {
            ["value"] = 1000092000,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,
            ["extension"] = VK_EXT_display_control,
            },
        [115] = {
            ["value"] = 1000092001,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,
            ["extension"] = VK_EXT_display_control,
            },
        [116] = {
            ["value"] = 1000092002,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,
            ["extension"] = VK_EXT_display_control,
            },
        [117] = {
            ["value"] = 1000092003,
            ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_display_control,
            },
        [118] = {
            ["value"] = 1000093000,
            ["name"] = VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,
            ["extension"] = VK_GOOGLE_display_timing,
            },
        [119] = {
            ["value"] = 1000098000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,
            ["extension"] = VK_NVX_multiview_per_view_attributes,
            },
        [120] = {
            ["value"] = 1000099000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_viewport_swizzle,
            },
        [121] = {
            ["value"] = 1000100000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,
            ["extension"] = VK_EXT_discard_rectangles,
            },
        [122] = {
            ["value"] = 1000100001,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_discard_rectangles,
            },
        [123] = {
            ["value"] = 1000102000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,
            ["extension"] = VK_EXT_conservative_rasterization,
            },
        [124] = {
            ["value"] = 1000102001,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_conservative_rasterization,
            },
        [125] = {
            ["value"] = 1000103000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,
            ["extension"] = VK_EXT_depth_clip_enable,
            },
        [126] = {
            ["value"] = 1000103001,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_depth_clip_enable,
            },
        [127] = {
            ["value"] = 1000106000,
            ["name"] = VK_STRUCTURE_TYPE_HDR_METADATA_EXT,
            ["extension"] = VK_EXT_hdr_metadata,
            },
        [128] = {
            ["value"] = 1000110000,
            ["name"] = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [129] = {
            ["value"] = 1000110001,
            ["name"] = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [130] = {
            ["value"] = 1000110002,
            ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [131] = {
            ["value"] = 1000110003,
            ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [132] = {
            ["value"] = 1000110004,
            ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [133] = {
            ["value"] = 1000110005,
            ["name"] = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [134] = {
            ["value"] = 1000110006,
            ["name"] = VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR,
            ["extension"] = VK_KHR_create_renderpass2,
            },
        [135] = {
            ["value"] = 1000112000,
            ["name"] = VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,
            ["extension"] = VK_KHR_shared_presentable_image,
            },
        [136] = {
            ["value"] = 1000115000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_fence_win32,
            },
        [137] = {
            ["value"] = 1000115001,
            ["name"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_fence_win32,
            },
        [138] = {
            ["value"] = 1000115002,
            ["name"] = VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR,
            ["extension"] = VK_KHR_external_fence_win32,
            },
        [139] = {
            ["value"] = 1000116000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_fence_fd,
            },
        [140] = {
            ["value"] = 1000116001,
            ["name"] = VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,
            ["extension"] = VK_KHR_external_fence_fd,
            },
        [141] = {
            ["value"] = 1000120000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,
            ["extension"] = VK_KHR_get_surface_capabilities2,
            },
        [142] = {
            ["value"] = 1000120001,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,
            ["extension"] = VK_KHR_get_surface_capabilities2,
            },
        [143] = {
            ["value"] = 1000120002,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,
            ["extension"] = VK_KHR_get_surface_capabilities2,
            },
        [144] = {
            ["value"] = 1000122000,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,
            ["extension"] = VK_KHR_get_display_properties2,
            },
        [145] = {
            ["value"] = 1000122001,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,
            ["extension"] = VK_KHR_get_display_properties2,
            },
        [146] = {
            ["value"] = 1000122002,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,
            ["extension"] = VK_KHR_get_display_properties2,
            },
        [147] = {
            ["value"] = 1000122003,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,
            ["extension"] = VK_KHR_get_display_properties2,
            },
        [148] = {
            ["value"] = 1000122004,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,
            ["extension"] = VK_KHR_get_display_properties2,
            },
        [149] = {
            ["value"] = 1000123000,
            ["name"] = VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK,
            ["extension"] = VK_MVK_ios_surface,
            },
        [150] = {
            ["value"] = 1000124000,
            ["name"] = VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK,
            ["extension"] = VK_MVK_macos_surface,
            },
        [151] = {
            ["value"] = 1000129000,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [152] = {
            ["value"] = 1000129001,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [153] = {
            ["value"] = 1000129002,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [154] = {
            ["value"] = 1000129003,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [155] = {
            ["value"] = 1000129004,
            ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [156] = {
            ["value"] = 1000130000,
            ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [157] = {
            ["value"] = 1000130001,
            ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [158] = {
            ["value"] = 1000130002,
            ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [159] = {
            ["value"] = 1000130003,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [160] = {
            ["value"] = 1000130004,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [161] = {
            ["value"] = 1000130005,
            ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [162] = {
            ["value"] = 1000131000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT,
            ["extension"] = VK_EXT_sampler_filter_minmax,
            },
        [163] = {
            ["value"] = 1000131001,
            ["name"] = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_sampler_filter_minmax,
            },
        [164] = {
            ["value"] = 1000139000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT,
            ["extension"] = VK_EXT_inline_uniform_block,
            },
        [165] = {
            ["value"] = 1000139001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT,
            ["extension"] = VK_EXT_inline_uniform_block,
            },
        [166] = {
            ["value"] = 1000139002,
            ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT,
            ["extension"] = VK_EXT_inline_uniform_block,
            },
        [167] = {
            ["value"] = 1000139003,
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_inline_uniform_block,
            },
        [168] = {
            ["value"] = 1000144000,
            ["name"] = VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [169] = {
            ["value"] = 1000144001,
            ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [170] = {
            ["value"] = 1000144002,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [171] = {
            ["value"] = 1000144003,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [172] = {
            ["value"] = 1000144004,
            ["name"] = VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [173] = {
            ["value"] = 1000148000,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR,
            ["extension"] = VK_KHR_image_format_list,
            },
        [174] = {
            ["value"] = 1000149000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [175] = {
            ["value"] = 1000149001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [176] = {
            ["value"] = 1000149002,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [177] = {
            ["value"] = 1000150000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_fragment_coverage_to_color,
            },
        [178] = {
            ["value"] = 1000153000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_framebuffer_mixed_samples,
            },
        [179] = {
            ["value"] = 1000159000,
            ["name"] = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [180] = {
            ["value"] = 1000159001,
            ["name"] = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [181] = {
            ["value"] = 1000159002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [182] = {
            ["value"] = 1000159003,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [183] = {
            ["value"] = 1000159004,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [184] = {
            ["value"] = 1000159005,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [185] = {
            ["value"] = 1000161000,
            ["name"] = VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_validation_cache,
            },
        [186] = {
            ["value"] = 1000161001,
            ["name"] = VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_validation_cache,
            },
        [187] = {
            ["value"] = 1000162000,
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [188] = {
            ["value"] = 1000162001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [189] = {
            ["value"] = 1000162002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [190] = {
            ["value"] = 1000162003,
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [191] = {
            ["value"] = 1000162004,
            ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        [192] = {
            ["value"] = 1000165000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [193] = {
            ["value"] = 1000165001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [194] = {
            ["value"] = 1000165002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [195] = {
            ["value"] = 1000165005,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [196] = {
            ["value"] = 1000166000,
            ["name"] = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [197] = {
            ["value"] = 1000166001,
            ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [198] = {
            ["value"] = 1000166003,
            ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [199] = {
            ["value"] = 1000166004,
            ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [200] = {
            ["value"] = 1000166005,
            ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [201] = {
            ["value"] = 1000166006,
            ["name"] = VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [202] = {
            ["value"] = 1000166007,
            ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [203] = {
            ["value"] = 1000166008,
            ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [204] = {
            ["value"] = 1000166009,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [205] = {
            ["value"] = 1000166011,
            ["name"] = VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [206] = {
            ["value"] = 1000166012,
            ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [207] = {
            ["value"] = 1000167000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,
            ["extension"] = VK_NV_representative_fragment_test,
            },
        [208] = {
            ["value"] = 1000167001,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_representative_fragment_test,
            },
        [209] = {
            ["value"] = 1000171000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,
            ["extension"] = VK_EXT_filter_cubic,
            },
        [210] = {
            ["value"] = 1000171001,
            ["name"] = VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,
            ["extension"] = VK_EXT_filter_cubic,
            },
        [211] = {
            ["value"] = 1000175000,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_global_priority,
            },
        [212] = {
            ["value"] = 1000178000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR,
            ["extension"] = VK_KHR_8bit_storage,
            },
        [213] = {
            ["value"] = 1000179000,
            ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,
            ["extension"] = VK_EXT_external_memory_host,
            },
        [214] = {
            ["value"] = 1000179001,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,
            ["extension"] = VK_EXT_external_memory_host,
            },
        [215] = {
            ["value"] = 1000179002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,
            ["extension"] = VK_EXT_external_memory_host,
            },
        [216] = {
            ["value"] = 1000181000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR,
            ["extension"] = VK_KHR_shader_atomic_int64,
            },
        [217] = {
            ["value"] = 1000185000,
            ["name"] = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,
            ["extension"] = VK_EXT_calibrated_timestamps,
            },
        [218] = {
            ["value"] = 1000186000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,
            ["extension"] = VK_AMD_shader_core_properties,
            },
        [219] = {
            ["value"] = 1000190000,
            ["name"] = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,
            ["extension"] = VK_AMD_memory_overallocation_behavior,
            },
        [220] = {
            ["value"] = 1000191000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,
            ["extension"] = VK_EXT_vertex_attribute_divisor,
            },
        [221] = {
            ["value"] = 1000191001,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_vertex_attribute_divisor,
            },
        [222] = {
            ["value"] = 1000191002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,
            ["extension"] = VK_EXT_vertex_attribute_divisor,
            },
        [223] = {
            ["value"] = 1000192000,
            ["name"] = VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP,
            ["extension"] = VK_GGP_frame_token,
            },
        [224] = {
            ["value"] = 1000193000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_pipeline_creation_feedback,
            },
        [225] = {
            ["value"] = 1000197000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR,
            ["extension"] = VK_KHR_driver_properties,
            },
        [226] = {
            ["value"] = 1000198000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR,
            ["extension"] = VK_KHR_shader_float_controls,
            },
        [227] = {
            ["value"] = 1000200000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR,
            ["extension"] = VK_KHR_depth_stencil_resolve,
            },
        [228] = {
            ["value"] = 1000200001,
            ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR,
            ["extension"] = VK_KHR_depth_stencil_resolve,
            },
        [229] = {
            ["value"] = 1000202000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,
            ["extension"] = VK_NV_compute_shader_derivatives,
            },
        [230] = {
            ["value"] = 1000203000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        [231] = {
            ["value"] = 1000203001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        [232] = {
            ["value"] = 1000204000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV,
            ["extension"] = VK_NV_fragment_shader_barycentric,
            },
        [233] = {
            ["value"] = 1000205000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,
            ["extension"] = VK_NV_shader_image_footprint,
            },
        [234] = {
            ["value"] = 1000206000,
            ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,
            ["extension"] = VK_NV_scissor_exclusive,
            },
        [235] = {
            ["value"] = 1000206002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,
            ["extension"] = VK_NV_scissor_exclusive,
            },
        [236] = {
            ["value"] = 1000207000,
            ["name"] = VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,
            ["extension"] = VK_NV_device_diagnostic_checkpoints,
            },
        [237] = {
            ["value"] = 1000207001,
            ["name"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,
            ["extension"] = VK_NV_device_diagnostic_checkpoints,
            },
        [238] = {
            ["value"] = 1000212000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR,
            ["extension"] = VK_KHR_vulkan_memory_model,
            },
        [239] = {
            ["value"] = 1000213000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,
            ["extension"] = VK_EXT_pci_bus_info,
            },
        [240] = {
            ["value"] = 1000214000,
            ["name"] = VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,
            ["extension"] = VK_AMD_display_native_hdr,
            },
        [241] = {
            ["value"] = 1000214001,
            ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,
            ["extension"] = VK_AMD_display_native_hdr,
            },
        [242] = {
            ["value"] = 1000215000,
            ["name"] = VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA,
            ["extension"] = VK_FUCHSIA_imagepipe_surface,
            },
        [243] = {
            ["value"] = 1000218000,
            ["name"] = VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_metal_surface,
            },
        [244] = {
            ["value"] = 1000219000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        [245] = {
            ["value"] = 1000219001,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        [246] = {
            ["value"] = 1000219002,
            ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        [247] = {
            ["value"] = 1000222000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT,
            ["extension"] = VK_EXT_scalar_block_layout,
            },
        [248] = {
            ["value"] = 1000238000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,
            ["extension"] = VK_EXT_memory_budget,
            },
        [249] = {
            ["value"] = 1000239000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,
            ["extension"] = VK_EXT_memory_priority,
            },
        [250] = {
            ["value"] = 1000239001,
            ["name"] = VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,
            ["extension"] = VK_EXT_memory_priority,
            },
        [251] = {
            ["value"] = 1000240000,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,
            ["extension"] = VK_KHR_surface_protected_capabilities,
            },
        [252] = {
            ["value"] = 1000241000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,
            ["extension"] = VK_NV_dedicated_allocation_image_aliasing,
            },
        [253] = {
            ["value"] = 1000245000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        [254] = {
            ["value"] = 1000245001,
            ["name"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        [255] = {
            ["value"] = 1000245002,
            ["name"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        [256] = {
            ["value"] = 1000247000,
            ["name"] = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_separate_stencil_usage,
            },
        [257] = {
            ["value"] = 1000248000,
            ["name"] = VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,
            ["extension"] = VK_EXT_validation_features,
            },
        [258] = {
            ["value"] = 1000250000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,
            ["extension"] = VK_NV_cooperative_matrix,
            },
        [259] = {
            ["value"] = 1000250001,
            ["name"] = VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,
            ["extension"] = VK_NV_cooperative_matrix,
            },
        [260] = {
            ["value"] = 1000250002,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,
            ["extension"] = VK_NV_cooperative_matrix,
            },
        [261] = {
            ["value"] = 1000253000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,
            ["extension"] = VK_EXT_ycbcr_image_arrays,
            },
        [262] = {
            ["value"] = 1000256000,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT,
            ["extension"] = VK_EXT_full_screen_exclusive,
            },
        [263] = {
            ["value"] = 1000256002,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT,
            ["extension"] = VK_EXT_full_screen_exclusive,
            },
        [264] = {
            ["value"] = 1000256001,
            ["name"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT,
            ["extension"] = VK_EXT_full_screen_exclusive,
            },
        [265] = {
            ["value"] = 1000257000,
            ["name"] = VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,
            ["extension"] = VK_EXT_headless_surface,
            },
        [266] = {
            ["value"] = 1000262000,
            ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT,
            ["extension"] = VK_EXT_host_query_reset,
            },
        },
    ["VkFormat"] = {
        [1] = {
            ["name"] = VK_FORMAT_UNDEFINED,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_FORMAT_R4G4_UNORM_PACK8,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_FORMAT_R4G4B4A4_UNORM_PACK16,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_FORMAT_B4G4R4A4_UNORM_PACK16,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_FORMAT_R5G6B5_UNORM_PACK16,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_FORMAT_B5G6R5_UNORM_PACK16,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_FORMAT_R5G5B5A1_UNORM_PACK16,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_FORMAT_B5G5R5A1_UNORM_PACK16,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_FORMAT_A1R5G5B5_UNORM_PACK16,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_FORMAT_R8_UNORM,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_FORMAT_R8_SNORM,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_FORMAT_R8_USCALED,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_FORMAT_R8_SSCALED,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_FORMAT_R8_UINT,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_FORMAT_R8_SINT,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_FORMAT_R8_SRGB,
            ["value"] = 15,
            },
        [17] = {
            ["name"] = VK_FORMAT_R8G8_UNORM,
            ["value"] = 16,
            },
        [18] = {
            ["name"] = VK_FORMAT_R8G8_SNORM,
            ["value"] = 17,
            },
        [19] = {
            ["name"] = VK_FORMAT_R8G8_USCALED,
            ["value"] = 18,
            },
        [20] = {
            ["name"] = VK_FORMAT_R8G8_SSCALED,
            ["value"] = 19,
            },
        [21] = {
            ["name"] = VK_FORMAT_R8G8_UINT,
            ["value"] = 20,
            },
        [22] = {
            ["name"] = VK_FORMAT_R8G8_SINT,
            ["value"] = 21,
            },
        [23] = {
            ["name"] = VK_FORMAT_R8G8_SRGB,
            ["value"] = 22,
            },
        [24] = {
            ["name"] = VK_FORMAT_R8G8B8_UNORM,
            ["value"] = 23,
            },
        [25] = {
            ["name"] = VK_FORMAT_R8G8B8_SNORM,
            ["value"] = 24,
            },
        [26] = {
            ["name"] = VK_FORMAT_R8G8B8_USCALED,
            ["value"] = 25,
            },
        [27] = {
            ["name"] = VK_FORMAT_R8G8B8_SSCALED,
            ["value"] = 26,
            },
        [28] = {
            ["name"] = VK_FORMAT_R8G8B8_UINT,
            ["value"] = 27,
            },
        [29] = {
            ["name"] = VK_FORMAT_R8G8B8_SINT,
            ["value"] = 28,
            },
        [30] = {
            ["name"] = VK_FORMAT_R8G8B8_SRGB,
            ["value"] = 29,
            },
        [31] = {
            ["name"] = VK_FORMAT_B8G8R8_UNORM,
            ["value"] = 30,
            },
        [32] = {
            ["name"] = VK_FORMAT_B8G8R8_SNORM,
            ["value"] = 31,
            },
        [33] = {
            ["name"] = VK_FORMAT_B8G8R8_USCALED,
            ["value"] = 32,
            },
        [34] = {
            ["name"] = VK_FORMAT_B8G8R8_SSCALED,
            ["value"] = 33,
            },
        [35] = {
            ["name"] = VK_FORMAT_B8G8R8_UINT,
            ["value"] = 34,
            },
        [36] = {
            ["name"] = VK_FORMAT_B8G8R8_SINT,
            ["value"] = 35,
            },
        [37] = {
            ["name"] = VK_FORMAT_B8G8R8_SRGB,
            ["value"] = 36,
            },
        [38] = {
            ["name"] = VK_FORMAT_R8G8B8A8_UNORM,
            ["value"] = 37,
            },
        [39] = {
            ["name"] = VK_FORMAT_R8G8B8A8_SNORM,
            ["value"] = 38,
            },
        [40] = {
            ["name"] = VK_FORMAT_R8G8B8A8_USCALED,
            ["value"] = 39,
            },
        [41] = {
            ["name"] = VK_FORMAT_R8G8B8A8_SSCALED,
            ["value"] = 40,
            },
        [42] = {
            ["name"] = VK_FORMAT_R8G8B8A8_UINT,
            ["value"] = 41,
            },
        [43] = {
            ["name"] = VK_FORMAT_R8G8B8A8_SINT,
            ["value"] = 42,
            },
        [44] = {
            ["name"] = VK_FORMAT_R8G8B8A8_SRGB,
            ["value"] = 43,
            },
        [45] = {
            ["name"] = VK_FORMAT_B8G8R8A8_UNORM,
            ["value"] = 44,
            },
        [46] = {
            ["name"] = VK_FORMAT_B8G8R8A8_SNORM,
            ["value"] = 45,
            },
        [47] = {
            ["name"] = VK_FORMAT_B8G8R8A8_USCALED,
            ["value"] = 46,
            },
        [48] = {
            ["name"] = VK_FORMAT_B8G8R8A8_SSCALED,
            ["value"] = 47,
            },
        [49] = {
            ["name"] = VK_FORMAT_B8G8R8A8_UINT,
            ["value"] = 48,
            },
        [50] = {
            ["name"] = VK_FORMAT_B8G8R8A8_SINT,
            ["value"] = 49,
            },
        [51] = {
            ["name"] = VK_FORMAT_B8G8R8A8_SRGB,
            ["value"] = 50,
            },
        [52] = {
            ["name"] = VK_FORMAT_A8B8G8R8_UNORM_PACK32,
            ["value"] = 51,
            },
        [53] = {
            ["name"] = VK_FORMAT_A8B8G8R8_SNORM_PACK32,
            ["value"] = 52,
            },
        [54] = {
            ["name"] = VK_FORMAT_A8B8G8R8_USCALED_PACK32,
            ["value"] = 53,
            },
        [55] = {
            ["name"] = VK_FORMAT_A8B8G8R8_SSCALED_PACK32,
            ["value"] = 54,
            },
        [56] = {
            ["name"] = VK_FORMAT_A8B8G8R8_UINT_PACK32,
            ["value"] = 55,
            },
        [57] = {
            ["name"] = VK_FORMAT_A8B8G8R8_SINT_PACK32,
            ["value"] = 56,
            },
        [58] = {
            ["name"] = VK_FORMAT_A8B8G8R8_SRGB_PACK32,
            ["value"] = 57,
            },
        [59] = {
            ["name"] = VK_FORMAT_A2R10G10B10_UNORM_PACK32,
            ["value"] = 58,
            },
        [60] = {
            ["name"] = VK_FORMAT_A2R10G10B10_SNORM_PACK32,
            ["value"] = 59,
            },
        [61] = {
            ["name"] = VK_FORMAT_A2R10G10B10_USCALED_PACK32,
            ["value"] = 60,
            },
        [62] = {
            ["name"] = VK_FORMAT_A2R10G10B10_SSCALED_PACK32,
            ["value"] = 61,
            },
        [63] = {
            ["name"] = VK_FORMAT_A2R10G10B10_UINT_PACK32,
            ["value"] = 62,
            },
        [64] = {
            ["name"] = VK_FORMAT_A2R10G10B10_SINT_PACK32,
            ["value"] = 63,
            },
        [65] = {
            ["name"] = VK_FORMAT_A2B10G10R10_UNORM_PACK32,
            ["value"] = 64,
            },
        [66] = {
            ["name"] = VK_FORMAT_A2B10G10R10_SNORM_PACK32,
            ["value"] = 65,
            },
        [67] = {
            ["name"] = VK_FORMAT_A2B10G10R10_USCALED_PACK32,
            ["value"] = 66,
            },
        [68] = {
            ["name"] = VK_FORMAT_A2B10G10R10_SSCALED_PACK32,
            ["value"] = 67,
            },
        [69] = {
            ["name"] = VK_FORMAT_A2B10G10R10_UINT_PACK32,
            ["value"] = 68,
            },
        [70] = {
            ["name"] = VK_FORMAT_A2B10G10R10_SINT_PACK32,
            ["value"] = 69,
            },
        [71] = {
            ["name"] = VK_FORMAT_R16_UNORM,
            ["value"] = 70,
            },
        [72] = {
            ["name"] = VK_FORMAT_R16_SNORM,
            ["value"] = 71,
            },
        [73] = {
            ["name"] = VK_FORMAT_R16_USCALED,
            ["value"] = 72,
            },
        [74] = {
            ["name"] = VK_FORMAT_R16_SSCALED,
            ["value"] = 73,
            },
        [75] = {
            ["name"] = VK_FORMAT_R16_UINT,
            ["value"] = 74,
            },
        [76] = {
            ["name"] = VK_FORMAT_R16_SINT,
            ["value"] = 75,
            },
        [77] = {
            ["name"] = VK_FORMAT_R16_SFLOAT,
            ["value"] = 76,
            },
        [78] = {
            ["name"] = VK_FORMAT_R16G16_UNORM,
            ["value"] = 77,
            },
        [79] = {
            ["name"] = VK_FORMAT_R16G16_SNORM,
            ["value"] = 78,
            },
        [80] = {
            ["name"] = VK_FORMAT_R16G16_USCALED,
            ["value"] = 79,
            },
        [81] = {
            ["name"] = VK_FORMAT_R16G16_SSCALED,
            ["value"] = 80,
            },
        [82] = {
            ["name"] = VK_FORMAT_R16G16_UINT,
            ["value"] = 81,
            },
        [83] = {
            ["name"] = VK_FORMAT_R16G16_SINT,
            ["value"] = 82,
            },
        [84] = {
            ["name"] = VK_FORMAT_R16G16_SFLOAT,
            ["value"] = 83,
            },
        [85] = {
            ["name"] = VK_FORMAT_R16G16B16_UNORM,
            ["value"] = 84,
            },
        [86] = {
            ["name"] = VK_FORMAT_R16G16B16_SNORM,
            ["value"] = 85,
            },
        [87] = {
            ["name"] = VK_FORMAT_R16G16B16_USCALED,
            ["value"] = 86,
            },
        [88] = {
            ["name"] = VK_FORMAT_R16G16B16_SSCALED,
            ["value"] = 87,
            },
        [89] = {
            ["name"] = VK_FORMAT_R16G16B16_UINT,
            ["value"] = 88,
            },
        [90] = {
            ["name"] = VK_FORMAT_R16G16B16_SINT,
            ["value"] = 89,
            },
        [91] = {
            ["name"] = VK_FORMAT_R16G16B16_SFLOAT,
            ["value"] = 90,
            },
        [92] = {
            ["name"] = VK_FORMAT_R16G16B16A16_UNORM,
            ["value"] = 91,
            },
        [93] = {
            ["name"] = VK_FORMAT_R16G16B16A16_SNORM,
            ["value"] = 92,
            },
        [94] = {
            ["name"] = VK_FORMAT_R16G16B16A16_USCALED,
            ["value"] = 93,
            },
        [95] = {
            ["name"] = VK_FORMAT_R16G16B16A16_SSCALED,
            ["value"] = 94,
            },
        [96] = {
            ["name"] = VK_FORMAT_R16G16B16A16_UINT,
            ["value"] = 95,
            },
        [97] = {
            ["name"] = VK_FORMAT_R16G16B16A16_SINT,
            ["value"] = 96,
            },
        [98] = {
            ["name"] = VK_FORMAT_R16G16B16A16_SFLOAT,
            ["value"] = 97,
            },
        [99] = {
            ["name"] = VK_FORMAT_R32_UINT,
            ["value"] = 98,
            },
        [100] = {
            ["name"] = VK_FORMAT_R32_SINT,
            ["value"] = 99,
            },
        [101] = {
            ["name"] = VK_FORMAT_R32_SFLOAT,
            ["value"] = 100,
            },
        [102] = {
            ["name"] = VK_FORMAT_R32G32_UINT,
            ["value"] = 101,
            },
        [103] = {
            ["name"] = VK_FORMAT_R32G32_SINT,
            ["value"] = 102,
            },
        [104] = {
            ["name"] = VK_FORMAT_R32G32_SFLOAT,
            ["value"] = 103,
            },
        [105] = {
            ["name"] = VK_FORMAT_R32G32B32_UINT,
            ["value"] = 104,
            },
        [106] = {
            ["name"] = VK_FORMAT_R32G32B32_SINT,
            ["value"] = 105,
            },
        [107] = {
            ["name"] = VK_FORMAT_R32G32B32_SFLOAT,
            ["value"] = 106,
            },
        [108] = {
            ["name"] = VK_FORMAT_R32G32B32A32_UINT,
            ["value"] = 107,
            },
        [109] = {
            ["name"] = VK_FORMAT_R32G32B32A32_SINT,
            ["value"] = 108,
            },
        [110] = {
            ["name"] = VK_FORMAT_R32G32B32A32_SFLOAT,
            ["value"] = 109,
            },
        [111] = {
            ["name"] = VK_FORMAT_R64_UINT,
            ["value"] = 110,
            },
        [112] = {
            ["name"] = VK_FORMAT_R64_SINT,
            ["value"] = 111,
            },
        [113] = {
            ["name"] = VK_FORMAT_R64_SFLOAT,
            ["value"] = 112,
            },
        [114] = {
            ["name"] = VK_FORMAT_R64G64_UINT,
            ["value"] = 113,
            },
        [115] = {
            ["name"] = VK_FORMAT_R64G64_SINT,
            ["value"] = 114,
            },
        [116] = {
            ["name"] = VK_FORMAT_R64G64_SFLOAT,
            ["value"] = 115,
            },
        [117] = {
            ["name"] = VK_FORMAT_R64G64B64_UINT,
            ["value"] = 116,
            },
        [118] = {
            ["name"] = VK_FORMAT_R64G64B64_SINT,
            ["value"] = 117,
            },
        [119] = {
            ["name"] = VK_FORMAT_R64G64B64_SFLOAT,
            ["value"] = 118,
            },
        [120] = {
            ["name"] = VK_FORMAT_R64G64B64A64_UINT,
            ["value"] = 119,
            },
        [121] = {
            ["name"] = VK_FORMAT_R64G64B64A64_SINT,
            ["value"] = 120,
            },
        [122] = {
            ["name"] = VK_FORMAT_R64G64B64A64_SFLOAT,
            ["value"] = 121,
            },
        [123] = {
            ["name"] = VK_FORMAT_B10G11R11_UFLOAT_PACK32,
            ["value"] = 122,
            },
        [124] = {
            ["name"] = VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
            ["value"] = 123,
            },
        [125] = {
            ["name"] = VK_FORMAT_D16_UNORM,
            ["value"] = 124,
            },
        [126] = {
            ["name"] = VK_FORMAT_X8_D24_UNORM_PACK32,
            ["value"] = 125,
            },
        [127] = {
            ["name"] = VK_FORMAT_D32_SFLOAT,
            ["value"] = 126,
            },
        [128] = {
            ["name"] = VK_FORMAT_S8_UINT,
            ["value"] = 127,
            },
        [129] = {
            ["name"] = VK_FORMAT_D16_UNORM_S8_UINT,
            ["value"] = 128,
            },
        [130] = {
            ["name"] = VK_FORMAT_D24_UNORM_S8_UINT,
            ["value"] = 129,
            },
        [131] = {
            ["name"] = VK_FORMAT_D32_SFLOAT_S8_UINT,
            ["value"] = 130,
            },
        [132] = {
            ["name"] = VK_FORMAT_BC1_RGB_UNORM_BLOCK,
            ["value"] = 131,
            },
        [133] = {
            ["name"] = VK_FORMAT_BC1_RGB_SRGB_BLOCK,
            ["value"] = 132,
            },
        [134] = {
            ["name"] = VK_FORMAT_BC1_RGBA_UNORM_BLOCK,
            ["value"] = 133,
            },
        [135] = {
            ["name"] = VK_FORMAT_BC1_RGBA_SRGB_BLOCK,
            ["value"] = 134,
            },
        [136] = {
            ["name"] = VK_FORMAT_BC2_UNORM_BLOCK,
            ["value"] = 135,
            },
        [137] = {
            ["name"] = VK_FORMAT_BC2_SRGB_BLOCK,
            ["value"] = 136,
            },
        [138] = {
            ["name"] = VK_FORMAT_BC3_UNORM_BLOCK,
            ["value"] = 137,
            },
        [139] = {
            ["name"] = VK_FORMAT_BC3_SRGB_BLOCK,
            ["value"] = 138,
            },
        [140] = {
            ["name"] = VK_FORMAT_BC4_UNORM_BLOCK,
            ["value"] = 139,
            },
        [141] = {
            ["name"] = VK_FORMAT_BC4_SNORM_BLOCK,
            ["value"] = 140,
            },
        [142] = {
            ["name"] = VK_FORMAT_BC5_UNORM_BLOCK,
            ["value"] = 141,
            },
        [143] = {
            ["name"] = VK_FORMAT_BC5_SNORM_BLOCK,
            ["value"] = 142,
            },
        [144] = {
            ["name"] = VK_FORMAT_BC6H_UFLOAT_BLOCK,
            ["value"] = 143,
            },
        [145] = {
            ["name"] = VK_FORMAT_BC6H_SFLOAT_BLOCK,
            ["value"] = 144,
            },
        [146] = {
            ["name"] = VK_FORMAT_BC7_UNORM_BLOCK,
            ["value"] = 145,
            },
        [147] = {
            ["name"] = VK_FORMAT_BC7_SRGB_BLOCK,
            ["value"] = 146,
            },
        [148] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,
            ["value"] = 147,
            },
        [149] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,
            ["value"] = 148,
            },
        [150] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,
            ["value"] = 149,
            },
        [151] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,
            ["value"] = 150,
            },
        [152] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,
            ["value"] = 151,
            },
        [153] = {
            ["name"] = VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,
            ["value"] = 152,
            },
        [154] = {
            ["name"] = VK_FORMAT_EAC_R11_UNORM_BLOCK,
            ["value"] = 153,
            },
        [155] = {
            ["name"] = VK_FORMAT_EAC_R11_SNORM_BLOCK,
            ["value"] = 154,
            },
        [156] = {
            ["name"] = VK_FORMAT_EAC_R11G11_UNORM_BLOCK,
            ["value"] = 155,
            },
        [157] = {
            ["name"] = VK_FORMAT_EAC_R11G11_SNORM_BLOCK,
            ["value"] = 156,
            },
        [158] = {
            ["name"] = VK_FORMAT_ASTC_4x4_UNORM_BLOCK,
            ["value"] = 157,
            },
        [159] = {
            ["name"] = VK_FORMAT_ASTC_4x4_SRGB_BLOCK,
            ["value"] = 158,
            },
        [160] = {
            ["name"] = VK_FORMAT_ASTC_5x4_UNORM_BLOCK,
            ["value"] = 159,
            },
        [161] = {
            ["name"] = VK_FORMAT_ASTC_5x4_SRGB_BLOCK,
            ["value"] = 160,
            },
        [162] = {
            ["name"] = VK_FORMAT_ASTC_5x5_UNORM_BLOCK,
            ["value"] = 161,
            },
        [163] = {
            ["name"] = VK_FORMAT_ASTC_5x5_SRGB_BLOCK,
            ["value"] = 162,
            },
        [164] = {
            ["name"] = VK_FORMAT_ASTC_6x5_UNORM_BLOCK,
            ["value"] = 163,
            },
        [165] = {
            ["name"] = VK_FORMAT_ASTC_6x5_SRGB_BLOCK,
            ["value"] = 164,
            },
        [166] = {
            ["name"] = VK_FORMAT_ASTC_6x6_UNORM_BLOCK,
            ["value"] = 165,
            },
        [167] = {
            ["name"] = VK_FORMAT_ASTC_6x6_SRGB_BLOCK,
            ["value"] = 166,
            },
        [168] = {
            ["name"] = VK_FORMAT_ASTC_8x5_UNORM_BLOCK,
            ["value"] = 167,
            },
        [169] = {
            ["name"] = VK_FORMAT_ASTC_8x5_SRGB_BLOCK,
            ["value"] = 168,
            },
        [170] = {
            ["name"] = VK_FORMAT_ASTC_8x6_UNORM_BLOCK,
            ["value"] = 169,
            },
        [171] = {
            ["name"] = VK_FORMAT_ASTC_8x6_SRGB_BLOCK,
            ["value"] = 170,
            },
        [172] = {
            ["name"] = VK_FORMAT_ASTC_8x8_UNORM_BLOCK,
            ["value"] = 171,
            },
        [173] = {
            ["name"] = VK_FORMAT_ASTC_8x8_SRGB_BLOCK,
            ["value"] = 172,
            },
        [174] = {
            ["name"] = VK_FORMAT_ASTC_10x5_UNORM_BLOCK,
            ["value"] = 173,
            },
        [175] = {
            ["name"] = VK_FORMAT_ASTC_10x5_SRGB_BLOCK,
            ["value"] = 174,
            },
        [176] = {
            ["name"] = VK_FORMAT_ASTC_10x6_UNORM_BLOCK,
            ["value"] = 175,
            },
        [177] = {
            ["name"] = VK_FORMAT_ASTC_10x6_SRGB_BLOCK,
            ["value"] = 176,
            },
        [178] = {
            ["name"] = VK_FORMAT_ASTC_10x8_UNORM_BLOCK,
            ["value"] = 177,
            },
        [179] = {
            ["name"] = VK_FORMAT_ASTC_10x8_SRGB_BLOCK,
            ["value"] = 178,
            },
        [180] = {
            ["name"] = VK_FORMAT_ASTC_10x10_UNORM_BLOCK,
            ["value"] = 179,
            },
        [181] = {
            ["name"] = VK_FORMAT_ASTC_10x10_SRGB_BLOCK,
            ["value"] = 180,
            },
        [182] = {
            ["name"] = VK_FORMAT_ASTC_12x10_UNORM_BLOCK,
            ["value"] = 181,
            },
        [183] = {
            ["name"] = VK_FORMAT_ASTC_12x10_SRGB_BLOCK,
            ["value"] = 182,
            },
        [184] = {
            ["name"] = VK_FORMAT_ASTC_12x12_UNORM_BLOCK,
            ["value"] = 183,
            },
        [185] = {
            ["name"] = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,
            ["value"] = 184,
            },
        [186] = {
            ["value"] = 1000055000,
            ["name"] = VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [187] = {
            ["value"] = 1000055001,
            ["name"] = VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [188] = {
            ["value"] = 1000055002,
            ["name"] = VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [189] = {
            ["value"] = 1000055003,
            ["name"] = VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [190] = {
            ["value"] = 1000055004,
            ["name"] = VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [191] = {
            ["value"] = 1000055005,
            ["name"] = VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [192] = {
            ["value"] = 1000055006,
            ["name"] = VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        [193] = {
            ["value"] = 1000055007,
            ["name"] = VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,
            ["extension"] = VK_IMG_format_pvrtc,
            },
        },
    ["VkSamplerYcbcrRange"] = {
        [1] = {
            ["name"] = VK_SAMPLER_YCBCR_RANGE_ITU_FULL,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW,
            ["value"] = 1,
            },
        },
    ["VkCopyAccelerationStructureModeNV"] = {
        [1] = {
            ["name"] = VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV,
            ["value"] = 1,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkDescriptorType"] = {
        [1] = {
            ["name"] = VK_DESCRIPTOR_TYPE_SAMPLER,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,
            ["value"] = 10,
            },
        [12] = {
            ["value"] = 1000139000,
            ["name"] = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT,
            ["extension"] = VK_EXT_inline_uniform_block,
            },
        [13] = {
            ["value"] = 1000166000,
            ["name"] = VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    ["VkPointClippingBehavior"] = {
        [1] = {
            ["name"] = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY,
            ["value"] = 1,
            },
        },
    ["VkImageType"] = {
        [1] = {
            ["name"] = VK_IMAGE_TYPE_1D,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_TYPE_2D,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_TYPE_3D,
            ["value"] = 2,
            },
        },
    ["VkScopeNV"] = {
        [1] = {
            ["name"] = VK_SCOPE_DEVICE_NV,
            ["value"] = 1,
            },
        [2] = {
            ["name"] = VK_SCOPE_WORKGROUP_NV,
            ["value"] = 2,
            },
        [3] = {
            ["name"] = VK_SCOPE_SUBGROUP_NV,
            ["value"] = 3,
            },
        [4] = {
            ["name"] = VK_SCOPE_QUEUE_FAMILY_NV,
            ["value"] = 5,
            },
        ["extension"] = VK_NV_cooperative_matrix,
        },
    ["VkViewportCoordinateSwizzleNV"] = {
        [1] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV,
            ["value"] = 7,
            },
        ["extension"] = VK_NV_viewport_swizzle,
        },
    ["VkDisplayEventTypeEXT"] = {
        [1] = {
            ["name"] = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,
            ["value"] = 0,
            },
        ["extension"] = VK_EXT_display_control,
        },
    ["VkSamplerReductionModeEXT"] = {
        [1] = {
            ["name"] = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLER_REDUCTION_MODE_MIN_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SAMPLER_REDUCTION_MODE_MAX_EXT,
            ["value"] = 2,
            },
        ["extension"] = VK_EXT_sampler_filter_minmax,
        },
    ["VkSystemAllocationScope"] = {
        [1] = {
            ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_OBJECT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_CACHE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_DEVICE,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,
            ["value"] = 4,
            },
        },
    ["VkChromaLocation"] = {
        [1] = {
            ["name"] = VK_CHROMA_LOCATION_COSITED_EVEN,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_CHROMA_LOCATION_MIDPOINT,
            ["value"] = 1,
            },
        },
    ["VkImageLayout"] = {
        [1] = {
            ["name"] = VK_IMAGE_LAYOUT_UNDEFINED,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_LAYOUT_GENERAL,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_IMAGE_LAYOUT_PREINITIALIZED,
            ["value"] = 8,
            },
        [10] = {
            ["value"] = 1000002002,
            ["name"] = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [11] = {
            ["value"] = 1000112000,
            ["name"] = VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR,
            ["extension"] = VK_KHR_shared_presentable_image,
            },
        [12] = {
            ["value"] = 1000165003,
            ["name"] = VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [13] = {
            ["value"] = 1000219000,
            ["name"] = VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkValidationFeatureEnableEXT"] = {
        [1] = {
            ["name"] = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT,
            ["value"] = 1,
            },
        },
    ["VkRayTracingShaderGroupTypeNV"] = {
        [1] = {
            ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV,
            ["value"] = 2,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkLogicOp"] = {
        [1] = {
            ["name"] = VK_LOGIC_OP_CLEAR,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_LOGIC_OP_AND,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_LOGIC_OP_AND_REVERSE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_LOGIC_OP_COPY,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_LOGIC_OP_AND_INVERTED,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_LOGIC_OP_NO_OP,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_LOGIC_OP_XOR,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_LOGIC_OP_OR,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_LOGIC_OP_NOR,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_LOGIC_OP_EQUIVALENT,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_LOGIC_OP_INVERT,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_LOGIC_OP_OR_REVERSE,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_LOGIC_OP_COPY_INVERTED,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_LOGIC_OP_OR_INVERTED,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_LOGIC_OP_NAND,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_LOGIC_OP_SET,
            ["value"] = 15,
            },
        },
    ["VkDriverIdKHR"] = {
        [1] = {
            ["name"] = VK_DRIVER_ID_AMD_PROPRIETARY_KHR,
            ["value"] = 1,
            },
        [2] = {
            ["name"] = VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR,
            ["value"] = 2,
            },
        [3] = {
            ["name"] = VK_DRIVER_ID_MESA_RADV_KHR,
            ["value"] = 3,
            },
        [4] = {
            ["name"] = VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR,
            ["value"] = 4,
            },
        [5] = {
            ["name"] = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR,
            ["value"] = 5,
            },
        [6] = {
            ["name"] = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR,
            ["value"] = 6,
            },
        [7] = {
            ["name"] = VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR,
            ["value"] = 7,
            },
        [8] = {
            ["name"] = VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR,
            ["value"] = 8,
            },
        [9] = {
            ["name"] = VK_DRIVER_ID_ARM_PROPRIETARY_KHR,
            ["value"] = 9,
            },
        [10] = {
            ["name"] = VK_DRIVER_ID_GOOGLE_PASTEL_KHR,
            ["value"] = 10,
            },
        [11] = {
            ["name"] = VK_DRIVER_ID_GGP_PROPRIETARY_KHR,
            ["value"] = 11,
            },
        ["extension"] = VK_KHR_driver_properties,
        },
    ["VkQueueGlobalPriorityEXT"] = {
        [1] = {
            ["name"] = VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT,
            ["value"] = 128,
            },
        [2] = {
            ["name"] = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT,
            ["value"] = 256,
            },
        [3] = {
            ["name"] = VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT,
            ["value"] = 512,
            },
        [4] = {
            ["name"] = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT,
            ["value"] = 1024,
            },
        ["extension"] = VK_EXT_global_priority,
        },
    ["VkDisplayPowerStateEXT"] = {
        [1] = {
            ["name"] = VK_DISPLAY_POWER_STATE_OFF_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_DISPLAY_POWER_STATE_SUSPEND_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_DISPLAY_POWER_STATE_ON_EXT,
            ["value"] = 2,
            },
        ["extension"] = VK_EXT_display_control,
        },
    ["VkComponentTypeNV"] = {
        [1] = {
            ["name"] = VK_COMPONENT_TYPE_FLOAT16_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COMPONENT_TYPE_FLOAT32_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_COMPONENT_TYPE_FLOAT64_NV,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_COMPONENT_TYPE_SINT8_NV,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_COMPONENT_TYPE_SINT16_NV,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_COMPONENT_TYPE_SINT32_NV,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_COMPONENT_TYPE_SINT64_NV,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_COMPONENT_TYPE_UINT8_NV,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_COMPONENT_TYPE_UINT16_NV,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_COMPONENT_TYPE_UINT32_NV,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_COMPONENT_TYPE_UINT64_NV,
            ["value"] = 10,
            },
        ["extension"] = VK_NV_cooperative_matrix,
        },
    ["VkMemoryOverallocationBehaviorAMD"] = {
        [1] = {
            ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD,
            ["value"] = 2,
            },
        ["extension"] = VK_AMD_memory_overallocation_behavior,
        },
    ["VkBlendOverlapEXT"] = {
        [1] = {
            ["name"] = VK_BLEND_OVERLAP_UNCORRELATED_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_BLEND_OVERLAP_DISJOINT_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_BLEND_OVERLAP_CONJOINT_EXT,
            ["value"] = 2,
            },
        ["extension"] = VK_EXT_blend_operation_advanced,
        },
    ["VkRasterizationOrderAMD"] = {
        [1] = {
            ["name"] = VK_RASTERIZATION_ORDER_STRICT_AMD,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_RASTERIZATION_ORDER_RELAXED_AMD,
            ["value"] = 1,
            },
        ["extension"] = VK_AMD_rasterization_order,
        },
    ["VkAccelerationStructureTypeNV"] = {
        [1] = {
            ["name"] = VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV,
            ["value"] = 1,
            },
        },
    ["VkCoarseSampleOrderTypeNV"] = {
        [1] = {
            ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV,
            ["value"] = 3,
            },
        ["extension"] = VK_NV_shading_rate_image,
        },
    ["VkCommandBufferLevel"] = {
        [1] = {
            ["name"] = VK_COMMAND_BUFFER_LEVEL_PRIMARY,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COMMAND_BUFFER_LEVEL_SECONDARY,
            ["value"] = 1,
            },
        },
    ["VkCoverageModulationModeNV"] = {
        [1] = {
            ["name"] = VK_COVERAGE_MODULATION_MODE_NONE_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COVERAGE_MODULATION_MODE_RGB_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_COVERAGE_MODULATION_MODE_ALPHA_NV,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_COVERAGE_MODULATION_MODE_RGBA_NV,
            ["value"] = 3,
            },
        ["extension"] = VK_NV_framebuffer_mixed_samples,
        },
    ["VkObjectEntryTypeNVX"] = {
        [1] = {
            ["name"] = VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX,
            ["value"] = 4,
            },
        ["extension"] = VK_NVX_device_generated_commands,
        },
    ["VkBlendFactor"] = {
        [1] = {
            ["name"] = VK_BLEND_FACTOR_ZERO,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_BLEND_FACTOR_ONE,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_BLEND_FACTOR_SRC_COLOR,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_BLEND_FACTOR_DST_COLOR,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_BLEND_FACTOR_SRC_ALPHA,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_BLEND_FACTOR_DST_ALPHA,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_BLEND_FACTOR_CONSTANT_COLOR,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_BLEND_FACTOR_CONSTANT_ALPHA,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_BLEND_FACTOR_SRC1_COLOR,
            ["value"] = 15,
            },
        [17] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,
            ["value"] = 16,
            },
        [18] = {
            ["name"] = VK_BLEND_FACTOR_SRC1_ALPHA,
            ["value"] = 17,
            },
        [19] = {
            ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,
            ["value"] = 18,
            },
        },
    ["VkInternalAllocationType"] = {
        [1] = {
            ["name"] = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,
            ["value"] = 0,
            },
        },
    ["VkSamplerYcbcrModelConversion"] = {
        [1] = {
            ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020,
            ["value"] = 4,
            },
        },
    ["VkAccelerationStructureMemoryRequirementsTypeNV"] = {
        [1] = {
            ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV,
            ["value"] = 2,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkAttachmentLoadOp"] = {
        [1] = {
            ["name"] = VK_ATTACHMENT_LOAD_OP_LOAD,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_ATTACHMENT_LOAD_OP_CLEAR,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_ATTACHMENT_LOAD_OP_DONT_CARE,
            ["value"] = 2,
            },
        },
    ["VkPresentModeKHR"] = {
        [1] = {
            ["name"] = VK_PRESENT_MODE_IMMEDIATE_KHR,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_PRESENT_MODE_MAILBOX_KHR,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_PRESENT_MODE_FIFO_KHR,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_PRESENT_MODE_FIFO_RELAXED_KHR,
            ["value"] = 3,
            },
        [5] = {
            ["value"] = 1000112000,
            ["name"] = VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR,
            ["extension"] = VK_KHR_shared_presentable_image,
            },
        [6] = {
            ["value"] = 1000112001,
            ["name"] = VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR,
            ["extension"] = VK_KHR_shared_presentable_image,
            },
        },
    ["VkVertexInputRate"] = {
        [1] = {
            ["name"] = VK_VERTEX_INPUT_RATE_VERTEX,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_VERTEX_INPUT_RATE_INSTANCE,
            ["value"] = 1,
            },
        },
    ["VkSubpassContents"] = {
        [1] = {
            ["name"] = VK_SUBPASS_CONTENTS_INLINE,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,
            ["value"] = 1,
            },
        },
    ["VkTessellationDomainOrigin"] = {
        [1] = {
            ["name"] = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT,
            ["value"] = 1,
            },
        },
    ["VkDiscardRectangleModeEXT"] = {
        [1] = {
            ["name"] = VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT,
            ["value"] = 1,
            },
        ["extension"] = VK_EXT_discard_rectangles,
        },
    ["VkPipelineCacheHeaderVersion"] = {
        [1] = {
            ["name"] = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,
            ["value"] = 1,
            },
        },
    ["VkFullScreenExclusiveEXT"] = {
        [1] = {
            ["name"] = VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT,
            ["value"] = 3,
            },
        ["extension"] = VK_EXT_full_screen_exclusive,
        },
    ["VkSharingMode"] = {
        [1] = {
            ["name"] = VK_SHARING_MODE_EXCLUSIVE,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SHARING_MODE_CONCURRENT,
            ["value"] = 1,
            },
        },
    ["VkValidationFeatureDisableEXT"] = {
        [1] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_ALL_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT,
            ["value"] = 6,
            },
        },
    ["VkValidationCheckEXT"] = {
        [1] = {
            ["name"] = VK_VALIDATION_CHECK_ALL_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_VALIDATION_CHECK_SHADERS_EXT,
            ["value"] = 1,
            },
        },
    ["VkPolygonMode"] = {
        [1] = {
            ["name"] = VK_POLYGON_MODE_FILL,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_POLYGON_MODE_LINE,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_POLYGON_MODE_POINT,
            ["value"] = 2,
            },
        [4] = {
            ["value"] = 1000154000,
            ["name"] = VK_POLYGON_MODE_FILL_RECTANGLE_NV,
            ["extension"] = VK_NV_fill_rectangle,
            },
        },
    ["VkQueryType"] = {
        [1] = {
            ["name"] = VK_QUERY_TYPE_OCCLUSION,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_QUERY_TYPE_PIPELINE_STATISTICS,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_QUERY_TYPE_TIMESTAMP,
            ["value"] = 2,
            },
        [4] = {
            ["value"] = 1000029004,
            ["name"] = VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [5] = {
            ["value"] = 1000166000,
            ["name"] = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    ["VkGeometryTypeNV"] = {
        [1] = {
            ["name"] = VK_GEOMETRY_TYPE_TRIANGLES_NV,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_GEOMETRY_TYPE_AABBS_NV,
            ["value"] = 1,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkSamplerAddressMode"] = {
        [1] = {
            ["name"] = VK_SAMPLER_ADDRESS_MODE_REPEAT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,
            ["value"] = 3,
            },
        },
    ["VkDebugReportObjectTypeEXT"] = {
        [1] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,
            ["value"] = 15,
            },
        [17] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,
            ["value"] = 16,
            },
        [18] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,
            ["value"] = 17,
            },
        [19] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,
            ["value"] = 18,
            },
        [20] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,
            ["value"] = 19,
            },
        [21] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,
            ["value"] = 20,
            },
        [22] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,
            ["value"] = 21,
            },
        [23] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,
            ["value"] = 22,
            },
        [24] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,
            ["value"] = 23,
            },
        [25] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,
            ["value"] = 24,
            },
        [26] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,
            ["value"] = 25,
            },
        [27] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,
            ["value"] = 26,
            },
        [28] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,
            ["value"] = 27,
            },
        [29] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,
            ["value"] = 28,
            },
        [30] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,
            ["value"] = 29,
            },
        [31] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,
            ["value"] = 30,
            },
        [32] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT,
            ["value"] = 31,
            },
        [33] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT,
            ["value"] = 32,
            },
        [34] = {
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT,
            ["value"] = 33,
            },
        [35] = {
            ["value"] = 1000012000,
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT,
            ["extension"] = VK_EXT_debug_report,
            },
        [36] = {
            ["value"] = 1000012000,
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT,
            ["extension"] = VK_EXT_debug_report,
            },
        [37] = {
            ["value"] = 1000166000,
            ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT,
            ["extension"] = VK_NV_ray_tracing,
            },
        ["extension"] = VK_EXT_debug_report,
        },
    ["VkTimeDomainEXT"] = {
        [1] = {
            ["name"] = VK_TIME_DOMAIN_DEVICE_EXT,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT,
            ["value"] = 3,
            },
        ["extension"] = VK_EXT_calibrated_timestamps,
        },
    ["VkObjectType"] = {
        [1] = {
            ["name"] = VK_OBJECT_TYPE_UNKNOWN,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_OBJECT_TYPE_INSTANCE,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_OBJECT_TYPE_PHYSICAL_DEVICE,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_OBJECT_TYPE_DEVICE,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_OBJECT_TYPE_QUEUE,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_OBJECT_TYPE_SEMAPHORE,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_OBJECT_TYPE_COMMAND_BUFFER,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_OBJECT_TYPE_FENCE,
            ["value"] = 7,
            },
        [9] = {
            ["name"] = VK_OBJECT_TYPE_DEVICE_MEMORY,
            ["value"] = 8,
            },
        [10] = {
            ["name"] = VK_OBJECT_TYPE_BUFFER,
            ["value"] = 9,
            },
        [11] = {
            ["name"] = VK_OBJECT_TYPE_IMAGE,
            ["value"] = 10,
            },
        [12] = {
            ["name"] = VK_OBJECT_TYPE_EVENT,
            ["value"] = 11,
            },
        [13] = {
            ["name"] = VK_OBJECT_TYPE_QUERY_POOL,
            ["value"] = 12,
            },
        [14] = {
            ["name"] = VK_OBJECT_TYPE_BUFFER_VIEW,
            ["value"] = 13,
            },
        [15] = {
            ["name"] = VK_OBJECT_TYPE_IMAGE_VIEW,
            ["value"] = 14,
            },
        [16] = {
            ["name"] = VK_OBJECT_TYPE_SHADER_MODULE,
            ["value"] = 15,
            },
        [17] = {
            ["name"] = VK_OBJECT_TYPE_PIPELINE_CACHE,
            ["value"] = 16,
            },
        [18] = {
            ["name"] = VK_OBJECT_TYPE_PIPELINE_LAYOUT,
            ["value"] = 17,
            },
        [19] = {
            ["name"] = VK_OBJECT_TYPE_RENDER_PASS,
            ["value"] = 18,
            },
        [20] = {
            ["name"] = VK_OBJECT_TYPE_PIPELINE,
            ["value"] = 19,
            },
        [21] = {
            ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,
            ["value"] = 20,
            },
        [22] = {
            ["name"] = VK_OBJECT_TYPE_SAMPLER,
            ["value"] = 21,
            },
        [23] = {
            ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_POOL,
            ["value"] = 22,
            },
        [24] = {
            ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_SET,
            ["value"] = 23,
            },
        [25] = {
            ["name"] = VK_OBJECT_TYPE_FRAMEBUFFER,
            ["value"] = 24,
            },
        [26] = {
            ["name"] = VK_OBJECT_TYPE_COMMAND_POOL,
            ["value"] = 25,
            },
        [27] = {
            ["value"] = 1000001000,
            ["name"] = VK_OBJECT_TYPE_SURFACE_KHR,
            ["extension"] = VK_KHR_surface,
            },
        [28] = {
            ["value"] = 1000002000,
            ["name"] = VK_OBJECT_TYPE_SWAPCHAIN_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [29] = {
            ["value"] = 1000003000,
            ["name"] = VK_OBJECT_TYPE_DISPLAY_KHR,
            ["extension"] = VK_KHR_display,
            },
        [30] = {
            ["value"] = 1000003001,
            ["name"] = VK_OBJECT_TYPE_DISPLAY_MODE_KHR,
            ["extension"] = VK_KHR_display,
            },
        [31] = {
            ["value"] = 1000012000,
            ["name"] = VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT,
            ["extension"] = VK_EXT_debug_report,
            },
        [32] = {
            ["value"] = 1000087000,
            ["name"] = VK_OBJECT_TYPE_OBJECT_TABLE_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [33] = {
            ["value"] = 1000087001,
            ["name"] = VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [34] = {
            ["value"] = 1000129000,
            ["name"] = VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT,
            ["extension"] = VK_EXT_debug_utils,
            },
        [35] = {
            ["value"] = 1000161000,
            ["name"] = VK_OBJECT_TYPE_VALIDATION_CACHE_EXT,
            ["extension"] = VK_EXT_validation_cache,
            },
        [36] = {
            ["value"] = 1000166000,
            ["name"] = VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    ["VkCompareOp"] = {
        [1] = {
            ["name"] = VK_COMPARE_OP_NEVER,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_COMPARE_OP_LESS,
            ["value"] = 1,
            },
        [3] = {
            ["name"] = VK_COMPARE_OP_EQUAL,
            ["value"] = 2,
            },
        [4] = {
            ["name"] = VK_COMPARE_OP_LESS_OR_EQUAL,
            ["value"] = 3,
            },
        [5] = {
            ["name"] = VK_COMPARE_OP_GREATER,
            ["value"] = 4,
            },
        [6] = {
            ["name"] = VK_COMPARE_OP_NOT_EQUAL,
            ["value"] = 5,
            },
        [7] = {
            ["name"] = VK_COMPARE_OP_GREATER_OR_EQUAL,
            ["value"] = 6,
            },
        [8] = {
            ["name"] = VK_COMPARE_OP_ALWAYS,
            ["value"] = 7,
            },
        },
    ["VkPipelineBindPoint"] = {
        [1] = {
            ["name"] = VK_PIPELINE_BIND_POINT_GRAPHICS,
            ["value"] = 0,
            },
        [2] = {
            ["name"] = VK_PIPELINE_BIND_POINT_COMPUTE,
            ["value"] = 1,
            },
        [3] = {
            ["value"] = 1000166000,
            ["name"] = VK_PIPELINE_BIND_POINT_RAY_TRACING_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    }
{
    ["VkCommandBufferResetFlagBits"] = {
        [1] = {
            ["name"] = VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkSurfaceTransformFlagBitsKHR"] = {
        [1] = {
            ["name"] = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR,
            ["bitpos"] = 8,
            },
        },
    ["VkDebugUtilsMessageTypeFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT,
            ["bitpos"] = 2,
            },
        },
    ["VkGeometryInstanceFlagBitsNV"] = {
        [1] = {
            ["name"] = VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkDebugUtilsMessageSeverityFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,
            ["bitpos"] = 4,
            },
        [3] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,
            ["bitpos"] = 8,
            },
        [4] = {
            ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT,
            ["bitpos"] = 12,
            },
        },
    ["VkAccessFlagBits"] = {
        [1] = {
            ["name"] = VK_ACCESS_INDIRECT_COMMAND_READ_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_ACCESS_INDEX_READ_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_ACCESS_UNIFORM_READ_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_ACCESS_INPUT_ATTACHMENT_READ_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_ACCESS_SHADER_READ_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_ACCESS_SHADER_WRITE_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_ACCESS_COLOR_ATTACHMENT_READ_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT,
            ["bitpos"] = 8,
            },
        [10] = {
            ["name"] = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
            ["bitpos"] = 9,
            },
        [11] = {
            ["name"] = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
            ["bitpos"] = 10,
            },
        [12] = {
            ["name"] = VK_ACCESS_TRANSFER_READ_BIT,
            ["bitpos"] = 11,
            },
        [13] = {
            ["name"] = VK_ACCESS_TRANSFER_WRITE_BIT,
            ["bitpos"] = 12,
            },
        [14] = {
            ["name"] = VK_ACCESS_HOST_READ_BIT,
            ["bitpos"] = 13,
            },
        [15] = {
            ["name"] = VK_ACCESS_HOST_WRITE_BIT,
            ["bitpos"] = 14,
            },
        [16] = {
            ["name"] = VK_ACCESS_MEMORY_READ_BIT,
            ["bitpos"] = 15,
            },
        [17] = {
            ["name"] = VK_ACCESS_MEMORY_WRITE_BIT,
            ["bitpos"] = 16,
            },
        [18] = {
            ["bitpos"] = 25,
            ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [19] = {
            ["bitpos"] = 26,
            ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [20] = {
            ["bitpos"] = 27,
            ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [21] = {
            ["bitpos"] = 20,
            ["name"] = VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [22] = {
            ["bitpos"] = 17,
            ["name"] = VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [23] = {
            ["bitpos"] = 18,
            ["name"] = VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [24] = {
            ["bitpos"] = 19,
            ["name"] = VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT,
            ["extension"] = VK_EXT_blend_operation_advanced,
            },
        [25] = {
            ["bitpos"] = 23,
            ["name"] = VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [26] = {
            ["bitpos"] = 21,
            ["name"] = VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [27] = {
            ["bitpos"] = 22,
            ["name"] = VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [28] = {
            ["bitpos"] = 24,
            ["name"] = VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkCommandBufferUsageFlagBits"] = {
        [1] = {
            ["name"] = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,
            ["bitpos"] = 2,
            },
        },
    ["VkDescriptorPoolCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["bitpos"] = 1,
            ["name"] = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        },
    ["VkImageAspectFlagBits"] = {
        [1] = {
            ["name"] = VK_IMAGE_ASPECT_COLOR_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_ASPECT_DEPTH_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_ASPECT_STENCIL_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_IMAGE_ASPECT_METADATA_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["bitpos"] = 7,
            ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [6] = {
            ["bitpos"] = 8,
            ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [7] = {
            ["bitpos"] = 9,
            ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        [8] = {
            ["bitpos"] = 10,
            ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            },
        },
    ["VkSurfaceCounterFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_SURFACE_COUNTER_VBLANK_EXT,
            ["bitpos"] = 0,
            },
        ["extension"] = VK_EXT_display_surface_counter,
        },
    ["VkExternalMemoryFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT,
            ["bitpos"] = 2,
            },
        },
    ["VkResolveModeFlagBitsKHR"] = {
        [1] = {
            ["name"] = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_RESOLVE_MODE_AVERAGE_BIT_KHR,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_RESOLVE_MODE_MIN_BIT_KHR,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_RESOLVE_MODE_MAX_BIT_KHR,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_KHR_depth_stencil_resolve,
        },
    ["VkCompositeAlphaFlagBitsKHR"] = {
        [1] = {
            ["name"] = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR,
            ["bitpos"] = 3,
            },
        },
    ["VkObjectEntryUsageFlagBitsNVX"] = {
        [1] = {
            ["name"] = VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX,
            ["bitpos"] = 1,
            },
        ["extension"] = VK_NVX_device_generated_commands,
        },
    ["VkSampleCountFlagBits"] = {
        [1] = {
            ["name"] = VK_SAMPLE_COUNT_1_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_SAMPLE_COUNT_2_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_SAMPLE_COUNT_4_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_SAMPLE_COUNT_8_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_SAMPLE_COUNT_16_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_SAMPLE_COUNT_32_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_SAMPLE_COUNT_64_BIT,
            ["bitpos"] = 6,
            },
        },
    ["VkBuildAccelerationStructureFlagBitsNV"] = {
        [1] = {
            ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV,
            ["bitpos"] = 4,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkSamplerCreateFlagBits"] = {
        [1] = {
            ["bitpos"] = 0,
            ["name"] = VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        [2] = {
            ["bitpos"] = 1,
            ["name"] = VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkExternalMemoryHandleTypeFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["bitpos"] = 9,
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT,
            ["extension"] = VK_EXT_external_memory_dma_buf,
            },
        [9] = {
            ["bitpos"] = 10,
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            },
        [10] = {
            ["bitpos"] = 7,
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT,
            ["extension"] = VK_EXT_external_memory_host,
            },
        [11] = {
            ["bitpos"] = 8,
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT,
            ["extension"] = VK_EXT_external_memory_host,
            },
        },
    ["VkPipelineCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_PIPELINE_CREATE_DERIVATIVE_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["bitpos"] = 5,
            ["name"] = VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        },
    ["VkDebugReportFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_DEBUG_REPORT_INFORMATION_BIT_EXT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DEBUG_REPORT_WARNING_BIT_EXT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_DEBUG_REPORT_ERROR_BIT_EXT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_DEBUG_REPORT_DEBUG_BIT_EXT,
            ["bitpos"] = 4,
            },
        },
    ["VkCullModeFlagBits"] = {
        [1] = {
            ["name"] = VK_CULL_MODE_FRONT_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_CULL_MODE_BACK_BIT,
            ["bitpos"] = 1,
            },
        },
    ["VkExternalFenceFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT,
            ["bitpos"] = 1,
            },
        },
    ["VkQueueFlagBits"] = {
        [1] = {
            ["name"] = VK_QUEUE_GRAPHICS_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_QUEUE_COMPUTE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_QUEUE_TRANSFER_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_QUEUE_SPARSE_BINDING_BIT,
            ["bitpos"] = 3,
            },
        },
    ["VkPipelineStageFlagBits"] = {
        [1] = {
            ["name"] = VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
            ["bitpos"] = 8,
            },
        [10] = {
            ["name"] = VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,
            ["bitpos"] = 9,
            },
        [11] = {
            ["name"] = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
            ["bitpos"] = 10,
            },
        [12] = {
            ["name"] = VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
            ["bitpos"] = 11,
            },
        [13] = {
            ["name"] = VK_PIPELINE_STAGE_TRANSFER_BIT,
            ["bitpos"] = 12,
            },
        [14] = {
            ["name"] = VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
            ["bitpos"] = 13,
            },
        [15] = {
            ["name"] = VK_PIPELINE_STAGE_HOST_BIT,
            ["bitpos"] = 14,
            },
        [16] = {
            ["name"] = VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT,
            ["bitpos"] = 15,
            },
        [17] = {
            ["name"] = VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,
            ["bitpos"] = 16,
            },
        [18] = {
            ["bitpos"] = 24,
            ["name"] = VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [19] = {
            ["bitpos"] = 18,
            ["name"] = VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [20] = {
            ["bitpos"] = 17,
            ["name"] = VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX,
            ["extension"] = VK_NVX_device_generated_commands,
            },
        [21] = {
            ["bitpos"] = 22,
            ["name"] = VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [22] = {
            ["bitpos"] = 21,
            ["name"] = VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [23] = {
            ["bitpos"] = 25,
            ["name"] = VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [24] = {
            ["bitpos"] = 19,
            ["name"] = VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        [25] = {
            ["bitpos"] = 20,
            ["name"] = VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        [26] = {
            ["bitpos"] = 23,
            ["name"] = VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkBufferUsageFlagBits"] = {
        [1] = {
            ["name"] = VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_BUFFER_USAGE_TRANSFER_DST_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_BUFFER_USAGE_STORAGE_BUFFER_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT,
            ["bitpos"] = 8,
            },
        [10] = {
            ["bitpos"] = 11,
            ["name"] = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [11] = {
            ["bitpos"] = 12,
            ["name"] = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT,
            ["extension"] = VK_EXT_transform_feedback,
            },
        [12] = {
            ["bitpos"] = 9,
            ["name"] = VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT,
            ["extension"] = VK_EXT_conditional_rendering,
            },
        [13] = {
            ["bitpos"] = 10,
            ["name"] = VK_BUFFER_USAGE_RAY_TRACING_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [14] = {
            ["bitpos"] = 17,
            ["name"] = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        },
    ["VkIndirectCommandsLayoutUsageFlagBitsNVX"] = {
        [1] = {
            ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_NVX_device_generated_commands,
        },
    ["VkDescriptorSetLayoutCreateFlagBits"] = {
        [1] = {
            ["bitpos"] = 0,
            ["name"] = VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR,
            ["extension"] = VK_KHR_push_descriptor,
            },
        [2] = {
            ["bitpos"] = 1,
            ["name"] = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT,
            ["extension"] = VK_EXT_descriptor_indexing,
            },
        },
    ["VkFenceCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_FENCE_CREATE_SIGNALED_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkExternalMemoryHandleTypeFlagBitsNV"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_NV_external_memory_capabilities,
        },
    ["VkQueryPipelineStatisticFlagBits"] = {
        [1] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT,
            ["bitpos"] = 8,
            },
        [10] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT,
            ["bitpos"] = 9,
            },
        [11] = {
            ["name"] = VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT,
            ["bitpos"] = 10,
            },
        },
    ["VkCommandPoolCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_COMMAND_POOL_CREATE_TRANSIENT_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT,
            ["bitpos"] = 1,
            },
        },
    ["VkCommandPoolResetFlagBits"] = {
        [1] = {
            ["name"] = VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkDependencyFlagBits"] = {
        [1] = {
            ["name"] = VK_DEPENDENCY_BY_REGION_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkSwapchainCreateFlagBitsKHR"] = {
        [1] = {
            ["bitpos"] = 0,
            ["name"] = VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [2] = {
            ["bitpos"] = 1,
            ["name"] = VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR,
            ["extension"] = VK_KHR_swapchain,
            },
        [3] = {
            ["bitpos"] = 2,
            ["name"] = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR,
            ["extension"] = VK_KHR_swapchain_mutable_format,
            },
        },
    ["VkMemoryHeapFlagBits"] = {
        [1] = {
            ["name"] = VK_MEMORY_HEAP_DEVICE_LOCAL_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkImageUsageFlagBits"] = {
        [1] = {
            ["name"] = VK_IMAGE_USAGE_TRANSFER_SRC_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_USAGE_TRANSFER_DST_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_USAGE_SAMPLED_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_IMAGE_USAGE_STORAGE_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["bitpos"] = 8,
            ["name"] = VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV,
            ["extension"] = VK_NV_shading_rate_image,
            },
        [10] = {
            ["bitpos"] = 9,
            ["name"] = VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkQueryControlFlagBits"] = {
        [1] = {
            ["name"] = VK_QUERY_CONTROL_PRECISE_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkSparseMemoryBindFlagBits"] = {
        [1] = {
            ["name"] = VK_SPARSE_MEMORY_BIND_METADATA_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkPeerMemoryFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT,
            ["bitpos"] = 3,
            },
        },
    ["VkFenceImportFlagBits"] = {
        [1] = {
            ["name"] = VK_FENCE_IMPORT_TEMPORARY_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkMemoryPropertyFlagBits"] = {
        [1] = {
            ["name"] = VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_MEMORY_PROPERTY_HOST_CACHED_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,
            ["bitpos"] = 4,
            },
        },
    ["VkDeviceQueueCreateFlagBits"] = {
        },
    ["VkImageCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_IMAGE_CREATE_SPARSE_BINDING_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_IMAGE_CREATE_SPARSE_ALIASED_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["bitpos"] = 13,
            ["name"] = VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV,
            ["extension"] = VK_NV_corner_sampled_image,
            },
        [7] = {
            ["bitpos"] = 12,
            ["name"] = VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT,
            ["extension"] = VK_EXT_sample_locations,
            },
        [8] = {
            ["bitpos"] = 14,
            ["name"] = VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkStencilFaceFlagBits"] = {
        [1] = {
            ["name"] = VK_STENCIL_FACE_FRONT_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_STENCIL_FACE_BACK_BIT,
            ["bitpos"] = 1,
            },
        },
    ["VkExternalMemoryFeatureFlagBitsNV"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV,
            ["bitpos"] = 2,
            },
        ["extension"] = VK_NV_external_memory_capabilities,
        },
    ["VkSemaphoreImportFlagBits"] = {
        [1] = {
            ["name"] = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkConditionalRenderingFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT,
            ["bitpos"] = 0,
            },
        ["extension"] = VK_EXT_conditional_rendering,
        },
    ["VkSubpassDescriptionFlagBits"] = {
        [1] = {
            ["bitpos"] = 0,
            ["name"] = VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX,
            ["extension"] = VK_NVX_multiview_per_view_attributes,
            },
        [2] = {
            ["bitpos"] = 1,
            ["name"] = VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX,
            ["extension"] = VK_NVX_multiview_per_view_attributes,
            },
        },
    ["VkShaderStageFlagBits"] = {
        [1] = {
            ["name"] = VK_SHADER_STAGE_VERTEX_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_SHADER_STAGE_GEOMETRY_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_SHADER_STAGE_FRAGMENT_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_SHADER_STAGE_COMPUTE_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["bitpos"] = 8,
            ["name"] = VK_SHADER_STAGE_RAYGEN_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [8] = {
            ["bitpos"] = 9,
            ["name"] = VK_SHADER_STAGE_ANY_HIT_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [9] = {
            ["bitpos"] = 10,
            ["name"] = VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [10] = {
            ["bitpos"] = 11,
            ["name"] = VK_SHADER_STAGE_MISS_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [11] = {
            ["bitpos"] = 12,
            ["name"] = VK_SHADER_STAGE_INTERSECTION_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [12] = {
            ["bitpos"] = 13,
            ["name"] = VK_SHADER_STAGE_CALLABLE_BIT_NV,
            ["extension"] = VK_NV_ray_tracing,
            },
        [13] = {
            ["bitpos"] = 6,
            ["name"] = VK_SHADER_STAGE_TASK_BIT_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        [14] = {
            ["bitpos"] = 7,
            ["name"] = VK_SHADER_STAGE_MESH_BIT_NV,
            ["extension"] = VK_NV_mesh_shader,
            },
        },
    ["VkDisplayPlaneAlphaFlagBitsKHR"] = {
        [1] = {
            ["name"] = VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_KHR_display,
        },
    ["VkQueryResultFlagBits"] = {
        [1] = {
            ["name"] = VK_QUERY_RESULT_64_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_QUERY_RESULT_WAIT_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_QUERY_RESULT_WITH_AVAILABILITY_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_QUERY_RESULT_PARTIAL_BIT,
            ["bitpos"] = 3,
            },
        },
    ["VkRenderPassCreateFlagBits"] = {
        },
    ["VkBufferCreateFlagBits"] = {
        [1] = {
            ["name"] = VK_BUFFER_CREATE_SPARSE_BINDING_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_BUFFER_CREATE_SPARSE_ALIASED_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["bitpos"] = 4,
            ["name"] = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT,
            ["extension"] = VK_EXT_buffer_device_address,
            },
        },
    ["VkGeometryFlagBitsNV"] = {
        [1] = {
            ["name"] = VK_GEOMETRY_OPAQUE_BIT_NV,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV,
            ["bitpos"] = 1,
            },
        ["extension"] = VK_NV_ray_tracing,
        },
    ["VkExternalSemaphoreHandleTypeFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT,
            ["bitpos"] = 4,
            },
        },
    ["VkSubgroupFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_SUBGROUP_FEATURE_BASIC_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_SUBGROUP_FEATURE_VOTE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_SUBGROUP_FEATURE_ARITHMETIC_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_SUBGROUP_FEATURE_BALLOT_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_SUBGROUP_FEATURE_SHUFFLE_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_SUBGROUP_FEATURE_CLUSTERED_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_SUBGROUP_FEATURE_QUAD_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["bitpos"] = 8,
            ["name"] = VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV,
            ["extension"] = VK_NV_shader_subgroup_partitioned,
            },
        },
    ["VkFormatFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT,
            ["bitpos"] = 3,
            },
        [5] = {
            ["name"] = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT,
            ["bitpos"] = 4,
            },
        [6] = {
            ["name"] = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
            ["bitpos"] = 5,
            },
        [7] = {
            ["name"] = VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT,
            ["bitpos"] = 6,
            },
        [8] = {
            ["name"] = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT,
            ["bitpos"] = 7,
            },
        [9] = {
            ["name"] = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT,
            ["bitpos"] = 8,
            },
        [10] = {
            ["name"] = VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT,
            ["bitpos"] = 9,
            },
        [11] = {
            ["name"] = VK_FORMAT_FEATURE_BLIT_SRC_BIT,
            ["bitpos"] = 10,
            },
        [12] = {
            ["name"] = VK_FORMAT_FEATURE_BLIT_DST_BIT,
            ["bitpos"] = 11,
            },
        [13] = {
            ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
            ["bitpos"] = 12,
            },
        [14] = {
            ["bitpos"] = 13,
            ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG,
            ["extension"] = VK_IMG_filter_cubic,
            },
        [15] = {
            ["bitpos"] = 16,
            ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT,
            ["extension"] = VK_EXT_sampler_filter_minmax,
            },
        [16] = {
            ["bitpos"] = 24,
            ["name"] = VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkDeviceGroupPresentModeFlagBitsKHR"] = {
        [1] = {
            ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR,
            ["bitpos"] = 3,
            },
        ["extension"] = VK_KHR_swapchain,
        },
    ["VkColorComponentFlagBits"] = {
        [1] = {
            ["name"] = VK_COLOR_COMPONENT_R_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_COLOR_COMPONENT_G_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_COLOR_COMPONENT_B_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_COLOR_COMPONENT_A_BIT,
            ["bitpos"] = 3,
            },
        },
    ["VkImageViewCreateFlagBits"] = {
        [1] = {
            ["bitpos"] = 0,
            ["name"] = VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT,
            ["extension"] = VK_EXT_fragment_density_map,
            },
        },
    ["VkExternalFenceHandleTypeFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT,
            ["bitpos"] = 3,
            },
        },
    ["VkMemoryAllocateFlagBits"] = {
        [1] = {
            ["name"] = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkExternalSemaphoreFeatureFlagBits"] = {
        [1] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT,
            ["bitpos"] = 1,
            },
        },
    ["VkDescriptorBindingFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT,
            ["bitpos"] = 2,
            },
        [4] = {
            ["name"] = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT,
            ["bitpos"] = 3,
            },
        },
    ["VkPipelineCreationFeedbackFlagBitsEXT"] = {
        [1] = {
            ["name"] = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT,
            ["bitpos"] = 2,
            },
        ["extension"] = VK_EXT_pipeline_creation_feedback,
        },
    ["VkAttachmentDescriptionFlagBits"] = {
        [1] = {
            ["name"] = VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT,
            ["bitpos"] = 0,
            },
        },
    ["VkSparseImageFormatFlagBits"] = {
        [1] = {
            ["name"] = VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT,
            ["bitpos"] = 0,
            },
        [2] = {
            ["name"] = VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT,
            ["bitpos"] = 1,
            },
        [3] = {
            ["name"] = VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT,
            ["bitpos"] = 2,
            },
        },
    }
{
    ["VkImageViewASTCDecodeModeEXT"] = {
        ["extension"] = VK_EXT_astc_decode_mode,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = decodeMode,
                ["type"] = VkFormat ,
                },
            },
        ["name"] = VkImageViewASTCDecodeModeEXT,
        ["returnedOnly"] = false,
        },
    ["VkD3D12FenceSubmitInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = waitSemaphoreValuesCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = waitSemaphoreValuesCount,
                ["type"] = const uint64_t * ,
                ["name"] = pWaitSemaphoreValues,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = signalSemaphoreValuesCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = signalSemaphoreValuesCount,
                ["type"] = const uint64_t * ,
                ["name"] = pSignalSemaphoreValues,
                ["optional"] = true,
                },
            },
        ["name"] = VkD3D12FenceSubmitInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkViewportWScalingNV"] = {
        ["extension"] = VK_NV_clip_space_w_scaling,
        ["fields"] = {
            [1] = {
                ["name"] = xcoeff,
                ["type"] = float ,
                },
            [2] = {
                ["name"] = ycoeff,
                ["type"] = float ,
                },
            },
        ["name"] = VkViewportWScalingNV,
        ["returnedOnly"] = false,
        },
    ["VkMemoryDedicatedAllocateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkImage ,
                ["name"] = image,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkBuffer ,
                ["name"] = buffer,
                ["optional"] = true,
                },
            },
        ["name"] = VkMemoryDedicatedAllocateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupPresentCapabilitiesKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = presentMask,
                ["type"] = uint32_t [ VK_MAX_DEVICE_GROUP_SIZE] ,
                },
            [4] = {
                ["name"] = modes,
                ["type"] = VkDeviceGroupPresentModeFlagsKHR ,
                },
            },
        ["name"] = VkDeviceGroupPresentCapabilitiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkBufferCopy"] = {
        ["fields"] = {
            [1] = {
                ["name"] = srcOffset,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["name"] = dstOffset,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkDeviceSize ,
                ["name"] = size,
                },
            },
        ["name"] = VkBufferCopy,
        ["returnedOnly"] = false,
        },
    ["VkMetalSurfaceCreateInfoEXT"] = {
        ["extension"] = VK_EXT_metal_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkMetalSurfaceCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const CAMetalLayer * ,
                ["name"] = pLayer,
                },
            },
        ["name"] = VkMetalSurfaceCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkRayTracingPipelineCreateInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = stageCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = stageCount,
                ["type"] = const VkPipelineShaderStageCreateInfo * ,
                ["name"] = pStages,
                },
            [6] = {
                ["name"] = groupCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = groupCount,
                ["type"] = const VkRayTracingShaderGroupCreateInfoNV * ,
                ["name"] = pGroups,
                },
            [8] = {
                ["name"] = maxRecursionDepth,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [10] = {
                ["noautovalidity"] = true,
                ["type"] = VkPipeline ,
                ["name"] = basePipelineHandle,
                ["optional"] = true,
                },
            [11] = {
                ["name"] = basePipelineIndex,
                ["type"] = int32_t ,
                },
            },
        ["name"] = VkRayTracingPipelineCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageMemoryBind"] = {
        ["fields"] = {
            [1] = {
                ["name"] = subresource,
                ["type"] = VkImageSubresource ,
                },
            [2] = {
                ["name"] = offset,
                ["type"] = VkOffset3D ,
                },
            [3] = {
                ["name"] = extent,
                ["type"] = VkExtent3D ,
                },
            [4] = {
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["type"] = VkSparseMemoryBindFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSparseImageMemoryBind,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDepthStencilResolvePropertiesKHR"] = {
        ["extension"] = VK_KHR_depth_stencil_resolve,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = supportedDepthResolveModes,
                ["type"] = VkResolveModeFlagsKHR ,
                },
            [4] = {
                ["name"] = supportedStencilResolveModes,
                ["type"] = VkResolveModeFlagsKHR ,
                },
            [5] = {
                ["name"] = independentResolve,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = independentResolveNone,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceDepthStencilResolvePropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkQueueFamilyProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = queueFamilyProperties,
                ["type"] = VkQueueFamilyProperties ,
                },
            },
        ["name"] = VkQueueFamilyProperties2,
        ["returnedOnly"] = false,
        },
    ["VkAttachmentDescription"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkAttachmentDescriptionFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [3] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [4] = {
                ["name"] = loadOp,
                ["type"] = VkAttachmentLoadOp ,
                },
            [5] = {
                ["name"] = storeOp,
                ["type"] = VkAttachmentStoreOp ,
                },
            [6] = {
                ["name"] = stencilLoadOp,
                ["type"] = VkAttachmentLoadOp ,
                },
            [7] = {
                ["name"] = stencilStoreOp,
                ["type"] = VkAttachmentStoreOp ,
                },
            [8] = {
                ["name"] = initialLayout,
                ["type"] = VkImageLayout ,
                },
            [9] = {
                ["name"] = finalLayout,
                ["type"] = VkImageLayout ,
                },
            },
        ["name"] = VkAttachmentDescription,
        ["returnedOnly"] = false,
        },
    ["VkSpecializationMapEntry"] = {
        ["fields"] = {
            [1] = {
                ["name"] = constantID,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = offset,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = size_t ,
                ["name"] = size,
                },
            },
        ["name"] = VkSpecializationMapEntry,
        ["returnedOnly"] = false,
        },
    ["VkDeviceCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDeviceCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = queueCreateInfoCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = queueCreateInfoCount,
                ["type"] = const VkDeviceQueueCreateInfo * ,
                ["name"] = pQueueCreateInfos,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = enabledLayerCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = enabledLayerCount,null-terminated,
                ["type"] = const char * const* ,
                ["name"] = ppEnabledLayerNames,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = enabledExtensionCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = enabledExtensionCount,null-terminated,
                ["type"] = const char * const* ,
                ["name"] = ppEnabledExtensionNames,
                },
            [10] = {
                ["type"] = const VkPhysicalDeviceFeatures * ,
                ["name"] = pEnabledFeatures,
                ["optional"] = true,
                },
            },
        ["name"] = VkDeviceCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkAttachmentReference2KHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = attachment,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = layout,
                ["type"] = VkImageLayout ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = VkImageAspectFlags ,
                ["name"] = aspectMask,
                },
            },
        ["name"] = VkAttachmentReference2KHR,
        ["returnedOnly"] = false,
        },
    ["VkSemaphoreGetFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = semaphore,
                ["type"] = VkSemaphore ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                },
            },
        ["name"] = VkSemaphoreGetFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceInlineUniformBlockFeaturesEXT"] = {
        ["extension"] = VK_EXT_inline_uniform_block,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = inlineUniformBlock,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = descriptorBindingInlineUniformBlockUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceInlineUniformBlockFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageViewUsageCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            },
        ["name"] = VkImageViewUsageCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkMemoryGetFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_memory_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            },
        ["name"] = VkMemoryGetFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPipelineInputAssemblyStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineInputAssemblyStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = topology,
                ["type"] = VkPrimitiveTopology ,
                },
            [5] = {
                ["name"] = primitiveRestartEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPipelineInputAssemblyStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkShaderModuleCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkShaderModuleCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = codeSize,
                ["type"] = size_t ,
                },
            [5] = {
                ["len"] = latexmath:[\textrm{codeSize} \over 4],
                ["type"] = const uint32_t * ,
                ["name"] = pCode,
                ["altlen"] = codeSize / 4,
                },
            },
        ["name"] = VkShaderModuleCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPresentTimesInfoGOOGLE"] = {
        ["extension"] = VK_GOOGLE_display_timing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = swapchainCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = swapchainCount,
                ["type"] = const VkPresentTimeGOOGLE * ,
                ["name"] = pTimes,
                ["optional"] = true,
                },
            },
        ["name"] = VkPresentTimesInfoGOOGLE,
        ["returnedOnly"] = false,
        },
    ["VkImportSemaphoreWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSemaphore ,
                ["name"] = semaphore,
                ["externsync"] = true,
                },
            [4] = {
                ["type"] = VkSemaphoreImportFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            [6] = {
                ["type"] = HANDLE ,
                ["name"] = handle,
                ["optional"] = true,
                },
            [7] = {
                ["type"] = LPCWSTR ,
                ["name"] = name,
                ["optional"] = true,
                },
            },
        ["name"] = VkImportSemaphoreWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkAndroidHardwareBufferFormatPropertiesANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [4] = {
                ["name"] = externalFormat,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["name"] = formatFeatures,
                ["type"] = VkFormatFeatureFlags ,
                },
            [6] = {
                ["name"] = samplerYcbcrConversionComponents,
                ["type"] = VkComponentMapping ,
                },
            [7] = {
                ["name"] = suggestedYcbcrModel,
                ["type"] = VkSamplerYcbcrModelConversion ,
                },
            [8] = {
                ["name"] = suggestedYcbcrRange,
                ["type"] = VkSamplerYcbcrRange ,
                },
            [9] = {
                ["name"] = suggestedYChromaOffset,
                ["type"] = VkChromaLocation ,
                },
            [10] = {
                ["name"] = suggestedXChromaOffset,
                ["type"] = VkChromaLocation ,
                },
            },
        ["name"] = VkAndroidHardwareBufferFormatPropertiesANDROID,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassBeginInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = renderPass,
                ["type"] = VkRenderPass ,
                },
            [4] = {
                ["name"] = framebuffer,
                ["type"] = VkFramebuffer ,
                },
            [5] = {
                ["name"] = renderArea,
                ["type"] = VkRect2D ,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = clearValueCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = clearValueCount,
                ["type"] = const VkClearValue * ,
                ["name"] = pClearValues,
                },
            },
        ["name"] = VkRenderPassBeginInfo,
        ["returnedOnly"] = false,
        },
    ["VkWriteDescriptorSet"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkDescriptorSet ,
                ["name"] = dstSet,
                },
            [4] = {
                ["name"] = dstBinding,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = dstArrayElement,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = descriptorCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = descriptorType,
                ["type"] = VkDescriptorType ,
                },
            [8] = {
                ["len"] = descriptorCount,
                ["type"] = const VkDescriptorImageInfo * ,
                ["name"] = pImageInfo,
                ["noautovalidity"] = true,
                },
            [9] = {
                ["len"] = descriptorCount,
                ["type"] = const VkDescriptorBufferInfo * ,
                ["name"] = pBufferInfo,
                ["noautovalidity"] = true,
                },
            [10] = {
                ["len"] = descriptorCount,
                ["type"] = const VkBufferView * ,
                ["name"] = pTexelBufferView,
                ["noautovalidity"] = true,
                },
            },
        ["name"] = VkWriteDescriptorSet,
        ["returnedOnly"] = false,
        },
    ["VkCoarseSampleLocationNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["name"] = pixelX,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = pixelY,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = sample,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkCoarseSampleLocationNV,
        ["returnedOnly"] = false,
        },
    ["VkDedicatedAllocationMemoryAllocateInfoNV"] = {
        ["extension"] = VK_NV_dedicated_allocation,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkImage ,
                ["name"] = image,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkBuffer ,
                ["name"] = buffer,
                ["optional"] = true,
                },
            },
        ["name"] = VkDedicatedAllocationMemoryAllocateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkDisplayNativeHdrSurfaceCapabilitiesAMD"] = {
        ["extension"] = VK_AMD_display_native_hdr,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,
                },
            [2] = {
                ["name"] = localDimmingSupport,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkDisplayNativeHdrSurfaceCapabilitiesAMD,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT"] = {
        ["extension"] = VK_EXT_blend_operation_advanced,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = advancedBlendMaxColorAttachments,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = advancedBlendIndependentBlend,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = advancedBlendNonPremultipliedSrcColor,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = advancedBlendNonPremultipliedDstColor,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = advancedBlendCorrelatedOverlap,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = advancedBlendAllOperations,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkExternalBufferProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = externalMemoryProperties,
                ["type"] = VkExternalMemoryProperties ,
                },
            },
        ["name"] = VkExternalBufferProperties,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageMemoryBindInfo"] = {
        ["fields"] = {
            [1] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [2] = {
                ["name"] = bindCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindCount,
                ["type"] = const VkSparseImageMemoryBind * ,
                ["name"] = pBinds,
                },
            },
        ["name"] = VkSparseImageMemoryBindInfo,
        ["returnedOnly"] = false,
        },
    ["VkGeometryTrianglesNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkBuffer ,
                ["name"] = vertexData,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = vertexOffset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = vertexCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = vertexStride,
                ["type"] = VkDeviceSize ,
                },
            [7] = {
                ["name"] = vertexFormat,
                ["type"] = VkFormat ,
                },
            [8] = {
                ["type"] = VkBuffer ,
                ["name"] = indexData,
                ["optional"] = true,
                },
            [9] = {
                ["name"] = indexOffset,
                ["type"] = VkDeviceSize ,
                },
            [10] = {
                ["name"] = indexCount,
                ["type"] = uint32_t ,
                },
            [11] = {
                ["name"] = indexType,
                ["type"] = VkIndexType ,
                },
            [12] = {
                ["type"] = VkBuffer ,
                ["name"] = transformData,
                ["optional"] = true,
                },
            [13] = {
                ["name"] = transformOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkGeometryTrianglesNV,
        ["returnedOnly"] = false,
        },
    ["VkCmdReserveSpaceForCommandsInfoNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkObjectTableNVX ,
                ["name"] = objectTable,
                ["externsync"] = true,
                },
            [4] = {
                ["name"] = indirectCommandsLayout,
                ["type"] = VkIndirectCommandsLayoutNVX ,
                },
            [5] = {
                ["name"] = maxSequencesCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkCmdReserveSpaceForCommandsInfoNVX,
        ["returnedOnly"] = false,
        },
    ["VkPipelineTessellationStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineTessellationStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = patchControlPoints,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPipelineTessellationStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDrawIndexedIndirectCommand"] = {
        ["fields"] = {
            [1] = {
                ["name"] = indexCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = instanceCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = firstIndex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = vertexOffset,
                ["type"] = int32_t ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = firstInstance,
                },
            },
        ["name"] = VkDrawIndexedIndirectCommand,
        ["returnedOnly"] = false,
        },
    ["VkMacOSSurfaceCreateInfoMVK"] = {
        ["extension"] = VK_MVK_macos_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkMacOSSurfaceCreateFlagsMVK ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pView,
                },
            },
        ["name"] = VkMacOSSurfaceCreateInfoMVK,
        ["returnedOnly"] = false,
        },
    ["VkPipelineColorBlendStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineColorBlendStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = logicOpEnable,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = VkLogicOp ,
                ["name"] = logicOp,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = attachmentCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = attachmentCount,
                ["type"] = const VkPipelineColorBlendAttachmentState * ,
                ["name"] = pAttachments,
                },
            [8] = {
                ["name"] = blendConstants,
                ["type"] = float [4] ,
                },
            },
        ["name"] = VkPipelineColorBlendStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceVariablePointersFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = variablePointersStorageBuffer,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = variablePointers,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceVariablePointersFeatures,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDescriptorIndexingPropertiesEXT"] = {
        ["extension"] = VK_EXT_descriptor_indexing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = maxUpdateAfterBindDescriptorsInAllPools,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = shaderUniformBufferArrayNonUniformIndexingNative,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = shaderSampledImageArrayNonUniformIndexingNative,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = shaderStorageBufferArrayNonUniformIndexingNative,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = shaderStorageImageArrayNonUniformIndexingNative,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = shaderInputAttachmentArrayNonUniformIndexingNative,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = robustBufferAccessUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = quadDivergentImplicitLod,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindSamplers,
                ["type"] = uint32_t ,
                },
            [12] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindUniformBuffers,
                ["type"] = uint32_t ,
                },
            [13] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindStorageBuffers,
                ["type"] = uint32_t ,
                },
            [14] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindSampledImages,
                ["type"] = uint32_t ,
                },
            [15] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindStorageImages,
                ["type"] = uint32_t ,
                },
            [16] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindInputAttachments,
                ["type"] = uint32_t ,
                },
            [17] = {
                ["name"] = maxPerStageUpdateAfterBindResources,
                ["type"] = uint32_t ,
                },
            [18] = {
                ["name"] = maxDescriptorSetUpdateAfterBindSamplers,
                ["type"] = uint32_t ,
                },
            [19] = {
                ["name"] = maxDescriptorSetUpdateAfterBindUniformBuffers,
                ["type"] = uint32_t ,
                },
            [20] = {
                ["name"] = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic,
                ["type"] = uint32_t ,
                },
            [21] = {
                ["name"] = maxDescriptorSetUpdateAfterBindStorageBuffers,
                ["type"] = uint32_t ,
                },
            [22] = {
                ["name"] = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic,
                ["type"] = uint32_t ,
                },
            [23] = {
                ["name"] = maxDescriptorSetUpdateAfterBindSampledImages,
                ["type"] = uint32_t ,
                },
            [24] = {
                ["name"] = maxDescriptorSetUpdateAfterBindStorageImages,
                ["type"] = uint32_t ,
                },
            [25] = {
                ["name"] = maxDescriptorSetUpdateAfterBindInputAttachments,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceDescriptorIndexingPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExternalFenceInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = handleType,
                ["type"] = VkExternalFenceHandleTypeFlagBits ,
                },
            },
        ["name"] = VkPhysicalDeviceExternalFenceInfo,
        ["returnedOnly"] = false,
        },
    ["VkDeviceQueueGlobalPriorityCreateInfoEXT"] = {
        ["extension"] = VK_EXT_global_priority,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = globalPriority,
                ["type"] = VkQueueGlobalPriorityEXT ,
                },
            },
        ["name"] = VkDeviceQueueGlobalPriorityCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSamplerYcbcrConversionFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = samplerYcbcrConversion,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceSamplerYcbcrConversionFeatures,
        ["returnedOnly"] = false,
        },
    ["VkCommandBufferBeginInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkCommandBufferUsageFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const VkCommandBufferInheritanceInfo * ,
                ["name"] = pInheritanceInfo,
                ["optional"] = true,
                },
            },
        ["name"] = VkCommandBufferBeginInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRepresentativeFragmentTestStateCreateInfoNV"] = {
        ["extension"] = VK_NV_representative_fragment_test,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = representativeFragmentTestEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPipelineRepresentativeFragmentTestStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkCommandBufferInheritanceInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkRenderPass ,
                ["name"] = renderPass,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = subpass,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = VkFramebuffer ,
                ["name"] = framebuffer,
                ["optional"] = true,
                },
            [6] = {
                ["name"] = occlusionQueryEnable,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["noautovalidity"] = true,
                ["type"] = VkQueryControlFlags ,
                ["name"] = queryFlags,
                ["optional"] = true,
                },
            [8] = {
                ["noautovalidity"] = true,
                ["type"] = VkQueryPipelineStatisticFlags ,
                ["name"] = pipelineStatistics,
                ["optional"] = true,
                },
            },
        ["name"] = VkCommandBufferInheritanceInfo,
        ["returnedOnly"] = false,
        },
    ["VkIndirectCommandsLayoutCreateInfoNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [4] = {
                ["name"] = flags,
                ["type"] = VkIndirectCommandsLayoutUsageFlagsNVX ,
                },
            [5] = {
                ["name"] = tokenCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = tokenCount,
                ["type"] = const VkIndirectCommandsLayoutTokenNVX * ,
                ["name"] = pTokens,
                },
            },
        ["name"] = VkIndirectCommandsLayoutCreateInfoNVX,
        ["returnedOnly"] = false,
        },
    ["VkWriteDescriptorSetInlineUniformBlockEXT"] = {
        ["extension"] = VK_EXT_inline_uniform_block,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = dataSize,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = dataSize,
                ["type"] = const void * ,
                ["name"] = pData,
                },
            },
        ["name"] = VkWriteDescriptorSetInlineUniformBlockEXT,
        ["returnedOnly"] = false,
        },
    ["VkLayerProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = layerName,
                ["type"] = char [ VK_MAX_EXTENSION_NAME_SIZE] ,
                },
            [2] = {
                ["name"] = specVersion,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = implementationVersion,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = description,
                ["type"] = char [ VK_MAX_DESCRIPTION_SIZE] ,
                },
            },
        ["name"] = VkLayerProperties,
        ["returnedOnly"] = false,
        },
    ["VkQueryPoolCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkQueryPoolCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = queryType,
                ["type"] = VkQueryType ,
                },
            [5] = {
                ["name"] = queryCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = VkQueryPipelineStatisticFlags ,
                ["name"] = pipelineStatistics,
                ["optional"] = true,
                },
            },
        ["name"] = VkQueryPoolCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkExternalSemaphoreProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = exportFromImportedHandleTypes,
                ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                },
            [4] = {
                ["name"] = compatibleHandleTypes,
                ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                },
            [5] = {
                ["type"] = VkExternalSemaphoreFeatureFlags ,
                ["name"] = externalSemaphoreFeatures,
                ["optional"] = true,
                },
            },
        ["name"] = VkExternalSemaphoreProperties,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFeatures"] = {
        ["fields"] = {
            [1] = {
                ["name"] = robustBufferAccess,
                ["type"] = VkBool32 ,
                },
            [2] = {
                ["name"] = fullDrawIndexUint32,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["name"] = imageCubeArray,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = independentBlend,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = geometryShader,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = tessellationShader,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = sampleRateShading,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = dualSrcBlend,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = logicOp,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = multiDrawIndirect,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = drawIndirectFirstInstance,
                ["type"] = VkBool32 ,
                },
            [12] = {
                ["name"] = depthClamp,
                ["type"] = VkBool32 ,
                },
            [13] = {
                ["name"] = depthBiasClamp,
                ["type"] = VkBool32 ,
                },
            [14] = {
                ["name"] = fillModeNonSolid,
                ["type"] = VkBool32 ,
                },
            [15] = {
                ["name"] = depthBounds,
                ["type"] = VkBool32 ,
                },
            [16] = {
                ["name"] = wideLines,
                ["type"] = VkBool32 ,
                },
            [17] = {
                ["name"] = largePoints,
                ["type"] = VkBool32 ,
                },
            [18] = {
                ["name"] = alphaToOne,
                ["type"] = VkBool32 ,
                },
            [19] = {
                ["name"] = multiViewport,
                ["type"] = VkBool32 ,
                },
            [20] = {
                ["name"] = samplerAnisotropy,
                ["type"] = VkBool32 ,
                },
            [21] = {
                ["name"] = textureCompressionETC2,
                ["type"] = VkBool32 ,
                },
            [22] = {
                ["name"] = textureCompressionASTC_LDR,
                ["type"] = VkBool32 ,
                },
            [23] = {
                ["name"] = textureCompressionBC,
                ["type"] = VkBool32 ,
                },
            [24] = {
                ["name"] = occlusionQueryPrecise,
                ["type"] = VkBool32 ,
                },
            [25] = {
                ["name"] = pipelineStatisticsQuery,
                ["type"] = VkBool32 ,
                },
            [26] = {
                ["name"] = vertexPipelineStoresAndAtomics,
                ["type"] = VkBool32 ,
                },
            [27] = {
                ["name"] = fragmentStoresAndAtomics,
                ["type"] = VkBool32 ,
                },
            [28] = {
                ["name"] = shaderTessellationAndGeometryPointSize,
                ["type"] = VkBool32 ,
                },
            [29] = {
                ["name"] = shaderImageGatherExtended,
                ["type"] = VkBool32 ,
                },
            [30] = {
                ["name"] = shaderStorageImageExtendedFormats,
                ["type"] = VkBool32 ,
                },
            [31] = {
                ["name"] = shaderStorageImageMultisample,
                ["type"] = VkBool32 ,
                },
            [32] = {
                ["name"] = shaderStorageImageReadWithoutFormat,
                ["type"] = VkBool32 ,
                },
            [33] = {
                ["name"] = shaderStorageImageWriteWithoutFormat,
                ["type"] = VkBool32 ,
                },
            [34] = {
                ["name"] = shaderUniformBufferArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [35] = {
                ["name"] = shaderSampledImageArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [36] = {
                ["name"] = shaderStorageBufferArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [37] = {
                ["name"] = shaderStorageImageArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [38] = {
                ["name"] = shaderClipDistance,
                ["type"] = VkBool32 ,
                },
            [39] = {
                ["name"] = shaderCullDistance,
                ["type"] = VkBool32 ,
                },
            [40] = {
                ["name"] = shaderFloat64,
                ["type"] = VkBool32 ,
                },
            [41] = {
                ["name"] = shaderInt64,
                ["type"] = VkBool32 ,
                },
            [42] = {
                ["name"] = shaderInt16,
                ["type"] = VkBool32 ,
                },
            [43] = {
                ["name"] = shaderResourceResidency,
                ["type"] = VkBool32 ,
                },
            [44] = {
                ["name"] = shaderResourceMinLod,
                ["type"] = VkBool32 ,
                },
            [45] = {
                ["name"] = sparseBinding,
                ["type"] = VkBool32 ,
                },
            [46] = {
                ["name"] = sparseResidencyBuffer,
                ["type"] = VkBool32 ,
                },
            [47] = {
                ["name"] = sparseResidencyImage2D,
                ["type"] = VkBool32 ,
                },
            [48] = {
                ["name"] = sparseResidencyImage3D,
                ["type"] = VkBool32 ,
                },
            [49] = {
                ["name"] = sparseResidency2Samples,
                ["type"] = VkBool32 ,
                },
            [50] = {
                ["name"] = sparseResidency4Samples,
                ["type"] = VkBool32 ,
                },
            [51] = {
                ["name"] = sparseResidency8Samples,
                ["type"] = VkBool32 ,
                },
            [52] = {
                ["name"] = sparseResidency16Samples,
                ["type"] = VkBool32 ,
                },
            [53] = {
                ["name"] = sparseResidencyAliased,
                ["type"] = VkBool32 ,
                },
            [54] = {
                ["name"] = variableMultisampleRate,
                ["type"] = VkBool32 ,
                },
            [55] = {
                ["name"] = inheritedQueries,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFeatures,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceImageDrmFormatModifierInfoEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = drmFormatModifier,
                ["type"] = uint64_t ,
                },
            [4] = {
                ["name"] = sharingMode,
                ["type"] = VkSharingMode ,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = queueFamilyIndexCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = queueFamilyIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pQueueFamilyIndices,
                ["noautovalidity"] = true,
                },
            },
        ["name"] = VkPhysicalDeviceImageDrmFormatModifierInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkCmdProcessCommandsInfoNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkObjectTableNVX ,
                ["name"] = objectTable,
                ["externsync"] = true,
                },
            [4] = {
                ["name"] = indirectCommandsLayout,
                ["type"] = VkIndirectCommandsLayoutNVX ,
                },
            [5] = {
                ["name"] = indirectCommandsTokenCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = indirectCommandsTokenCount,
                ["type"] = const VkIndirectCommandsTokenNVX * ,
                ["name"] = pIndirectCommandsTokens,
                },
            [7] = {
                ["name"] = maxSequencesCount,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["externsync"] = true,
                ["type"] = VkCommandBuffer ,
                ["name"] = targetCommandBuffer,
                ["optional"] = true,
                },
            [9] = {
                ["type"] = VkBuffer ,
                ["name"] = sequencesCountBuffer,
                ["optional"] = true,
                },
            [10] = {
                ["type"] = VkDeviceSize ,
                ["name"] = sequencesCountOffset,
                ["optional"] = true,
                },
            [11] = {
                ["type"] = VkBuffer ,
                ["name"] = sequencesIndexBuffer,
                ["optional"] = true,
                },
            [12] = {
                ["type"] = VkDeviceSize ,
                ["name"] = sequencesIndexOffset,
                ["optional"] = true,
                },
            },
        ["name"] = VkCmdProcessCommandsInfoNVX,
        ["returnedOnly"] = false,
        },
    ["VkSparseMemoryBind"] = {
        ["fields"] = {
            [1] = {
                ["name"] = resourceOffset,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["type"] = VkSparseMemoryBindFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSparseMemoryBind,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMemoryProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryProperties,
                ["type"] = VkPhysicalDeviceMemoryProperties ,
                },
            },
        ["name"] = VkPhysicalDeviceMemoryProperties2,
        ["returnedOnly"] = false,
        },
    ["VkPastPresentationTimingGOOGLE"] = {
        ["extension"] = VK_GOOGLE_display_timing,
        ["fields"] = {
            [1] = {
                ["name"] = presentID,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = desiredPresentTime,
                ["type"] = uint64_t ,
                },
            [3] = {
                ["name"] = actualPresentTime,
                ["type"] = uint64_t ,
                },
            [4] = {
                ["name"] = earliestPresentTime,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["name"] = presentMargin,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkPastPresentationTimingGOOGLE,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorPoolInlineUniformBlockCreateInfoEXT"] = {
        ["extension"] = VK_EXT_inline_uniform_block,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = maxInlineUniformBlockBindings,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDescriptorPoolInlineUniformBlockCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDeviceEventInfoEXT"] = {
        ["extension"] = VK_EXT_display_control,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = deviceEvent,
                ["type"] = VkDeviceEventTypeEXT ,
                },
            },
        ["name"] = VkDeviceEventInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkSubpassDependency2KHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = srcSubpass,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = dstSubpass,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = srcStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [6] = {
                ["name"] = dstStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [7] = {
                ["type"] = VkAccessFlags ,
                ["name"] = srcAccessMask,
                ["optional"] = true,
                },
            [8] = {
                ["type"] = VkAccessFlags ,
                ["name"] = dstAccessMask,
                ["optional"] = true,
                },
            [9] = {
                ["type"] = VkDependencyFlags ,
                ["name"] = dependencyFlags,
                ["optional"] = true,
                },
            [10] = {
                ["type"] = int32_t ,
                ["name"] = viewOffset,
                ["optional"] = true,
                },
            },
        ["name"] = VkSubpassDependency2KHR,
        ["returnedOnly"] = false,
        },
    ["VkXYColorEXT"] = {
        ["extension"] = VK_EXT_hdr_metadata,
        ["fields"] = {
            [1] = {
                ["name"] = x,
                ["type"] = float ,
                },
            [2] = {
                ["name"] = y,
                ["type"] = float ,
                },
            },
        ["name"] = VkXYColorEXT,
        ["returnedOnly"] = false,
        },
    ["VkValidationFlagsEXT"] = {
        ["extension"] = VK_EXT_validation_flags,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = disabledValidationCheckCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = disabledValidationCheckCount,
                ["type"] = const VkValidationCheckEXT * ,
                ["name"] = pDisabledValidationChecks,
                },
            },
        ["name"] = VkValidationFlagsEXT,
        ["returnedOnly"] = false,
        },
    ["VkAttachmentDescription2KHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["type"] = VkAttachmentDescriptionFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [5] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [6] = {
                ["name"] = loadOp,
                ["type"] = VkAttachmentLoadOp ,
                },
            [7] = {
                ["name"] = storeOp,
                ["type"] = VkAttachmentStoreOp ,
                },
            [8] = {
                ["name"] = stencilLoadOp,
                ["type"] = VkAttachmentLoadOp ,
                },
            [9] = {
                ["name"] = stencilStoreOp,
                ["type"] = VkAttachmentStoreOp ,
                },
            [10] = {
                ["name"] = initialLayout,
                ["type"] = VkImageLayout ,
                },
            [11] = {
                ["name"] = finalLayout,
                ["type"] = VkImageLayout ,
                },
            },
        ["name"] = VkAttachmentDescription2KHR,
        ["returnedOnly"] = false,
        },
    ["VkPipelineMultisampleStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineMultisampleStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = rasterizationSamples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [5] = {
                ["name"] = sampleShadingEnable,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = minSampleShading,
                ["type"] = float ,
                },
            [7] = {
                ["optional"] = true,
                ["name"] = pSampleMask,
                ["len"] = latexmath:[\lceil{\mathit{rasterizationSamples} \over 32}\rceil],
                ["altlen"] = (rasterizationSamples + 31) / 32,
                ["type"] = const VkSampleMask * ,
                },
            [8] = {
                ["name"] = alphaToCoverageEnable,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = alphaToOneEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPipelineMultisampleStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkBindBufferMemoryDeviceGroupInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = deviceIndexCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = deviceIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDeviceIndices,
                },
            },
        ["name"] = VkBindBufferMemoryDeviceGroupInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = properties,
                ["type"] = VkPhysicalDeviceProperties ,
                },
            },
        ["name"] = VkPhysicalDeviceProperties2,
        ["returnedOnly"] = false,
        },
    ["VkObjectTablePushConstantEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            [3] = {
                ["name"] = pipelineLayout,
                ["type"] = VkPipelineLayout ,
                },
            [4] = {
                ["name"] = stageFlags,
                ["type"] = VkShaderStageFlags ,
                },
            },
        ["name"] = VkObjectTablePushConstantEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkMultisamplePropertiesEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxSampleLocationGridSize,
                ["type"] = VkExtent2D ,
                },
            },
        ["name"] = VkMultisamplePropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkValidationFeaturesEXT"] = {
        ["extension"] = VK_EXT_validation_features,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = enabledValidationFeatureCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = enabledValidationFeatureCount,
                ["type"] = const VkValidationFeatureEnableEXT * ,
                ["name"] = pEnabledValidationFeatures,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = disabledValidationFeatureCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = disabledValidationFeatureCount,
                ["type"] = const VkValidationFeatureDisableEXT * ,
                ["name"] = pDisabledValidationFeatures,
                },
            },
        ["name"] = VkValidationFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageMemoryBarrier"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkAccessFlags ,
                ["name"] = srcAccessMask,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkAccessFlags ,
                ["name"] = dstAccessMask,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = oldLayout,
                ["type"] = VkImageLayout ,
                },
            [6] = {
                ["name"] = newLayout,
                ["type"] = VkImageLayout ,
                },
            [7] = {
                ["name"] = srcQueueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = dstQueueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [10] = {
                ["name"] = subresourceRange,
                ["type"] = VkImageSubresourceRange ,
                },
            },
        ["name"] = VkImageMemoryBarrier,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPresentInfoKHR"] = {
        ["extension"] = VK_KHR_display_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = srcRect,
                ["type"] = VkRect2D ,
                },
            [4] = {
                ["name"] = dstRect,
                ["type"] = VkRect2D ,
                },
            [5] = {
                ["name"] = persistent,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDisplayPresentInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageMemoryRequirements2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryRequirements,
                ["type"] = VkSparseImageMemoryRequirements ,
                },
            },
        ["name"] = VkSparseImageMemoryRequirements2,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportWScalingStateCreateInfoNV"] = {
        ["extension"] = VK_NV_clip_space_w_scaling,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = viewportWScalingEnable,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pViewportWScalings,
                ["len"] = viewportCount,
                ["type"] = const VkViewportWScalingNV * ,
                },
            },
        ["name"] = VkPipelineViewportWScalingStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPipelineDiscardRectangleStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_discard_rectangles,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineDiscardRectangleStateCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = discardRectangleMode,
                ["type"] = VkDiscardRectangleModeEXT ,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = discardRectangleCount,
                ["optional"] = true,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pDiscardRectangles,
                ["len"] = discardRectangleCount,
                ["type"] = const VkRect2D * ,
                },
            },
        ["name"] = VkPipelineDiscardRectangleStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDisplaySurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDisplaySurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = displayMode,
                ["type"] = VkDisplayModeKHR ,
                },
            [5] = {
                ["name"] = planeIndex,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = planeStackIndex,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = transform,
                ["type"] = VkSurfaceTransformFlagBitsKHR ,
                },
            [8] = {
                ["name"] = globalAlpha,
                ["type"] = float ,
                },
            [9] = {
                ["name"] = alphaMode,
                ["type"] = VkDisplayPlaneAlphaFlagBitsKHR ,
                },
            [10] = {
                ["name"] = imageExtent,
                ["type"] = VkExtent2D ,
                },
            },
        ["name"] = VkDisplaySurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPipelineColorBlendAttachmentState"] = {
        ["fields"] = {
            [1] = {
                ["name"] = blendEnable,
                ["type"] = VkBool32 ,
                },
            [2] = {
                ["name"] = srcColorBlendFactor,
                ["type"] = VkBlendFactor ,
                },
            [3] = {
                ["name"] = dstColorBlendFactor,
                ["type"] = VkBlendFactor ,
                },
            [4] = {
                ["name"] = colorBlendOp,
                ["type"] = VkBlendOp ,
                },
            [5] = {
                ["name"] = srcAlphaBlendFactor,
                ["type"] = VkBlendFactor ,
                },
            [6] = {
                ["name"] = dstAlphaBlendFactor,
                ["type"] = VkBlendFactor ,
                },
            [7] = {
                ["name"] = alphaBlendOp,
                ["type"] = VkBlendOp ,
                },
            [8] = {
                ["type"] = VkColorComponentFlags ,
                ["name"] = colorWriteMask,
                ["optional"] = true,
                },
            },
        ["name"] = VkPipelineColorBlendAttachmentState,
        ["returnedOnly"] = false,
        },
    ["VkClearDepthStencilValue"] = {
        ["fields"] = {
            [1] = {
                ["name"] = depth,
                ["type"] = float ,
                },
            [2] = {
                ["name"] = stencil,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkClearDepthStencilValue,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPlaneCapabilitiesKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["type"] = VkDisplayPlaneAlphaFlagsKHR ,
                ["name"] = supportedAlpha,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = minSrcPosition,
                ["type"] = VkOffset2D ,
                },
            [3] = {
                ["name"] = maxSrcPosition,
                ["type"] = VkOffset2D ,
                },
            [4] = {
                ["name"] = minSrcExtent,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["name"] = maxSrcExtent,
                ["type"] = VkExtent2D ,
                },
            [6] = {
                ["name"] = minDstPosition,
                ["type"] = VkOffset2D ,
                },
            [7] = {
                ["name"] = maxDstPosition,
                ["type"] = VkOffset2D ,
                },
            [8] = {
                ["name"] = minDstExtent,
                ["type"] = VkExtent2D ,
                },
            [9] = {
                ["name"] = maxDstExtent,
                ["type"] = VkExtent2D ,
                },
            },
        ["name"] = VkDisplayPlaneCapabilitiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkInputAttachmentAspectReference"] = {
        ["fields"] = {
            [1] = {
                ["name"] = subpass,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = inputAttachmentIndex,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = aspectMask,
                ["type"] = VkImageAspectFlags ,
                },
            },
        ["name"] = VkInputAttachmentAspectReference,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPlaneInfo2KHR"] = {
        ["extension"] = VK_KHR_get_display_properties2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDisplayModeKHR ,
                ["name"] = mode,
                ["externsync"] = true,
                },
            [4] = {
                ["name"] = planeIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDisplayPlaneInfo2KHR,
        ["returnedOnly"] = false,
        },
    ["VkImageSparseMemoryRequirementsInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            },
        ["name"] = VkImageSparseMemoryRequirementsInfo2,
        ["returnedOnly"] = false,
        },
    ["VkExternalMemoryProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = externalMemoryFeatures,
                ["type"] = VkExternalMemoryFeatureFlags ,
                },
            [2] = {
                ["type"] = VkExternalMemoryHandleTypeFlags ,
                ["name"] = exportFromImportedHandleTypes,
                ["optional"] = true,
                },
            [3] = {
                ["name"] = compatibleHandleTypes,
                ["type"] = VkExternalMemoryHandleTypeFlags ,
                },
            },
        ["name"] = VkExternalMemoryProperties,
        ["returnedOnly"] = false,
        },
    ["VkObjectTableEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            },
        ["name"] = VkObjectTableEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRasterizationStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineRasterizationStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = depthClampEnable,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = rasterizerDiscardEnable,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = polygonMode,
                ["type"] = VkPolygonMode ,
                },
            [7] = {
                ["type"] = VkCullModeFlags ,
                ["name"] = cullMode,
                ["optional"] = true,
                },
            [8] = {
                ["name"] = frontFace,
                ["type"] = VkFrontFace ,
                },
            [9] = {
                ["name"] = depthBiasEnable,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = depthBiasConstantFactor,
                ["type"] = float ,
                },
            [11] = {
                ["name"] = depthBiasClamp,
                ["type"] = float ,
                },
            [12] = {
                ["name"] = depthBiasSlopeFactor,
                ["type"] = float ,
                },
            [13] = {
                ["name"] = lineWidth,
                ["type"] = float ,
                },
            },
        ["name"] = VkPipelineRasterizationStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetLayoutCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDescriptorSetLayoutCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = bindingCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = bindingCount,
                ["type"] = const VkDescriptorSetLayoutBinding * ,
                ["name"] = pBindings,
                },
            },
        ["name"] = VkDescriptorSetLayoutCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkBaseInStructure"] = {
        ["fields"] = {
            [1] = {
                ["name"] = sType,
                ["type"] = VkStructureType ,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const struct VkBaseInStructure * ,
                },
            },
        ["name"] = VkBaseInStructure,
        ["returnedOnly"] = false,
        },
    ["VkSamplerYcbcrConversionInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = conversion,
                ["type"] = VkSamplerYcbcrConversion ,
                },
            },
        ["name"] = VkSamplerYcbcrConversionInfo,
        ["returnedOnly"] = false,
        },
    ["VkNativeBufferANDROID"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = handle,
                ["type"] = const void * ,
                },
            [4] = {
                ["name"] = stride,
                ["type"] = int ,
                },
            [5] = {
                ["name"] = format,
                ["type"] = int ,
                },
            [6] = {
                ["name"] = usage,
                ["type"] = int ,
                },
            },
        ["name"] = VkNativeBufferANDROID,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceCapabilities2EXT"] = {
        ["extension"] = VK_EXT_display_surface_counter,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = minImageCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxImageCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = currentExtent,
                ["type"] = VkExtent2D ,
                },
            [6] = {
                ["name"] = minImageExtent,
                ["type"] = VkExtent2D ,
                },
            [7] = {
                ["name"] = maxImageExtent,
                ["type"] = VkExtent2D ,
                },
            [8] = {
                ["name"] = maxImageArrayLayers,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["type"] = VkSurfaceTransformFlagsKHR ,
                ["name"] = supportedTransforms,
                ["optional"] = true,
                },
            [10] = {
                ["name"] = currentTransform,
                ["type"] = VkSurfaceTransformFlagBitsKHR ,
                },
            [11] = {
                ["type"] = VkCompositeAlphaFlagsKHR ,
                ["name"] = supportedCompositeAlpha,
                ["optional"] = true,
                },
            [12] = {
                ["type"] = VkImageUsageFlags ,
                ["name"] = supportedUsageFlags,
                ["optional"] = true,
                },
            [13] = {
                ["type"] = VkSurfaceCounterFlagsEXT ,
                ["name"] = supportedSurfaceCounters,
                ["optional"] = true,
                },
            },
        ["name"] = VkSurfaceCapabilities2EXT,
        ["returnedOnly"] = false,
        },
    ["VkBindAccelerationStructureMemoryInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = accelerationStructure,
                ["type"] = VkAccelerationStructureNV ,
                },
            [4] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [5] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = deviceIndexCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = deviceIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDeviceIndices,
                },
            },
        ["name"] = VkBindAccelerationStructureMemoryInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupSwapchainCreateInfoKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = modes,
                ["type"] = VkDeviceGroupPresentModeFlagsKHR ,
                },
            },
        ["name"] = VkDeviceGroupSwapchainCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkFormatProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = formatProperties,
                ["type"] = VkFormatProperties ,
                },
            },
        ["name"] = VkFormatProperties2,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRasterizationStateRasterizationOrderAMD"] = {
        ["extension"] = VK_AMD_rasterization_order,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = rasterizationOrder,
                ["type"] = VkRasterizationOrderAMD ,
                },
            },
        ["name"] = VkPipelineRasterizationStateRasterizationOrderAMD,
        ["returnedOnly"] = false,
        },
    ["VkShaderStatisticsInfoAMD"] = {
        ["extension"] = VK_AMD_shader_info,
        ["fields"] = {
            [1] = {
                ["name"] = shaderStageMask,
                ["type"] = VkShaderStageFlags ,
                },
            [2] = {
                ["name"] = resourceUsage,
                ["type"] = VkShaderResourceUsageAMD ,
                },
            [3] = {
                ["name"] = numPhysicalVgprs,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = numPhysicalSgprs,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = numAvailableVgprs,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = numAvailableSgprs,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = computeWorkGroupSize,
                ["type"] = uint32_t [3] ,
                },
            },
        ["name"] = VkShaderStatisticsInfoAMD,
        ["returnedOnly"] = false,
        },
    ["VkStreamDescriptorSurfaceCreateInfoGGP"] = {
        ["extension"] = VK_GGP_stream_descriptor_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkStreamDescriptorSurfaceCreateFlagsGGP ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = streamDescriptor,
                ["type"] = GgpStreamDescriptor ,
                },
            },
        ["name"] = VkStreamDescriptorSurfaceCreateInfoGGP,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorPoolCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDescriptorPoolCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = maxSets,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = poolSizeCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = poolSizeCount,
                ["type"] = const VkDescriptorPoolSize * ,
                ["name"] = pPoolSizes,
                },
            },
        ["name"] = VkDescriptorPoolCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineLayoutCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineLayoutCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = setLayoutCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = setLayoutCount,
                ["type"] = const VkDescriptorSetLayout * ,
                ["name"] = pSetLayouts,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = pushConstantRangeCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = pushConstantRangeCount,
                ["type"] = const VkPushConstantRange * ,
                ["name"] = pPushConstantRanges,
                },
            },
        ["name"] = VkPipelineLayoutCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSamplerYcbcrConversionImageFormatProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
                },
            [2] = {
                ["name"] = combinedImageSamplerDescriptorCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            },
        ["name"] = VkSamplerYcbcrConversionImageFormatProperties,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceFormat2KHR"] = {
        ["extension"] = VK_KHR_get_surface_capabilities2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = surfaceFormat,
                ["type"] = VkSurfaceFormatKHR ,
                },
            },
        ["name"] = VkSurfaceFormat2KHR,
        ["returnedOnly"] = false,
        },
    ["VkBindSparseInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = waitSemaphoreCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = waitSemaphoreCount,
                ["type"] = const VkSemaphore * ,
                ["name"] = pWaitSemaphores,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = bufferBindCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = bufferBindCount,
                ["type"] = const VkSparseBufferMemoryBindInfo * ,
                ["name"] = pBufferBinds,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = imageOpaqueBindCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = imageOpaqueBindCount,
                ["type"] = const VkSparseImageOpaqueMemoryBindInfo * ,
                ["name"] = pImageOpaqueBinds,
                },
            [9] = {
                ["type"] = uint32_t ,
                ["name"] = imageBindCount,
                ["optional"] = true,
                },
            [10] = {
                ["len"] = imageBindCount,
                ["type"] = const VkSparseImageMemoryBindInfo * ,
                ["name"] = pImageBinds,
                },
            [11] = {
                ["type"] = uint32_t ,
                ["name"] = signalSemaphoreCount,
                ["optional"] = true,
                },
            [12] = {
                ["len"] = signalSemaphoreCount,
                ["type"] = const VkSemaphore * ,
                ["name"] = pSignalSemaphores,
                },
            },
        ["name"] = VkBindSparseInfo,
        ["returnedOnly"] = false,
        },
    ["VkExtensionProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = extensionName,
                ["type"] = char [ VK_MAX_EXTENSION_NAME_SIZE] ,
                },
            [2] = {
                ["name"] = specVersion,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkExtensionProperties,
        ["returnedOnly"] = false,
        },
    ["VkImportMemoryWin32HandleInfoNV"] = {
        ["extension"] = VK_NV_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = HANDLE ,
                ["name"] = handle,
                ["optional"] = true,
                },
            },
        ["name"] = VkImportMemoryWin32HandleInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkComponentMapping"] = {
        ["fields"] = {
            [1] = {
                ["name"] = r,
                ["type"] = VkComponentSwizzle ,
                },
            [2] = {
                ["name"] = g,
                ["type"] = VkComponentSwizzle ,
                },
            [3] = {
                ["name"] = b,
                ["type"] = VkComponentSwizzle ,
                },
            [4] = {
                ["name"] = a,
                ["type"] = VkComponentSwizzle ,
                },
            },
        ["name"] = VkComponentMapping,
        ["returnedOnly"] = false,
        },
    ["VkBindImageMemorySwapchainInfoKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            [4] = {
                ["name"] = imageIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkBindImageMemorySwapchainInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkCopyDescriptorSet"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = srcSet,
                ["type"] = VkDescriptorSet ,
                },
            [4] = {
                ["name"] = srcBinding,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = srcArrayElement,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = dstSet,
                ["type"] = VkDescriptorSet ,
                },
            [7] = {
                ["name"] = dstBinding,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = dstArrayElement,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = descriptorCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkCopyDescriptorSet,
        ["returnedOnly"] = false,
        },
    ["VkApplicationInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_APPLICATION_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pApplicationName,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = applicationVersion,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pEngineName,
                ["optional"] = true,
                },
            [6] = {
                ["name"] = engineVersion,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = apiVersion,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkApplicationInfo,
        ["returnedOnly"] = false,
        },
    ["VkPresentFrameTokenGGP"] = {
        ["extension"] = VK_GGP_frame_token,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = frameToken,
                ["type"] = GgpFrameToken ,
                },
            },
        ["name"] = VkPresentFrameTokenGGP,
        ["returnedOnly"] = false,
        },
    ["VkHeadlessSurfaceCreateInfoEXT"] = {
        ["extension"] = VK_EXT_headless_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkHeadlessSurfaceCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkHeadlessSurfaceCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDrawMeshTasksIndirectCommandNV"] = {
        ["extension"] = VK_NV_mesh_shader,
        ["fields"] = {
            [1] = {
                ["name"] = taskCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = firstTask,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDrawMeshTasksIndirectCommandNV,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceCapabilitiesFullScreenExclusiveEXT"] = {
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = fullScreenExclusiveSupported,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkSurfaceCapabilitiesFullScreenExclusiveEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShaderCorePropertiesAMD"] = {
        ["extension"] = VK_AMD_shader_core_properties,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = shaderEngineCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = shaderArraysPerEngineCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = computeUnitsPerShaderArray,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = simdPerComputeUnit,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = wavefrontsPerSimd,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = wavefrontSize,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = sgprsPerSimd,
                ["type"] = uint32_t ,
                },
            [10] = {
                ["name"] = minSgprAllocation,
                ["type"] = uint32_t ,
                },
            [11] = {
                ["name"] = maxSgprAllocation,
                ["type"] = uint32_t ,
                },
            [12] = {
                ["name"] = sgprAllocationGranularity,
                ["type"] = uint32_t ,
                },
            [13] = {
                ["name"] = vgprsPerSimd,
                ["type"] = uint32_t ,
                },
            [14] = {
                ["name"] = minVgprAllocation,
                ["type"] = uint32_t ,
                },
            [15] = {
                ["name"] = maxVgprAllocation,
                ["type"] = uint32_t ,
                },
            [16] = {
                ["name"] = vgprAllocationGranularity,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceShaderCorePropertiesAMD,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceFullScreenExclusiveWin32InfoEXT"] = {
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = hmonitor,
                ["type"] = HMONITOR ,
                },
            },
        ["name"] = VkSurfaceFullScreenExclusiveWin32InfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceFullScreenExclusiveInfoEXT"] = {
        ["extension"] = VK_EXT_full_screen_exclusive,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = fullScreenExclusive,
                ["type"] = VkFullScreenExclusiveEXT ,
                },
            },
        ["name"] = VkSurfaceFullScreenExclusiveInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"] = {
        ["extension"] = VK_EXT_descriptor_indexing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT,
                },
            [2] = {
                ["name"] = maxVariableDescriptorCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkDescriptorSetVariableDescriptorCountLayoutSupportEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryDedicatedRequirements"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = prefersDedicatedAllocation,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = requiresDedicatedAllocation,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkMemoryDedicatedRequirements,
        ["returnedOnly"] = false,
        },
    ["VkPipelineCreationFeedbackEXT"] = {
        ["extension"] = VK_EXT_pipeline_creation_feedback,
        ["fields"] = {
            [1] = {
                ["name"] = flags,
                ["type"] = VkPipelineCreationFeedbackFlagsEXT ,
                },
            [2] = {
                ["name"] = duration,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkPipelineCreationFeedbackEXT,
        ["returnedOnly"] = false,
        },
    ["VkExportMemoryAllocateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlags ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExportMemoryAllocateInfo,
        ["returnedOnly"] = false,
        },
    ["VkImageFormatProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = imageFormatProperties,
                ["type"] = VkImageFormatProperties ,
                },
            },
        ["name"] = VkImageFormatProperties2,
        ["returnedOnly"] = false,
        },
    ["VkImageViewHandleInfoNVX"] = {
        ["extension"] = VK_NVX_image_view_handle,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = imageView,
                ["type"] = VkImageView ,
                },
            [4] = {
                ["name"] = descriptorType,
                ["type"] = VkDescriptorType ,
                },
            [5] = {
                ["type"] = VkSampler ,
                ["name"] = sampler,
                ["optional"] = true,
                },
            },
        ["name"] = VkImageViewHandleInfoNVX,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT"] = {
        ["extension"] = VK_EXT_blend_operation_advanced,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = advancedBlendCoherentOperations,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceYcbcrImageArraysFeaturesEXT"] = {
        ["extension"] = VK_EXT_ycbcr_image_arrays,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = ycbcrImageArrays,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceYcbcrImageArraysFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkGeometryNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_GEOMETRY_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = geometryType,
                ["type"] = VkGeometryTypeNV ,
                },
            [4] = {
                ["name"] = geometry,
                ["type"] = VkGeometryDataNV ,
                },
            [5] = {
                ["type"] = VkGeometryFlagsNV ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkGeometryNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"] = {
        ["extension"] = VK_NVX_multiview_per_view_attributes,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,
                },
            [2] = {
                ["name"] = perViewPositionAllComponents,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            },
        ["name"] = VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceFormatKHR"] = {
        ["fields"] = {
            [1] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [2] = {
                ["name"] = colorSpace,
                ["type"] = VkColorSpaceKHR ,
                },
            },
        ["name"] = VkSurfaceFormatKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFeatures2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = features,
                ["type"] = VkPhysicalDeviceFeatures ,
                },
            },
        ["name"] = VkPhysicalDeviceFeatures2,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassMultiviewCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = subpassCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = subpassCount,
                ["type"] = const uint32_t * ,
                ["name"] = pViewMasks,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = dependencyCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = dependencyCount,
                ["type"] = const int32_t * ,
                ["name"] = pViewOffsets,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = correlationMaskCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = correlationMaskCount,
                ["type"] = const uint32_t * ,
                ["name"] = pCorrelationMasks,
                },
            },
        ["name"] = VkRenderPassMultiviewCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkClearRect"] = {
        ["fields"] = {
            [1] = {
                ["name"] = rect,
                ["type"] = VkRect2D ,
                },
            [2] = {
                ["name"] = baseArrayLayer,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = layerCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkClearRect,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceCooperativeMatrixPropertiesNV"] = {
        ["extension"] = VK_NV_cooperative_matrix,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = cooperativeMatrixSupportedStages,
                ["type"] = VkShaderStageFlags ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDeviceCooperativeMatrixPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkDebugMarkerMarkerInfoEXT"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pMarkerName,
                },
            [4] = {
                ["type"] = float [4] ,
                ["name"] = color,
                ["optional"] = true,
                },
            },
        ["name"] = VkDebugMarkerMarkerInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDevicePushDescriptorPropertiesKHR"] = {
        ["extension"] = VK_KHR_push_descriptor,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = maxPushDescriptors,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDevicePushDescriptorPropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFloatControlsPropertiesKHR"] = {
        ["extension"] = VK_KHR_shader_float_controls,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = separateDenormSettings,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = separateRoundingModeSettings,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = shaderSignedZeroInfNanPreserveFloat16,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = shaderSignedZeroInfNanPreserveFloat32,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = shaderSignedZeroInfNanPreserveFloat64,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = shaderDenormPreserveFloat16,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = shaderDenormPreserveFloat32,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = shaderDenormPreserveFloat64,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = shaderDenormFlushToZeroFloat16,
                ["type"] = VkBool32 ,
                },
            [12] = {
                ["name"] = shaderDenormFlushToZeroFloat32,
                ["type"] = VkBool32 ,
                },
            [13] = {
                ["name"] = shaderDenormFlushToZeroFloat64,
                ["type"] = VkBool32 ,
                },
            [14] = {
                ["name"] = shaderRoundingModeRTEFloat16,
                ["type"] = VkBool32 ,
                },
            [15] = {
                ["name"] = shaderRoundingModeRTEFloat32,
                ["type"] = VkBool32 ,
                },
            [16] = {
                ["name"] = shaderRoundingModeRTEFloat64,
                ["type"] = VkBool32 ,
                },
            [17] = {
                ["name"] = shaderRoundingModeRTZFloat32,
                ["type"] = VkBool32 ,
                },
            [18] = {
                ["name"] = shaderRoundingModeRTZFloat64,
                ["type"] = VkBool32 ,
                },
            [19] = {
                ["name"] = shaderRoundingModeRTZFloat16,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFloatControlsPropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceImageViewImageFormatInfoEXT"] = {
        ["extension"] = VK_EXT_filter_cubic,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = imageViewType,
                ["type"] = VkImageViewType ,
                },
            },
        ["name"] = VkPhysicalDeviceImageViewImageFormatInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkSubpassBeginInfoKHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = contents,
                ["type"] = VkSubpassContents ,
                },
            },
        ["name"] = VkSubpassBeginInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkBufferDeviceAddressCreateInfoEXT"] = {
        ["extension"] = VK_EXT_buffer_device_address,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = deviceAddress,
                ["type"] = VkDeviceAddress ,
                },
            },
        ["name"] = VkBufferDeviceAddressCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkBufferDeviceAddressInfoEXT"] = {
        ["extension"] = VK_EXT_buffer_device_address,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            },
        ["name"] = VkBufferDeviceAddressInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkRect2D"] = {
        ["fields"] = {
            [1] = {
                ["name"] = offset,
                ["type"] = VkOffset2D ,
                },
            [2] = {
                ["name"] = extent,
                ["type"] = VkExtent2D ,
                },
            },
        ["name"] = VkRect2D,
        ["returnedOnly"] = false,
        },
    ["VkImageResolve"] = {
        ["fields"] = {
            [1] = {
                ["name"] = srcSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [2] = {
                ["name"] = srcOffset,
                ["type"] = VkOffset3D ,
                },
            [3] = {
                ["name"] = dstSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [4] = {
                ["name"] = dstOffset,
                ["type"] = VkOffset3D ,
                },
            [5] = {
                ["name"] = extent,
                ["type"] = VkExtent3D ,
                },
            },
        ["name"] = VkImageResolve,
        ["returnedOnly"] = false,
        },
    ["VkImageBlit"] = {
        ["fields"] = {
            [1] = {
                ["name"] = srcSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [2] = {
                ["name"] = srcOffsets,
                ["type"] = VkOffset3D [2] ,
                },
            [3] = {
                ["name"] = dstSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [4] = {
                ["name"] = dstOffsets,
                ["type"] = VkOffset3D [2] ,
                },
            },
        ["name"] = VkImageBlit,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"] = {
        ["extension"] = VK_EXT_buffer_device_address,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = bufferDeviceAddress,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = bufferDeviceAddressCaptureReplay,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = bufferDeviceAddressMultiDevice,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceBufferDeviceAddressFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkExternalMemoryImageCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = handleTypes,
                ["type"] = VkExternalMemoryHandleTypeFlags ,
                },
            },
        ["name"] = VkExternalMemoryImageCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkShaderResourceUsageAMD"] = {
        ["extension"] = VK_AMD_shader_info,
        ["fields"] = {
            [1] = {
                ["name"] = numUsedVgprs,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = numUsedSgprs,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = ldsSizePerLocalWorkGroup,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = ldsUsageSizeInBytes,
                ["type"] = size_t ,
                },
            [5] = {
                ["name"] = scratchMemUsageInBytes,
                ["type"] = size_t ,
                },
            },
        ["name"] = VkShaderResourceUsageAMD,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorImageInfo"] = {
        ["fields"] = {
            [1] = {
                ["noautovalidity"] = true,
                ["type"] = VkSampler ,
                ["name"] = sampler,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = VkImageView ,
                ["name"] = imageView,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkImageLayout ,
                ["name"] = imageLayout,
                },
            },
        ["name"] = VkDescriptorImageInfo,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetAllocateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = descriptorPool,
                ["type"] = VkDescriptorPool ,
                },
            [4] = {
                ["name"] = descriptorSetCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = descriptorSetCount,
                ["type"] = const VkDescriptorSetLayout * ,
                ["name"] = pSetLayouts,
                },
            },
        ["name"] = VkDescriptorSetAllocateInfo,
        ["returnedOnly"] = false,
        },
    ["VkAndroidHardwareBufferPropertiesANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = allocationSize,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = memoryTypeBits,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkAndroidHardwareBufferPropertiesANDROID,
        ["returnedOnly"] = false,
        },
    ["VkExportSemaphoreCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExportSemaphoreCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkImageFormatProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = maxExtent,
                ["type"] = VkExtent3D ,
                },
            [2] = {
                ["name"] = maxMipLevels,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = maxArrayLayers,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = sampleCounts,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = maxResourceSize,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkImageFormatProperties,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMemoryPriorityFeaturesEXT"] = {
        ["extension"] = VK_EXT_memory_priority,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = memoryPriority,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceMemoryPriorityFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMemoryBudgetPropertiesEXT"] = {
        ["extension"] = VK_EXT_memory_budget,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = heapBudget,
                ["type"] = VkDeviceSize [ VK_MAX_MEMORY_HEAPS] ,
                },
            [4] = {
                ["name"] = heapUsage,
                ["type"] = VkDeviceSize [ VK_MAX_MEMORY_HEAPS] ,
                },
            },
        ["name"] = VkPhysicalDeviceMemoryBudgetPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"] = {
        ["extension"] = VK_EXT_descriptor_indexing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = descriptorSetCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = descriptorSetCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDescriptorCounts,
                },
            },
        ["name"] = VkDescriptorSetVariableDescriptorCountAllocateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExternalBufferInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkBufferCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = usage,
                ["type"] = VkBufferUsageFlags ,
                },
            [5] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            },
        ["name"] = VkPhysicalDeviceExternalBufferInfo,
        ["returnedOnly"] = false,
        },
    ["VkImageCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkImageCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = imageType,
                ["type"] = VkImageType ,
                },
            [5] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [6] = {
                ["name"] = extent,
                ["type"] = VkExtent3D ,
                },
            [7] = {
                ["name"] = mipLevels,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = arrayLayers,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [10] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            [11] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [12] = {
                ["name"] = sharingMode,
                ["type"] = VkSharingMode ,
                },
            [13] = {
                ["type"] = uint32_t ,
                ["name"] = queueFamilyIndexCount,
                ["optional"] = true,
                },
            [14] = {
                ["len"] = queueFamilyIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pQueueFamilyIndices,
                ["noautovalidity"] = true,
                },
            [15] = {
                ["name"] = initialLayout,
                ["type"] = VkImageLayout ,
                },
            },
        ["name"] = VkImageCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceProtectedCapabilitiesKHR"] = {
        ["extension"] = VK_KHR_surface_protected_capabilities,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = supportsProtected,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkSurfaceProtectedCapabilitiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkXcbSurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_xcb_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkXcbSurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = xcb_connection_t * ,
                ["name"] = connection,
                },
            [5] = {
                ["name"] = window,
                ["type"] = xcb_window_t ,
                },
            },
        ["name"] = VkXcbSurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupCommandBufferBeginInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = deviceMask,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDeviceGroupCommandBufferBeginInfo,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPowerInfoEXT"] = {
        ["extension"] = VK_EXT_display_control,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = powerState,
                ["type"] = VkDisplayPowerStateEXT ,
                },
            },
        ["name"] = VkDisplayPowerInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineVertexInputStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineVertexInputStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = vertexBindingDescriptionCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = vertexBindingDescriptionCount,
                ["type"] = const VkVertexInputBindingDescription * ,
                ["name"] = pVertexBindingDescriptions,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = vertexAttributeDescriptionCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = vertexAttributeDescriptionCount,
                ["type"] = const VkVertexInputAttributeDescription * ,
                ["name"] = pVertexAttributeDescriptions,
                },
            },
        ["name"] = VkPipelineVertexInputStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkAccelerationStructureInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkAccelerationStructureTypeNV ,
                },
            [4] = {
                ["type"] = VkBuildAccelerationStructureFlagsNV ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = instanceCount,
                ["optional"] = true,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = geometryCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = geometryCount,
                ["type"] = const VkGeometryNV * ,
                ["name"] = pGeometries,
                },
            },
        ["name"] = VkAccelerationStructureInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSampleLocationsPropertiesEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = sampleLocationSampleCounts,
                ["type"] = VkSampleCountFlags ,
                },
            [4] = {
                ["name"] = maxSampleLocationGridSize,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["name"] = variableSampleLocations,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = sampleLocationSubPixelBits,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = sampleLocationCoordinateRange,
                ["type"] = float [2] ,
                },
            },
        ["name"] = VkPhysicalDeviceSampleLocationsPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkExportMemoryWin32HandleInfoNV"] = {
        ["extension"] = VK_NV_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = const SECURITY_ATTRIBUTES * ,
                ["name"] = pAttributes,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = DWORD ,
                ["name"] = dwAccess,
                ["optional"] = true,
                },
            },
        ["name"] = VkExportMemoryWin32HandleInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFragmentDensityMapPropertiesEXT"] = {
        ["extension"] = VK_EXT_fragment_density_map,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = minFragmentDensityTexelSize,
                ["type"] = VkExtent2D ,
                },
            [4] = {
                ["name"] = maxFragmentDensityTexelSize,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["name"] = fragmentDensityInvocations,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFragmentDensityMapPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryHeap"] = {
        ["fields"] = {
            [1] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["type"] = VkMemoryHeapFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkMemoryHeap,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceCapabilitiesKHR"] = {
        ["fields"] = {
            [1] = {
                ["name"] = minImageCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = maxImageCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = currentExtent,
                ["type"] = VkExtent2D ,
                },
            [4] = {
                ["name"] = minImageExtent,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["name"] = maxImageExtent,
                ["type"] = VkExtent2D ,
                },
            [6] = {
                ["name"] = maxImageArrayLayers,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["type"] = VkSurfaceTransformFlagsKHR ,
                ["name"] = supportedTransforms,
                ["optional"] = true,
                },
            [8] = {
                ["name"] = currentTransform,
                ["type"] = VkSurfaceTransformFlagBitsKHR ,
                },
            [9] = {
                ["type"] = VkCompositeAlphaFlagsKHR ,
                ["name"] = supportedCompositeAlpha,
                ["optional"] = true,
                },
            [10] = {
                ["type"] = VkImageUsageFlags ,
                ["name"] = supportedUsageFlags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSurfaceCapabilitiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFragmentDensityMapFeaturesEXT"] = {
        ["extension"] = VK_EXT_fragment_density_map,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = fragmentDensityMap,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = fragmentDensityMapDynamic,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = fragmentDensityMapNonSubsampledImages,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFragmentDensityMapFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT"] = {
        ["extension"] = VK_EXT_sampler_filter_minmax,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = filterMinmaxSingleComponentFormats,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = filterMinmaxImageComponentMapping,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorPoolSize"] = {
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkDescriptorType ,
                },
            [2] = {
                ["name"] = descriptorCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDescriptorPoolSize,
        ["returnedOnly"] = false,
        },
    ["VkDeviceMemoryOverallocationCreateInfoAMD"] = {
        ["extension"] = VK_AMD_memory_overallocation_behavior,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = overallocationBehavior,
                ["type"] = VkMemoryOverallocationBehaviorAMD ,
                },
            },
        ["name"] = VkDeviceMemoryOverallocationCreateInfoAMD,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMeshShaderPropertiesNV"] = {
        ["extension"] = VK_NV_mesh_shader,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxDrawMeshTasksCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxTaskWorkGroupInvocations,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = maxTaskWorkGroupSize,
                ["type"] = uint32_t [3] ,
                },
            [6] = {
                ["name"] = maxTaskTotalMemorySize,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = maxTaskOutputCount,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = maxMeshWorkGroupInvocations,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = maxMeshWorkGroupSize,
                ["type"] = uint32_t [3] ,
                },
            [10] = {
                ["name"] = maxMeshTotalMemorySize,
                ["type"] = uint32_t ,
                },
            [11] = {
                ["name"] = maxMeshOutputVertices,
                ["type"] = uint32_t ,
                },
            [12] = {
                ["name"] = maxMeshOutputPrimitives,
                ["type"] = uint32_t ,
                },
            [13] = {
                ["name"] = maxMeshMultiviewViewCount,
                ["type"] = uint32_t ,
                },
            [14] = {
                ["name"] = meshOutputPerVertexGranularity,
                ["type"] = uint32_t ,
                },
            [15] = {
                ["name"] = meshOutputPerPrimitiveGranularity,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceMeshShaderPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGeneratedCommandsLimitsNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = maxIndirectCommandsLayoutTokenCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxObjectEntryCounts,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = minSequenceCountBufferOffsetAlignment,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = minSequenceIndexBufferOffsetAlignment,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = minCommandsTokenBufferOffsetAlignment,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDeviceGeneratedCommandsLimitsNVX,
        ["returnedOnly"] = false,
        },
    ["VkDebugMarkerObjectTagInfoEXT"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = objectType,
                ["type"] = VkDebugReportObjectTypeEXT ,
                },
            [4] = {
                ["name"] = object,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["name"] = tagName,
                ["type"] = uint64_t ,
                },
            [6] = {
                ["name"] = tagSize,
                ["type"] = size_t ,
                },
            [7] = {
                ["len"] = tagSize,
                ["type"] = const void * ,
                ["name"] = pTag,
                },
            },
        ["name"] = VkDebugMarkerObjectTagInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkSubresourceLayout"] = {
        ["fields"] = {
            [1] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["name"] = rowPitch,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = arrayPitch,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = depthPitch,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkSubresourceLayout,
        ["returnedOnly"] = false,
        },
    ["VkCommandBufferInheritanceConditionalRenderingInfoEXT"] = {
        ["extension"] = VK_EXT_conditional_rendering,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = conditionalRenderingEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkCommandBufferInheritanceConditionalRenderingInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageStencilUsageCreateInfoEXT"] = {
        ["extension"] = VK_EXT_separate_stencil_usage,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = stencilUsage,
                ["type"] = VkImageUsageFlags ,
                },
            },
        ["name"] = VkImageStencilUsageCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkAccelerationStructureCreateInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = compactedSize,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = info,
                ["type"] = VkAccelerationStructureInfoNV ,
                },
            },
        ["name"] = VkAccelerationStructureCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkFormatProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkFormatFeatureFlags ,
                ["name"] = linearTilingFeatures,
                ["optional"] = true,
                },
            [2] = {
                ["type"] = VkFormatFeatureFlags ,
                ["name"] = optimalTilingFeatures,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = VkFormatFeatureFlags ,
                ["name"] = bufferFeatures,
                ["optional"] = true,
                },
            },
        ["name"] = VkFormatProperties,
        ["returnedOnly"] = false,
        },
    ["VkSubpassDependency"] = {
        ["fields"] = {
            [1] = {
                ["name"] = srcSubpass,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = dstSubpass,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = srcStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [4] = {
                ["name"] = dstStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [5] = {
                ["type"] = VkAccessFlags ,
                ["name"] = srcAccessMask,
                ["optional"] = true,
                },
            [6] = {
                ["type"] = VkAccessFlags ,
                ["name"] = dstAccessMask,
                ["optional"] = true,
                },
            [7] = {
                ["type"] = VkDependencyFlags ,
                ["name"] = dependencyFlags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSubpassDependency,
        ["returnedOnly"] = false,
        },
    ["VkDebugUtilsLabelEXT"] = {
        ["extension"] = VK_EXT_debug_utils,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pLabelName,
                },
            [4] = {
                ["type"] = float [4] ,
                ["name"] = color,
                ["optional"] = true,
                },
            },
        ["name"] = VkDebugUtilsLabelEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageDrmFormatModifierExplicitCreateInfoEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = drmFormatModifier,
                ["type"] = uint64_t ,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = drmFormatModifierPlaneCount,
                ["optional"] = false,
                },
            [5] = {
                ["len"] = drmFormatModifierPlaneCount,
                ["type"] = const VkSubresourceLayout * ,
                ["name"] = pPlaneLayouts,
                },
            },
        ["name"] = VkImageDrmFormatModifierExplicitCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceRayTracingPropertiesNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = shaderGroupHandleSize,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxRecursionDepth,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = maxShaderGroupStride,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = shaderGroupBaseAlignment,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = maxGeometryCount,
                ["type"] = uint64_t ,
                },
            [8] = {
                ["name"] = maxInstanceCount,
                ["type"] = uint64_t ,
                },
            [9] = {
                ["name"] = maxDescriptorSetAccelerationStructures,
                ["type"] = uint32_t ,
                },
            [10] = {
                ["name"] = maxTriangleCount,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkPhysicalDeviceRayTracingPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkDrmFormatModifierPropertiesEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["name"] = drmFormatModifier,
                ["type"] = uint64_t ,
                },
            [2] = {
                ["name"] = drmFormatModifierPlaneCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = drmFormatModifierTilingFeatures,
                ["type"] = VkFormatFeatureFlags ,
                },
            },
        ["name"] = VkDrmFormatModifierPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkSubpassEndInfoKHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            },
        ["name"] = VkSubpassEndInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkDrmFormatModifierPropertiesListEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = drmFormatModifierCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = drmFormatModifierCount,
                ["type"] = VkDrmFormatModifierPropertiesEXT * ,
                ["name"] = pDrmFormatModifierProperties,
                ["optional"] = true,false,
                },
            },
        ["name"] = VkDrmFormatModifierPropertiesListEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageDrmFormatModifierListCreateInfoEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = drmFormatModifierCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = drmFormatModifierCount,
                ["type"] = const uint64_t * ,
                ["name"] = pDrmFormatModifiers,
                },
            },
        ["name"] = VkImageDrmFormatModifierListCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkAccelerationStructureMemoryRequirementsInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkAccelerationStructureMemoryRequirementsTypeNV ,
                },
            [4] = {
                ["name"] = accelerationStructure,
                ["type"] = VkAccelerationStructureNV ,
                },
            },
        ["name"] = VkAccelerationStructureMemoryRequirementsInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkRefreshCycleDurationGOOGLE"] = {
        ["extension"] = VK_GOOGLE_display_timing,
        ["fields"] = {
            [1] = {
                ["name"] = refreshDuration,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkRefreshCycleDurationGOOGLE,
        ["returnedOnly"] = false,
        },
    ["VkWriteDescriptorSetAccelerationStructureNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = accelerationStructureCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = accelerationStructureCount,
                ["type"] = const VkAccelerationStructureNV * ,
                ["name"] = pAccelerationStructures,
                },
            },
        ["name"] = VkWriteDescriptorSetAccelerationStructureNV,
        ["returnedOnly"] = false,
        },
    ["VkImageDrmFormatModifierPropertiesEXT"] = {
        ["extension"] = VK_EXT_image_drm_format_modifier,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = drmFormatModifier,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkImageDrmFormatModifierPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDeviceQueueInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = flags,
                ["type"] = VkDeviceQueueCreateFlags ,
                },
            [4] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = queueIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDeviceQueueInfo2,
        ["returnedOnly"] = false,
        },
    ["VkCooperativeMatrixPropertiesNV"] = {
        ["extension"] = VK_NV_cooperative_matrix,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = MSize,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = NSize,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = KSize,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = AType,
                ["type"] = VkComponentTypeNV ,
                },
            [7] = {
                ["name"] = BType,
                ["type"] = VkComponentTypeNV ,
                },
            [8] = {
                ["name"] = CType,
                ["type"] = VkComponentTypeNV ,
                },
            [9] = {
                ["name"] = DType,
                ["type"] = VkComponentTypeNV ,
                },
            [10] = {
                ["name"] = scope,
                ["type"] = VkScopeNV ,
                },
            },
        ["name"] = VkCooperativeMatrixPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkBufferMemoryBarrier"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkAccessFlags ,
                ["name"] = srcAccessMask,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkAccessFlags ,
                ["name"] = dstAccessMask,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = srcQueueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = dstQueueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [8] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [9] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkBufferMemoryBarrier,
        ["returnedOnly"] = false,
        },
    ["VkExternalFormatANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = externalFormat,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkExternalFormatANDROID,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkRenderPassCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = attachmentCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = attachmentCount,
                ["type"] = const VkAttachmentDescription * ,
                ["name"] = pAttachments,
                },
            [6] = {
                ["name"] = subpassCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = subpassCount,
                ["type"] = const VkSubpassDescription * ,
                ["name"] = pSubpasses,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = dependencyCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = dependencyCount,
                ["type"] = const VkSubpassDependency * ,
                ["name"] = pDependencies,
                },
            },
        ["name"] = VkRenderPassCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkMemoryBarrier"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkAccessFlags ,
                ["name"] = srcAccessMask,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkAccessFlags ,
                ["name"] = dstAccessMask,
                ["optional"] = true,
                },
            },
        ["name"] = VkMemoryBarrier,
        ["returnedOnly"] = false,
        },
    ["VkGeometryAABBNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkBuffer ,
                ["name"] = aabbData,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = numAABBs,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkGeometryAABBNV,
        ["returnedOnly"] = false,
        },
    ["VkAllocationCallbacks"] = {
        ["fields"] = {
            [1] = {
                ["type"] = void * ,
                ["name"] = pUserData,
                ["optional"] = true,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = PFN_vkAllocationFunction ,
                ["name"] = pfnAllocation,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = PFN_vkReallocationFunction ,
                ["name"] = pfnReallocation,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = PFN_vkFreeFunction ,
                ["name"] = pfnFree,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = PFN_vkInternalAllocationNotification ,
                ["name"] = pfnInternalAllocation,
                ["optional"] = true,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = PFN_vkInternalFreeNotification ,
                ["name"] = pfnInternalFree,
                ["optional"] = true,
                },
            },
        ["name"] = VkAllocationCallbacks,
        ["returnedOnly"] = false,
        },
    ["VkRayTracingShaderGroupCreateInfoNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = type,
                ["type"] = VkRayTracingShaderGroupTypeNV ,
                },
            [4] = {
                ["name"] = generalShader,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = closestHitShader,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = anyHitShader,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = intersectionShader,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkRayTracingShaderGroupCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassFragmentDensityMapCreateInfoEXT"] = {
        ["extension"] = VK_EXT_fragment_density_map,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = fragmentDensityMapAttachment,
                ["type"] = VkAttachmentReference ,
                },
            },
        ["name"] = VkRenderPassFragmentDensityMapCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupDeviceCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = physicalDeviceCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = physicalDeviceCount,
                ["type"] = const VkPhysicalDevice * ,
                ["name"] = pPhysicalDevices,
                },
            },
        ["name"] = VkDeviceGroupDeviceCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = sampleOrderType,
                ["type"] = VkCoarseSampleOrderTypeNV ,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = customSampleOrderCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = customSampleOrderCount,
                ["type"] = const VkCoarseSampleOrderCustomNV * ,
                ["name"] = pCustomSampleOrders,
                },
            },
        ["name"] = VkPipelineViewportCoarseSampleOrderStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"] = {
        ["extension"] = VK_NV_fragment_shader_barycentric,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = fragmentShaderBarycentric,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShadingRateImagePropertiesNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = shadingRateTexelSize,
                ["type"] = VkExtent2D ,
                },
            [4] = {
                ["name"] = shadingRatePaletteSize,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = shadingRateMaxCoarseSamples,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceShadingRateImagePropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShadingRateImageFeaturesNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = shadingRateImage,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = shadingRateCoarseSampleOrder,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceShadingRateImageFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorUpdateTemplateEntry"] = {
        ["fields"] = {
            [1] = {
                ["name"] = dstBinding,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = dstArrayElement,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = descriptorCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = descriptorType,
                ["type"] = VkDescriptorType ,
                },
            [5] = {
                ["name"] = offset,
                ["type"] = size_t ,
                },
            [6] = {
                ["name"] = stride,
                ["type"] = size_t ,
                },
            },
        ["name"] = VkDescriptorUpdateTemplateEntry,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShaderImageFootprintFeaturesNV"] = {
        ["extension"] = VK_NV_shader_image_footprint,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = imageFootprint,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceShaderImageFootprintFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkSubpassSampleLocationsEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["name"] = subpassIndex,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = sampleLocationsInfo,
                ["type"] = VkSampleLocationsInfoEXT ,
                },
            },
        ["name"] = VkSubpassSampleLocationsEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRasterizationConservativeStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_conservative_rasterization,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineRasterizationConservativeStateCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = conservativeRasterizationMode,
                ["type"] = VkConservativeRasterizationModeEXT ,
                },
            [5] = {
                ["name"] = extraPrimitiveOverestimationSize,
                ["type"] = float ,
                },
            },
        ["name"] = VkPipelineRasterizationConservativeStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportShadingRateImageStateCreateInfoNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = shadingRateImageEnable,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = viewportCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = viewportCount,
                ["type"] = const VkShadingRatePaletteNV * ,
                ["name"] = pShadingRatePalettes,
                ["optional"] = true,
                },
            },
        ["name"] = VkPipelineViewportShadingRateImageStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkValidationCacheCreateInfoEXT"] = {
        ["extension"] = VK_EXT_validation_cache,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkValidationCacheCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = size_t ,
                ["name"] = initialDataSize,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = initialDataSize,
                ["type"] = const void * ,
                ["name"] = pInitialData,
                },
            },
        ["name"] = VkValidationCacheCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV"] = {
        ["extension"] = VK_NV_dedicated_allocation_image_aliasing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = dedicatedAllocationImageAliasing,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkCoarseSampleOrderCustomNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["name"] = shadingRate,
                ["type"] = VkShadingRatePaletteEntryNV ,
                },
            [2] = {
                ["name"] = sampleCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = sampleLocationCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = sampleLocationCount,
                ["type"] = const VkCoarseSampleLocationNV * ,
                ["name"] = pSampleLocations,
                },
            },
        ["name"] = VkCoarseSampleOrderCustomNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceComputeShaderDerivativesFeaturesNV"] = {
        ["extension"] = VK_NV_compute_shader_derivatives,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = computeDerivativeGroupQuads,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = computeDerivativeGroupLinear,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceComputeShaderDerivativesFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceCornerSampledImageFeaturesNV"] = {
        ["extension"] = VK_NV_corner_sampled_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = cornerSampledImage,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceCornerSampledImageFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkQueueFamilyProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkQueueFlags ,
                ["name"] = queueFlags,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = queueCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = timestampValidBits,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = minImageTransferGranularity,
                ["type"] = VkExtent3D ,
                },
            },
        ["name"] = VkQueueFamilyProperties,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPropertiesKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["name"] = display,
                ["type"] = VkDisplayKHR ,
                },
            [2] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = displayName,
                },
            [3] = {
                ["name"] = physicalDimensions,
                ["type"] = VkExtent2D ,
                },
            [4] = {
                ["name"] = physicalResolution,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["type"] = VkSurfaceTransformFlagsKHR ,
                ["name"] = supportedTransforms,
                ["optional"] = true,
                },
            [6] = {
                ["name"] = planeReorderPossible,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = persistentContent,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDisplayPropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkAttachmentReference"] = {
        ["fields"] = {
            [1] = {
                ["name"] = attachment,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = layout,
                ["type"] = VkImageLayout ,
                },
            },
        ["name"] = VkAttachmentReference,
        ["returnedOnly"] = false,
        },
    ["VkImageMemoryRequirementsInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            },
        ["name"] = VkImageMemoryRequirementsInfo2,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExclusiveScissorFeaturesNV"] = {
        ["extension"] = VK_NV_scissor_exclusive,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = exclusiveScissor,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceExclusiveScissorFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkExtent3D"] = {
        ["fields"] = {
            [1] = {
                ["name"] = width,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = height,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = depth,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkExtent3D,
        ["returnedOnly"] = false,
        },
    ["VkVertexInputBindingDivisorDescriptionEXT"] = {
        ["extension"] = VK_EXT_vertex_attribute_divisor,
        ["fields"] = {
            [1] = {
                ["name"] = binding,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = divisor,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkVertexInputBindingDivisorDescriptionEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRasterizationStateStreamCreateInfoEXT"] = {
        ["extension"] = VK_EXT_transform_feedback,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineRasterizationStateStreamCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = rasterizationStream,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPipelineRasterizationStateStreamCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceTransformFeedbackPropertiesEXT"] = {
        ["extension"] = VK_EXT_transform_feedback,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxTransformFeedbackStreams,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxTransformFeedbackBuffers,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = maxTransformFeedbackBufferSize,
                ["type"] = VkDeviceSize ,
                },
            [6] = {
                ["name"] = maxTransformFeedbackStreamDataSize,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = maxTransformFeedbackBufferDataSize,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = maxTransformFeedbackBufferDataStride,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = transformFeedbackQueries,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = transformFeedbackStreamsLinesTriangles,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = transformFeedbackRasterizationStreamSelect,
                ["type"] = VkBool32 ,
                },
            [12] = {
                ["name"] = transformFeedbackDraw,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceTransformFeedbackPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceTransformFeedbackFeaturesEXT"] = {
        ["extension"] = VK_EXT_transform_feedback,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = transformFeedback,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = geometryStreams,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceTransformFeedbackFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDisplayModeProperties2KHR"] = {
        ["extension"] = VK_KHR_get_display_properties2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = displayModeProperties,
                ["type"] = VkDisplayModePropertiesKHR ,
                },
            },
        ["name"] = VkDisplayModeProperties2KHR,
        ["returnedOnly"] = false,
        },
    ["VkPushConstantRange"] = {
        ["fields"] = {
            [1] = {
                ["name"] = stageFlags,
                ["type"] = VkShaderStageFlags ,
                },
            [2] = {
                ["name"] = offset,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = size,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPushConstantRange,
        ["returnedOnly"] = false,
        },
    ["VkDeviceQueueCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDeviceQueueCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = queueCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = queueCount,
                ["type"] = const float * ,
                ["name"] = pQueuePriorities,
                },
            },
        ["name"] = VkDeviceQueueCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkIndirectCommandsLayoutTokenNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = tokenType,
                ["type"] = VkIndirectCommandsTokenTypeNVX ,
                },
            [2] = {
                ["name"] = bindingUnit,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = dynamicCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = divisor,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkIndirectCommandsLayoutTokenNVX,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExternalImageFormatInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            },
        ["name"] = VkPhysicalDeviceExternalImageFormatInfo,
        ["returnedOnly"] = false,
        },
    ["VkSubpassDescriptionDepthStencilResolveKHR"] = {
        ["extension"] = VK_KHR_depth_stencil_resolve,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = depthResolveMode,
                ["type"] = VkResolveModeFlagBitsKHR ,
                },
            [4] = {
                ["name"] = stencilResolveMode,
                ["type"] = VkResolveModeFlagBitsKHR ,
                },
            [5] = {
                ["type"] = const VkAttachmentReference2KHR * ,
                ["name"] = pDepthStencilResolveAttachment,
                ["optional"] = true,
                },
            },
        ["name"] = VkSubpassDescriptionDepthStencilResolveKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMaintenance3Properties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxPerSetDescriptors,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxMemoryAllocationSize,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkPhysicalDeviceMaintenance3Properties,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExternalMemoryHostPropertiesEXT"] = {
        ["extension"] = VK_EXT_external_memory_host,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = minImportedHostPointerAlignment,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDeviceExternalMemoryHostPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDisplayProperties2KHR"] = {
        ["extension"] = VK_KHR_get_display_properties2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = displayProperties,
                ["type"] = VkDisplayPropertiesKHR ,
                },
            },
        ["name"] = VkDisplayProperties2KHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSparseProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = residencyStandard2DBlockShape,
                ["type"] = VkBool32 ,
                },
            [2] = {
                ["name"] = residencyStandard2DMultisampleBlockShape,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["name"] = residencyStandard3DBlockShape,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = residencyAlignedMipSize,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = residencyNonResidentStrict,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceSparseProperties,
        ["returnedOnly"] = false,
        },
    ["VkCheckpointDataNV"] = {
        ["extension"] = VK_NV_device_diagnostic_checkpoints,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = stage,
                ["type"] = VkPipelineStageFlagBits ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pCheckpointMarker,
                },
            },
        ["name"] = VkCheckpointDataNV,
        ["returnedOnly"] = false,
        },
    ["VkQueueFamilyCheckpointPropertiesNV"] = {
        ["extension"] = VK_NV_device_diagnostic_checkpoints,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,
                },
            [2] = {
                ["name"] = checkpointExecutionStageMask,
                ["type"] = VkPipelineStageFlags ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkQueueFamilyCheckpointPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT"] = {
        ["extension"] = VK_EXT_vertex_attribute_divisor,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = vertexAttributeInstanceRateDivisor,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = vertexAttributeInstanceRateZeroDivisor,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSurfaceInfo2KHR"] = {
        ["extension"] = VK_KHR_get_surface_capabilities2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            },
        ["name"] = VkPhysicalDeviceSurfaceInfo2KHR,
        ["returnedOnly"] = false,
        },
    ["VkPresentRegionsKHR"] = {
        ["extension"] = VK_KHR_incremental_present,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = swapchainCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = swapchainCount,
                ["type"] = const VkPresentRegionKHR * ,
                ["name"] = pRegions,
                ["optional"] = true,
                },
            },
        ["name"] = VkPresentRegionsKHR,
        ["returnedOnly"] = false,
        },
    ["VkViewport"] = {
        ["fields"] = {
            [1] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = x,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = y,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = width,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = height,
                },
            [5] = {
                ["name"] = minDepth,
                ["type"] = float ,
                },
            [6] = {
                ["name"] = maxDepth,
                ["type"] = float ,
                },
            },
        ["name"] = VkViewport,
        ["returnedOnly"] = false,
        },
    ["VkComputePipelineCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = stage,
                ["type"] = VkPipelineShaderStageCreateInfo ,
                },
            [5] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = VkPipeline ,
                ["name"] = basePipelineHandle,
                ["optional"] = true,
                },
            [7] = {
                ["name"] = basePipelineIndex,
                ["type"] = int32_t ,
                },
            },
        ["name"] = VkComputePipelineCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkExportFenceCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalFenceHandleTypeFlags ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExportFenceCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceConditionalRenderingFeaturesEXT"] = {
        ["extension"] = VK_EXT_conditional_rendering,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = conditionalRendering,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = inheritedConditionalRendering,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceConditionalRenderingFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkBufferViewCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkBufferViewCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [5] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [6] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [7] = {
                ["name"] = range,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkBufferViewCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkCommandBufferAllocateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = commandPool,
                ["type"] = VkCommandPool ,
                },
            [4] = {
                ["name"] = level,
                ["type"] = VkCommandBufferLevel ,
                },
            [5] = {
                ["name"] = commandBufferCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkCommandBufferAllocateInfo,
        ["returnedOnly"] = false,
        },
    ["VkXlibSurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_xlib_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkXlibSurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = Display * ,
                ["name"] = dpy,
                },
            [5] = {
                ["name"] = window,
                ["type"] = Window ,
                },
            },
        ["name"] = VkXlibSurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkHdrMetadataEXT"] = {
        ["extension"] = VK_EXT_hdr_metadata,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_HDR_METADATA_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkXYColorEXT ,
                ["name"] = displayPrimaryRed,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = VkXYColorEXT ,
                ["name"] = displayPrimaryGreen,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = VkXYColorEXT ,
                ["name"] = displayPrimaryBlue,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = VkXYColorEXT ,
                ["name"] = whitePoint,
                },
            [7] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = maxLuminance,
                },
            [8] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = minLuminance,
                },
            [9] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = maxContentLightLevel,
                },
            [10] = {
                ["noautovalidity"] = true,
                ["type"] = float ,
                ["name"] = maxFrameAverageLightLevel,
                },
            },
        ["name"] = VkHdrMetadataEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryWin32HandlePropertiesKHR"] = {
        ["extension"] = VK_KHR_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryTypeBits,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryWin32HandlePropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkAcquireNextImageInfoKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["externsync"] = true,
                },
            [4] = {
                ["name"] = timeout,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["externsync"] = true,
                ["type"] = VkSemaphore ,
                ["name"] = semaphore,
                ["optional"] = true,
                },
            [6] = {
                ["externsync"] = true,
                ["type"] = VkFence ,
                ["name"] = fence,
                ["optional"] = true,
                },
            [7] = {
                ["name"] = deviceMask,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkAcquireNextImageInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkGeometryDataNV"] = {
        ["extension"] = VK_NV_ray_tracing,
        ["fields"] = {
            [1] = {
                ["name"] = triangles,
                ["type"] = VkGeometryTrianglesNV ,
                },
            [2] = {
                ["name"] = aabbs,
                ["type"] = VkGeometryAABBNV ,
                },
            },
        ["name"] = VkGeometryDataNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDevice8BitStorageFeaturesKHR"] = {
        ["extension"] = VK_KHR_8bit_storage,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = storageBuffer8BitAccess,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = uniformAndStorageBuffer8BitAccess,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = storagePushConstant8,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDevice8BitStorageFeaturesKHR,
        ["returnedOnly"] = false,
        },
    ["VkMemoryGetAndroidHardwareBufferInfoANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            },
        ["name"] = VkMemoryGetAndroidHardwareBufferInfoANDROID,
        ["returnedOnly"] = false,
        },
    ["VkImportFenceFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_fence_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkFence ,
                ["name"] = fence,
                ["externsync"] = true,
                },
            [4] = {
                ["type"] = VkFenceImportFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = handleType,
                ["type"] = VkExternalFenceHandleTypeFlagBits ,
                },
            [6] = {
                ["name"] = fd,
                ["type"] = int ,
                },
            },
        ["name"] = VkImportFenceFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkExternalImageFormatPropertiesNV"] = {
        ["extension"] = VK_NV_external_memory_capabilities,
        ["fields"] = {
            [1] = {
                ["name"] = imageFormatProperties,
                ["type"] = VkImageFormatProperties ,
                },
            [2] = {
                ["type"] = VkExternalMemoryFeatureFlagsNV ,
                ["name"] = externalMemoryFeatures,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = exportFromImportedHandleTypes,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = compatibleHandleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExternalImageFormatPropertiesNV,
        ["returnedOnly"] = false,
        },
    ["VkAndroidHardwareBufferUsageANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID,
                },
            [2] = {
                ["name"] = androidHardwareBufferUsage,
                ["type"] = uint64_t ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkAndroidHardwareBufferUsageANDROID,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceExternalSemaphoreInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = handleType,
                ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                },
            },
        ["name"] = VkPhysicalDeviceExternalSemaphoreInfo,
        ["returnedOnly"] = false,
        },
    ["VkImportAndroidHardwareBufferInfoANDROID"] = {
        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = struct AHardwareBuffer * ,
                },
            },
        ["name"] = VkImportAndroidHardwareBufferInfoANDROID,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDevicePCIBusInfoPropertiesEXT"] = {
        ["extension"] = VK_EXT_pci_bus_info,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = pciDomain,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = pciBus,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = pciFunction,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = pciDevice,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDevicePCIBusInfoPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"] = {
        ["extension"] = VK_EXT_vertex_attribute_divisor,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = maxVertexAttribDivisor,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDebugReportCallbackCreateInfoEXT"] = {
        ["extension"] = VK_EXT_debug_report,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDebugReportFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pfnCallback,
                ["type"] = PFN_vkDebugReportCallbackEXT ,
                },
            [5] = {
                ["type"] = void * ,
                ["name"] = pUserData,
                ["optional"] = true,
                },
            },
        ["name"] = VkDebugReportCallbackCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkOffset2D"] = {
        ["fields"] = {
            [1] = {
                ["name"] = x,
                ["type"] = int32_t ,
                },
            [2] = {
                ["name"] = y,
                ["type"] = int32_t ,
                },
            },
        ["name"] = VkOffset2D,
        ["returnedOnly"] = false,
        },
    ["VkTextureLODGatherFormatPropertiesAMD"] = {
        ["extension"] = VK_AMD_texture_gather_bias_lod,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,
                },
            [2] = {
                ["name"] = supportsTextureGatherLODBiasAMD,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkTextureLODGatherFormatPropertiesAMD,
        ["returnedOnly"] = false,
        },
    ["VkGraphicsPipelineCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = stageCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = stageCount,
                ["type"] = const VkPipelineShaderStageCreateInfo * ,
                ["name"] = pStages,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineVertexInputStateCreateInfo * ,
                ["name"] = pVertexInputState,
                ["optional"] = true,
                },
            [7] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineInputAssemblyStateCreateInfo * ,
                ["name"] = pInputAssemblyState,
                ["optional"] = true,
                },
            [8] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineTessellationStateCreateInfo * ,
                ["name"] = pTessellationState,
                ["optional"] = true,
                },
            [9] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineViewportStateCreateInfo * ,
                ["name"] = pViewportState,
                ["optional"] = true,
                },
            [10] = {
                ["name"] = pRasterizationState,
                ["type"] = const VkPipelineRasterizationStateCreateInfo * ,
                },
            [11] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineMultisampleStateCreateInfo * ,
                ["name"] = pMultisampleState,
                ["optional"] = true,
                },
            [12] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineDepthStencilStateCreateInfo * ,
                ["name"] = pDepthStencilState,
                ["optional"] = true,
                },
            [13] = {
                ["noautovalidity"] = true,
                ["type"] = const VkPipelineColorBlendStateCreateInfo * ,
                ["name"] = pColorBlendState,
                ["optional"] = true,
                },
            [14] = {
                ["type"] = const VkPipelineDynamicStateCreateInfo * ,
                ["name"] = pDynamicState,
                ["optional"] = true,
                },
            [15] = {
                ["name"] = layout,
                ["type"] = VkPipelineLayout ,
                },
            [16] = {
                ["name"] = renderPass,
                ["type"] = VkRenderPass ,
                },
            [17] = {
                ["name"] = subpass,
                ["type"] = uint32_t ,
                },
            [18] = {
                ["noautovalidity"] = true,
                ["type"] = VkPipeline ,
                ["name"] = basePipelineHandle,
                ["optional"] = true,
                },
            [19] = {
                ["name"] = basePipelineIndex,
                ["type"] = int32_t ,
                },
            },
        ["name"] = VkGraphicsPipelineCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV"] = {
        ["extension"] = VK_NV_representative_fragment_test,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = representativeFragmentTest,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassCreateInfo2KHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = VkRenderPassCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = attachmentCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = attachmentCount,
                ["type"] = const VkAttachmentDescription2KHR * ,
                ["name"] = pAttachments,
                },
            [6] = {
                ["name"] = subpassCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["len"] = subpassCount,
                ["type"] = const VkSubpassDescription2KHR * ,
                ["name"] = pSubpasses,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = dependencyCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = dependencyCount,
                ["type"] = const VkSubpassDependency2KHR * ,
                ["name"] = pDependencies,
                },
            [10] = {
                ["type"] = uint32_t ,
                ["name"] = correlatedViewMaskCount,
                ["optional"] = true,
                },
            [11] = {
                ["len"] = correlatedViewMaskCount,
                ["type"] = const uint32_t * ,
                ["name"] = pCorrelatedViewMasks,
                },
            },
        ["name"] = VkRenderPassCreateInfo2KHR,
        ["returnedOnly"] = false,
        },
    ["VkBindImageMemoryInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = VkDeviceMemory ,
                ["name"] = memory,
                },
            [5] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkBindImageMemoryInfo,
        ["returnedOnly"] = false,
        },
    ["VkExternalImageFormatProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
                },
            [2] = {
                ["name"] = externalMemoryProperties,
                ["type"] = VkExternalMemoryProperties ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkExternalImageFormatProperties,
        ["returnedOnly"] = false,
        },
    ["VkSamplerCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSamplerCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = magFilter,
                ["type"] = VkFilter ,
                },
            [5] = {
                ["name"] = minFilter,
                ["type"] = VkFilter ,
                },
            [6] = {
                ["name"] = mipmapMode,
                ["type"] = VkSamplerMipmapMode ,
                },
            [7] = {
                ["name"] = addressModeU,
                ["type"] = VkSamplerAddressMode ,
                },
            [8] = {
                ["name"] = addressModeV,
                ["type"] = VkSamplerAddressMode ,
                },
            [9] = {
                ["name"] = addressModeW,
                ["type"] = VkSamplerAddressMode ,
                },
            [10] = {
                ["name"] = mipLodBias,
                ["type"] = float ,
                },
            [11] = {
                ["name"] = anisotropyEnable,
                ["type"] = VkBool32 ,
                },
            [12] = {
                ["name"] = maxAnisotropy,
                ["type"] = float ,
                },
            [13] = {
                ["name"] = compareEnable,
                ["type"] = VkBool32 ,
                },
            [14] = {
                ["noautovalidity"] = true,
                ["type"] = VkCompareOp ,
                ["name"] = compareOp,
                },
            [15] = {
                ["name"] = minLod,
                ["type"] = float ,
                },
            [16] = {
                ["name"] = maxLod,
                ["type"] = float ,
                },
            [17] = {
                ["noautovalidity"] = true,
                ["type"] = VkBorderColor ,
                ["name"] = borderColor,
                },
            [18] = {
                ["name"] = unnormalizedCoordinates,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkSamplerCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSubpassDescription2KHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["type"] = VkSubpassDescriptionFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [5] = {
                ["name"] = viewMask,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = inputAttachmentCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = inputAttachmentCount,
                ["type"] = const VkAttachmentReference2KHR * ,
                ["name"] = pInputAttachments,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = colorAttachmentCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = colorAttachmentCount,
                ["type"] = const VkAttachmentReference2KHR * ,
                ["name"] = pColorAttachments,
                },
            [10] = {
                ["len"] = colorAttachmentCount,
                ["type"] = const VkAttachmentReference2KHR * ,
                ["name"] = pResolveAttachments,
                ["optional"] = true,
                },
            [11] = {
                ["type"] = const VkAttachmentReference2KHR * ,
                ["name"] = pDepthStencilAttachment,
                ["optional"] = true,
                },
            [12] = {
                ["type"] = uint32_t ,
                ["name"] = preserveAttachmentCount,
                ["optional"] = true,
                },
            [13] = {
                ["len"] = preserveAttachmentCount,
                ["type"] = const uint32_t * ,
                ["name"] = pPreserveAttachments,
                },
            },
        ["name"] = VkSubpassDescription2KHR,
        ["returnedOnly"] = false,
        },
    ["VkSwapchainDisplayNativeHdrCreateInfoAMD"] = {
        ["extension"] = VK_AMD_display_native_hdr,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = localDimmingEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkSwapchainDisplayNativeHdrCreateInfoAMD,
        ["returnedOnly"] = false,
        },
    ["VkExportMemoryAllocateInfoNV"] = {
        ["extension"] = VK_NV_external_memory,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExportMemoryAllocateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageOpaqueMemoryBindInfo"] = {
        ["fields"] = {
            [1] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [2] = {
                ["name"] = bindCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindCount,
                ["type"] = const VkSparseMemoryBind * ,
                ["name"] = pBinds,
                },
            },
        ["name"] = VkSparseImageOpaqueMemoryBindInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineCreationFeedbackCreateInfoEXT"] = {
        ["extension"] = VK_EXT_pipeline_creation_feedback,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = pPipelineCreationFeedback,
                ["type"] = VkPipelineCreationFeedbackEXT * ,
                },
            [4] = {
                ["name"] = pipelineStageCreationFeedbackCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = pipelineStageCreationFeedbackCount,
                ["type"] = VkPipelineCreationFeedbackEXT * ,
                ["name"] = pPipelineStageCreationFeedbacks,
                },
            },
        ["name"] = VkPipelineCreationFeedbackCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryRequirements"] = {
        ["fields"] = {
            [1] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["name"] = alignment,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["name"] = memoryTypeBits,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryRequirements,
        ["returnedOnly"] = false,
        },
    ["VkPipelineRasterizationDepthClipStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_depth_clip_enable,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineRasterizationDepthClipStateCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = depthClipEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPipelineRasterizationDepthClipStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"] = {
        ["extension"] = VK_EXT_descriptor_indexing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = bindingCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = bindingCount,
                ["type"] = const VkDescriptorBindingFlagsEXT * ,
                ["name"] = pBindingFlags,
                ["optional"] = true,
                },
            },
        ["name"] = VkDescriptorSetLayoutBindingFlagsCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDescriptorIndexingFeaturesEXT"] = {
        ["extension"] = VK_EXT_descriptor_indexing,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = shaderInputAttachmentArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = shaderUniformTexelBufferArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = shaderStorageTexelBufferArrayDynamicIndexing,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = shaderUniformBufferArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = shaderSampledImageArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = shaderStorageBufferArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = shaderStorageImageArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = shaderInputAttachmentArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = shaderUniformTexelBufferArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [12] = {
                ["name"] = shaderStorageTexelBufferArrayNonUniformIndexing,
                ["type"] = VkBool32 ,
                },
            [13] = {
                ["name"] = descriptorBindingUniformBufferUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [14] = {
                ["name"] = descriptorBindingSampledImageUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [15] = {
                ["name"] = descriptorBindingStorageImageUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [16] = {
                ["name"] = descriptorBindingStorageBufferUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [17] = {
                ["name"] = descriptorBindingUniformTexelBufferUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [18] = {
                ["name"] = descriptorBindingStorageTexelBufferUpdateAfterBind,
                ["type"] = VkBool32 ,
                },
            [19] = {
                ["name"] = descriptorBindingUpdateUnusedWhilePending,
                ["type"] = VkBool32 ,
                },
            [20] = {
                ["name"] = descriptorBindingPartiallyBound,
                ["type"] = VkBool32 ,
                },
            [21] = {
                ["name"] = descriptorBindingVariableDescriptorCount,
                ["type"] = VkBool32 ,
                },
            [22] = {
                ["name"] = runtimeDescriptorArray,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceDescriptorIndexingFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkCalibratedTimestampInfoEXT"] = {
        ["extension"] = VK_EXT_calibrated_timestamps,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = timeDomain,
                ["type"] = VkTimeDomainEXT ,
                },
            },
        ["name"] = VkCalibratedTimestampInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceConservativeRasterizationPropertiesEXT"] = {
        ["extension"] = VK_EXT_conservative_rasterization,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = primitiveOverestimationSize,
                ["type"] = float ,
                },
            [4] = {
                ["name"] = maxExtraPrimitiveOverestimationSize,
                ["type"] = float ,
                },
            [5] = {
                ["name"] = extraPrimitiveOverestimationSizeGranularity,
                ["type"] = float ,
                },
            [6] = {
                ["name"] = primitiveUnderestimation,
                ["type"] = VkBool32 ,
                },
            [7] = {
                ["name"] = conservativePointAndLineRasterization,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = degenerateTrianglesRasterized,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = conservativeRasterizationPostDepthCoverage,
                ["type"] = VkBool32 ,
                },
            [10] = {
                ["name"] = fullyCoveredFragmentShaderInputVariable,
                ["type"] = VkBool32 ,
                },
            [11] = {
                ["name"] = degenerateLinesRasterized,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceConservativeRasterizationPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryHostPointerPropertiesEXT"] = {
        ["extension"] = VK_EXT_external_memory_host,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryTypeBits,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryHostPointerPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupRenderPassBeginInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = deviceMask,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = deviceRenderAreaCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = deviceRenderAreaCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pDeviceRenderAreas,
                },
            },
        ["name"] = VkDeviceGroupRenderPassBeginInfo,
        ["returnedOnly"] = false,
        },
    ["VkImageViewCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkImageViewCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = image,
                ["type"] = VkImage ,
                },
            [5] = {
                ["name"] = viewType,
                ["type"] = VkImageViewType ,
                },
            [6] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [7] = {
                ["name"] = components,
                ["type"] = VkComponentMapping ,
                },
            [8] = {
                ["name"] = subresourceRange,
                ["type"] = VkImageSubresourceRange ,
                },
            },
        ["name"] = VkImageViewCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkImportMemoryHostPointerInfoEXT"] = {
        ["extension"] = VK_EXT_external_memory_host,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            [4] = {
                ["type"] = void * ,
                ["name"] = pHostPointer,
                ["optional"] = false,
                },
            },
        ["name"] = VkImportMemoryHostPointerInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDebugUtilsMessengerCallbackDataEXT"] = {
        ["extension"] = VK_EXT_debug_utils,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,
                },
            [2] = {
                ["type"] = const void * ,
                ["name"] = pNext,
                ["optional"] = true,
                },
            [3] = {
                ["type"] = VkDebugUtilsMessengerCallbackDataFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pMessageIdName,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = int32_t ,
                ["name"] = messageIdNumber,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pMessage,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = queueLabelCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = queueLabelCount,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                ["name"] = pQueueLabels,
                },
            [9] = {
                ["type"] = uint32_t ,
                ["name"] = cmdBufLabelCount,
                ["optional"] = true,
                },
            [10] = {
                ["len"] = cmdBufLabelCount,
                ["type"] = const VkDebugUtilsLabelEXT * ,
                ["name"] = pCmdBufLabels,
                },
            [11] = {
                ["type"] = uint32_t ,
                ["name"] = objectCount,
                ["optional"] = true,
                },
            [12] = {
                ["len"] = objectCount,
                ["type"] = const VkDebugUtilsObjectNameInfoEXT * ,
                ["name"] = pObjects,
                },
            },
        ["name"] = VkDebugUtilsMessengerCallbackDataEXT,
        ["returnedOnly"] = false,
        },
    ["VkDebugUtilsMessengerCreateInfoEXT"] = {
        ["extension"] = VK_EXT_debug_utils,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDebugUtilsMessengerCreateFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = messageSeverity,
                ["type"] = VkDebugUtilsMessageSeverityFlagsEXT ,
                },
            [5] = {
                ["name"] = messageType,
                ["type"] = VkDebugUtilsMessageTypeFlagsEXT ,
                },
            [6] = {
                ["name"] = pfnUserCallback,
                ["type"] = PFN_vkDebugUtilsMessengerCallbackEXT ,
                },
            [7] = {
                ["type"] = void * ,
                ["name"] = pUserData,
                ["optional"] = true,
                },
            },
        ["name"] = VkDebugUtilsMessengerCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDebugUtilsObjectTagInfoEXT"] = {
        ["extension"] = VK_EXT_debug_utils,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = objectType,
                ["type"] = VkObjectType ,
                },
            [4] = {
                ["name"] = objectHandle,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["name"] = tagName,
                ["type"] = uint64_t ,
                },
            [6] = {
                ["name"] = tagSize,
                ["type"] = size_t ,
                },
            [7] = {
                ["len"] = tagSize,
                ["type"] = const void * ,
                ["name"] = pTag,
                },
            },
        ["name"] = VkDebugUtilsObjectTagInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkDebugUtilsObjectNameInfoEXT"] = {
        ["extension"] = VK_EXT_debug_utils,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = objectType,
                ["type"] = VkObjectType ,
                },
            [4] = {
                ["name"] = objectHandle,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pObjectName,
                ["optional"] = true,
                },
            },
        ["name"] = VkDebugUtilsObjectNameInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceHostQueryResetFeaturesEXT"] = {
        ["extension"] = VK_EXT_host_query_reset,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = hostQueryReset,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceHostQueryResetFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineCacheCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCacheCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = size_t ,
                ["name"] = initialDataSize,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = initialDataSize,
                ["type"] = const void * ,
                ["name"] = pInitialData,
                },
            },
        ["name"] = VkPipelineCacheCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineTessellationDomainOriginStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = domainOrigin,
                ["type"] = VkTessellationDomainOrigin ,
                },
            },
        ["name"] = VkPipelineTessellationDomainOriginStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkFilterCubicImageViewImageFormatPropertiesEXT"] = {
        ["extension"] = VK_EXT_filter_cubic,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = filterCubic,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = filterCubicMinmax,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkFilterCubicImageViewImageFormatPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceFloat16Int8FeaturesKHR"] = {
        ["extension"] = VK_KHR_shader_float16_int8,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = shaderFloat16,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = shaderInt8,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceFloat16Int8FeaturesKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShaderDrawParametersFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = shaderDrawParameters,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceShaderDrawParametersFeatures,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetLayoutSupport"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = supported,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDescriptorSetLayoutSupport,
        ["returnedOnly"] = false,
        },
    ["VkShaderModuleValidationCacheCreateInfoEXT"] = {
        ["extension"] = VK_EXT_validation_cache,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = validationCache,
                ["type"] = VkValidationCacheEXT ,
                },
            },
        ["name"] = VkShaderModuleValidationCacheCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageSubresource"] = {
        ["fields"] = {
            [1] = {
                ["name"] = aspectMask,
                ["type"] = VkImageAspectFlags ,
                },
            [2] = {
                ["name"] = mipLevel,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = arrayLayer,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkImageSubresource,
        ["returnedOnly"] = false,
        },
    ["VkShadingRatePaletteNV"] = {
        ["extension"] = VK_NV_shading_rate_image,
        ["fields"] = {
            [1] = {
                ["name"] = shadingRatePaletteEntryCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["len"] = shadingRatePaletteEntryCount,
                ["type"] = const VkShadingRatePaletteEntryNV * ,
                ["name"] = pShadingRatePaletteEntries,
                },
            },
        ["name"] = VkShadingRatePaletteNV,
        ["returnedOnly"] = false,
        },
    ["VkExternalFenceProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = exportFromImportedHandleTypes,
                ["type"] = VkExternalFenceHandleTypeFlags ,
                },
            [4] = {
                ["name"] = compatibleHandleTypes,
                ["type"] = VkExternalFenceHandleTypeFlags ,
                },
            [5] = {
                ["type"] = VkExternalFenceFeatureFlags ,
                ["name"] = externalFenceFeatures,
                ["optional"] = true,
                },
            },
        ["name"] = VkExternalFenceProperties,
        ["returnedOnly"] = false,
        },
    ["VkPipelineCoverageModulationStateCreateInfoNV"] = {
        ["extension"] = VK_NV_framebuffer_mixed_samples,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCoverageModulationStateCreateFlagsNV ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = coverageModulationMode,
                ["type"] = VkCoverageModulationModeNV ,
                },
            [5] = {
                ["name"] = coverageModulationTableEnable,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = coverageModulationTableCount,
                ["optional"] = true,
                },
            [7] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pCoverageModulationTable,
                ["len"] = coverageModulationTableCount,
                ["type"] = const float * ,
                },
            },
        ["name"] = VkPipelineCoverageModulationStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceInlineUniformBlockPropertiesEXT"] = {
        ["extension"] = VK_EXT_inline_uniform_block,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxInlineUniformBlockSize,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxPerStageDescriptorInlineUniformBlocks,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = maxDescriptorSetUpdateAfterBindInlineUniformBlocks,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = maxDescriptorSetInlineUniformBlocks,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceInlineUniformBlockPropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkImagePipeSurfaceCreateInfoFUCHSIA"] = {
        ["extension"] = VK_FUCHSIA_imagepipe_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkImagePipeSurfaceCreateFlagsFUCHSIA ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = imagePipeHandle,
                ["type"] = zx_handle_t ,
                },
            },
        ["name"] = VkImagePipeSurfaceCreateInfoFUCHSIA,
        ["returnedOnly"] = false,
        },
    ["VkPipelineColorBlendAdvancedStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_blend_operation_advanced,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = srcPremultiplied,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = dstPremultiplied,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = blendOverlap,
                ["type"] = VkBlendOverlapEXT ,
                },
            },
        ["name"] = VkPipelineColorBlendAdvancedStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkImageCopy"] = {
        ["fields"] = {
            [1] = {
                ["name"] = srcSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [2] = {
                ["name"] = srcOffset,
                ["type"] = VkOffset3D ,
                },
            [3] = {
                ["name"] = dstSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [4] = {
                ["name"] = dstOffset,
                ["type"] = VkOffset3D ,
                },
            [5] = {
                ["name"] = extent,
                ["type"] = VkExtent3D ,
                },
            },
        ["name"] = VkImageCopy,
        ["returnedOnly"] = false,
        },
    ["VkSwapchainCounterCreateInfoEXT"] = {
        ["extension"] = VK_EXT_display_control,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSurfaceCounterFlagsEXT ,
                ["name"] = surfaceCounters,
                ["optional"] = true,
                },
            },
        ["name"] = VkSwapchainCounterCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkAndroidSurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_android_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkAndroidSurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = struct ANativeWindow * ,
                ["name"] = window,
                },
            },
        ["name"] = VkAndroidSurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkSamplerReductionModeCreateInfoEXT"] = {
        ["extension"] = VK_EXT_sampler_filter_minmax,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = reductionMode,
                ["type"] = VkSamplerReductionModeEXT ,
                },
            },
        ["name"] = VkSamplerReductionModeCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkEventCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkEventCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkEventCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkImportMemoryWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = HANDLE ,
                ["name"] = handle,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = LPCWSTR ,
                ["name"] = name,
                ["optional"] = true,
                },
            },
        ["name"] = VkImportMemoryWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkSemaphoreCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSemaphoreCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSemaphoreCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMeshShaderFeaturesNV"] = {
        ["extension"] = VK_NV_mesh_shader,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = taskShader,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = meshShader,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceMeshShaderFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkPipelineSampleLocationsStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = sampleLocationsEnable,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = sampleLocationsInfo,
                ["type"] = VkSampleLocationsInfoEXT ,
                },
            },
        ["name"] = VkPipelineSampleLocationsStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkBufferMemoryRequirementsInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            },
        ["name"] = VkBufferMemoryRequirementsInfo2,
        ["returnedOnly"] = false,
        },
    ["VkAttachmentSampleLocationsEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["name"] = attachmentIndex,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = sampleLocationsInfo,
                ["type"] = VkSampleLocationsInfoEXT ,
                },
            },
        ["name"] = VkAttachmentSampleLocationsEXT,
        ["returnedOnly"] = false,
        },
    ["VkSampleLocationsInfoEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSampleCountFlagBits ,
                ["name"] = sampleLocationsPerPixel,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = sampleLocationGridSize,
                ["type"] = VkExtent2D ,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = sampleLocationsCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = sampleLocationsCount,
                ["type"] = const VkSampleLocationEXT * ,
                ["name"] = pSampleLocations,
                },
            },
        ["name"] = VkSampleLocationsInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineCoverageToColorStateCreateInfoNV"] = {
        ["extension"] = VK_NV_fragment_coverage_to_color,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineCoverageToColorStateCreateFlagsNV ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = coverageToColorEnable,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = coverageToColorLocation,
                ["optional"] = true,
                },
            },
        ["name"] = VkPipelineCoverageToColorStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkDisplayModeCreateInfoKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDisplayModeCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = parameters,
                ["type"] = VkDisplayModeParametersKHR ,
                },
            },
        ["name"] = VkDisplayModeCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkSampleLocationEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["name"] = x,
                ["type"] = float ,
                },
            [2] = {
                ["name"] = y,
                ["type"] = float ,
                },
            },
        ["name"] = VkSampleLocationEXT,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPlaneProperties2KHR"] = {
        ["extension"] = VK_KHR_get_display_properties2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = displayPlaneProperties,
                ["type"] = VkDisplayPlanePropertiesKHR ,
                },
            },
        ["name"] = VkDisplayPlaneProperties2KHR,
        ["returnedOnly"] = false,
        },
    ["VkSwapchainCreateInfoKHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSwapchainCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = surface,
                ["type"] = VkSurfaceKHR ,
                },
            [5] = {
                ["name"] = minImageCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = imageFormat,
                ["type"] = VkFormat ,
                },
            [7] = {
                ["name"] = imageColorSpace,
                ["type"] = VkColorSpaceKHR ,
                },
            [8] = {
                ["name"] = imageExtent,
                ["type"] = VkExtent2D ,
                },
            [9] = {
                ["name"] = imageArrayLayers,
                ["type"] = uint32_t ,
                },
            [10] = {
                ["name"] = imageUsage,
                ["type"] = VkImageUsageFlags ,
                },
            [11] = {
                ["name"] = imageSharingMode,
                ["type"] = VkSharingMode ,
                },
            [12] = {
                ["type"] = uint32_t ,
                ["name"] = queueFamilyIndexCount,
                ["optional"] = true,
                },
            [13] = {
                ["len"] = queueFamilyIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pQueueFamilyIndices,
                ["noautovalidity"] = true,
                },
            [14] = {
                ["name"] = preTransform,
                ["type"] = VkSurfaceTransformFlagBitsKHR ,
                },
            [15] = {
                ["name"] = compositeAlpha,
                ["type"] = VkCompositeAlphaFlagBitsKHR ,
                },
            [16] = {
                ["name"] = presentMode,
                ["type"] = VkPresentModeKHR ,
                },
            [17] = {
                ["name"] = clipped,
                ["type"] = VkBool32 ,
                },
            [18] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = oldSwapchain,
                ["optional"] = true,
                },
            },
        ["name"] = VkSwapchainCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceProtectedMemoryProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,
                },
            [2] = {
                ["name"] = protectedNoFault,
                ["type"] = VkBool32 ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDeviceProtectedMemoryProperties,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceProtectedMemoryFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = protectedMemory,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceProtectedMemoryFeatures,
        ["returnedOnly"] = false,
        },
    ["VkProtectedSubmitInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = protectedSubmit,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkProtectedSubmitInfo,
        ["returnedOnly"] = false,
        },
    ["VkConditionalRenderingBeginInfoEXT"] = {
        ["extension"] = VK_EXT_conditional_rendering,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [4] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["type"] = VkConditionalRenderingFlagsEXT ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkConditionalRenderingBeginInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkClearAttachment"] = {
        ["fields"] = {
            [1] = {
                ["name"] = aspectMask,
                ["type"] = VkImageAspectFlags ,
                },
            [2] = {
                ["name"] = colorAttachment,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = clearValue,
                ["type"] = VkClearValue ,
                },
            },
        ["name"] = VkClearAttachment,
        ["returnedOnly"] = false,
        },
    ["VkBindImagePlaneMemoryInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = planeAspect,
                ["type"] = VkImageAspectFlagBits ,
                },
            },
        ["name"] = VkBindImagePlaneMemoryInfo,
        ["returnedOnly"] = false,
        },
    ["VkSamplerYcbcrConversionCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [4] = {
                ["name"] = ycbcrModel,
                ["type"] = VkSamplerYcbcrModelConversion ,
                },
            [5] = {
                ["name"] = ycbcrRange,
                ["type"] = VkSamplerYcbcrRange ,
                },
            [6] = {
                ["name"] = components,
                ["type"] = VkComponentMapping ,
                },
            [7] = {
                ["name"] = xChromaOffset,
                ["type"] = VkChromaLocation ,
                },
            [8] = {
                ["name"] = yChromaOffset,
                ["type"] = VkChromaLocation ,
                },
            [9] = {
                ["name"] = chromaFilter,
                ["type"] = VkFilter ,
                },
            [10] = {
                ["name"] = forceExplicitReconstruction,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkSamplerYcbcrConversionCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkBaseOutStructure"] = {
        ["fields"] = {
            [1] = {
                ["name"] = sType,
                ["type"] = VkStructureType ,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = struct VkBaseOutStructure * ,
                },
            },
        ["name"] = VkBaseOutStructure,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMultiviewProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = maxMultiviewViewCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxMultiviewInstanceIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkPhysicalDeviceMultiviewProperties,
        ["returnedOnly"] = false,
        },
    ["VkMemoryRequirements2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryRequirements,
                ["type"] = VkMemoryRequirements ,
                },
            },
        ["name"] = VkMemoryRequirements2,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassSampleLocationsBeginInfoEXT"] = {
        ["extension"] = VK_EXT_sample_locations,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = attachmentInitialSampleLocationsCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = attachmentInitialSampleLocationsCount,
                ["type"] = const VkAttachmentSampleLocationsEXT * ,
                ["name"] = pAttachmentInitialSampleLocations,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = postSubpassSampleLocationsCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = postSubpassSampleLocationsCount,
                ["type"] = const VkSubpassSampleLocationsEXT * ,
                ["name"] = pPostSubpassSampleLocations,
                },
            },
        ["name"] = VkRenderPassSampleLocationsBeginInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkBufferCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkBufferCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = usage,
                ["type"] = VkBufferUsageFlags ,
                },
            [6] = {
                ["name"] = sharingMode,
                ["type"] = VkSharingMode ,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = queueFamilyIndexCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = queueFamilyIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pQueueFamilyIndices,
                ["noautovalidity"] = true,
                },
            },
        ["name"] = VkBufferCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSubgroupProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = subgroupSize,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = VkShaderStageFlags ,
                ["name"] = supportedStages,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = VkBool32 ,
                ["name"] = quadOperationsInAllStages,
                },
            [6] = {
                ["noautovalidity"] = true,
                ["type"] = VkSubgroupFeatureFlags ,
                ["name"] = supportedOperations,
                },
            },
        ["name"] = VkPhysicalDeviceSubgroupProperties,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDevice16BitStorageFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = storageBuffer16BitAccess,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = uniformAndStorageBuffer16BitAccess,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = storagePushConstant16,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = storageInputOutput16,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDevice16BitStorageFeatures,
        ["returnedOnly"] = false,
        },
    ["VkSharedPresentSurfaceCapabilitiesKHR"] = {
        ["extension"] = VK_KHR_shared_presentable_image,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,
                },
            [2] = {
                ["type"] = VkImageUsageFlags ,
                ["name"] = sharedPresentSupportedUsageFlags,
                ["optional"] = true,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            },
        ["name"] = VkSharedPresentSurfaceCapabilitiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPlaneCapabilities2KHR"] = {
        ["extension"] = VK_KHR_get_display_properties2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = capabilities,
                ["type"] = VkDisplayPlaneCapabilitiesKHR ,
                },
            },
        ["name"] = VkDisplayPlaneCapabilities2KHR,
        ["returnedOnly"] = false,
        },
    ["VkBindImageMemoryDeviceGroupInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = deviceIndexCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = deviceIndexCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDeviceIndices,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = splitInstanceBindRegionCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = splitInstanceBindRegionCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pSplitInstanceBindRegions,
                },
            },
        ["name"] = VkBindImageMemoryDeviceGroupInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceASTCDecodeFeaturesEXT"] = {
        ["extension"] = VK_EXT_astc_decode_mode,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = decodeModeSharedExponent,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceASTCDecodeFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkDedicatedAllocationBufferCreateInfoNV"] = {
        ["extension"] = VK_NV_dedicated_allocation,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = dedicatedAllocation,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDedicatedAllocationBufferCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkPipelineShaderStageCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineShaderStageCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = stage,
                ["type"] = VkShaderStageFlagBits ,
                },
            [5] = {
                ["name"] = module,
                ["type"] = VkShaderModule ,
                },
            [6] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pName,
                },
            [7] = {
                ["type"] = const VkSpecializationInfo * ,
                ["name"] = pSpecializationInfo,
                ["optional"] = true,
                },
            },
        ["name"] = VkPipelineShaderStageCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupBindSparseInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = resourceDeviceIndex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = memoryDeviceIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDeviceGroupBindSparseInfo,
        ["returnedOnly"] = false,
        },
    ["VkDisplayModePropertiesKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["name"] = displayMode,
                ["type"] = VkDisplayModeKHR ,
                },
            [2] = {
                ["name"] = parameters,
                ["type"] = VkDisplayModeParametersKHR ,
                },
            },
        ["name"] = VkDisplayModePropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageFormatProperties2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = properties,
                ["type"] = VkSparseImageFormatProperties ,
                },
            },
        ["name"] = VkSparseImageFormatProperties2,
        ["returnedOnly"] = false,
        },
    ["VkMemoryAllocateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = allocationSize,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = memoryTypeIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryAllocateInfo,
        ["returnedOnly"] = false,
        },
    ["VkObjectTablePipelineEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            [3] = {
                ["name"] = pipeline,
                ["type"] = VkPipeline ,
                },
            },
        ["name"] = VkObjectTablePipelineEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkSpecializationInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = uint32_t ,
                ["name"] = mapEntryCount,
                ["optional"] = true,
                },
            [2] = {
                ["len"] = mapEntryCount,
                ["type"] = const VkSpecializationMapEntry * ,
                ["name"] = pMapEntries,
                },
            [3] = {
                ["type"] = size_t ,
                ["name"] = dataSize,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = dataSize,
                ["type"] = const void * ,
                ["name"] = pData,
                },
            },
        ["name"] = VkSpecializationInfo,
        ["returnedOnly"] = false,
        },
    ["VkViewportSwizzleNV"] = {
        ["extension"] = VK_NV_viewport_swizzle,
        ["fields"] = {
            [1] = {
                ["name"] = x,
                ["type"] = VkViewportCoordinateSwizzleNV ,
                },
            [2] = {
                ["name"] = y,
                ["type"] = VkViewportCoordinateSwizzleNV ,
                },
            [3] = {
                ["name"] = z,
                ["type"] = VkViewportCoordinateSwizzleNV ,
                },
            [4] = {
                ["name"] = w,
                ["type"] = VkViewportCoordinateSwizzleNV ,
                },
            },
        ["name"] = VkViewportSwizzleNV,
        ["returnedOnly"] = false,
        },
    ["VkIndirectCommandsTokenNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = tokenType,
                ["type"] = VkIndirectCommandsTokenTypeNVX ,
                },
            [2] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [3] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkIndirectCommandsTokenNVX,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceSparseImageFormatInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [4] = {
                ["name"] = type,
                ["type"] = VkImageType ,
                },
            [5] = {
                ["name"] = samples,
                ["type"] = VkSampleCountFlagBits ,
                },
            [6] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [7] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            },
        ["name"] = VkPhysicalDeviceSparseImageFormatInfo2,
        ["returnedOnly"] = false,
        },
    ["VkImageSubresourceRange"] = {
        ["fields"] = {
            [1] = {
                ["name"] = aspectMask,
                ["type"] = VkImageAspectFlags ,
                },
            [2] = {
                ["name"] = baseMipLevel,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = levelCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = baseArrayLayer,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = layerCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkImageSubresourceRange,
        ["returnedOnly"] = false,
        },
    ["VkDebugMarkerObjectNameInfoEXT"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = objectType,
                ["type"] = VkDebugReportObjectTypeEXT ,
                },
            [4] = {
                ["name"] = object,
                ["type"] = uint64_t ,
                },
            [5] = {
                ["len"] = null-terminated,
                ["type"] = const char * ,
                ["name"] = pObjectName,
                },
            },
        ["name"] = VkDebugMarkerObjectNameInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkRenderPassInputAttachmentAspectCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = aspectReferenceCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = aspectReferenceCount,
                ["type"] = const VkInputAttachmentAspectReference * ,
                ["name"] = pAspectReferences,
                },
            },
        ["name"] = VkRenderPassInputAttachmentAspectCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkWin32SurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_win32_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkWin32SurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = hinstance,
                ["type"] = HINSTANCE ,
                },
            [5] = {
                ["name"] = hwnd,
                ["type"] = HWND ,
                },
            },
        ["name"] = VkWin32SurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkExportSemaphoreWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = const SECURITY_ATTRIBUTES * ,
                ["name"] = pAttributes,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = dwAccess,
                ["type"] = DWORD ,
                },
            [5] = {
                ["name"] = name,
                ["type"] = LPCWSTR ,
                },
            },
        ["name"] = VkExportSemaphoreWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDiscardRectanglePropertiesEXT"] = {
        ["extension"] = VK_EXT_discard_rectangles,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,
                },
            [2] = {
                ["name"] = maxDiscardRectangles,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDeviceDiscardRectanglePropertiesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportSwizzleStateCreateInfoNV"] = {
        ["extension"] = VK_NV_viewport_swizzle,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineViewportSwizzleStateCreateFlagsNV ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = viewportCount,
                ["type"] = const VkViewportSwizzleNV * ,
                ["name"] = pViewportSwizzles,
                },
            },
        ["name"] = VkPipelineViewportSwizzleStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkExtent2D"] = {
        ["fields"] = {
            [1] = {
                ["name"] = width,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = height,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkExtent2D,
        ["returnedOnly"] = false,
        },
    ["VkDisplayPlanePropertiesKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["name"] = currentDisplay,
                ["type"] = VkDisplayKHR ,
                },
            [2] = {
                ["name"] = currentStackIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkDisplayPlanePropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkRectLayerKHR"] = {
        ["extension"] = VK_KHR_incremental_present,
        ["fields"] = {
            [1] = {
                ["name"] = offset,
                ["type"] = VkOffset2D ,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = VkExtent2D ,
                ["name"] = extent,
                },
            [3] = {
                ["name"] = layer,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkRectLayerKHR,
        ["returnedOnly"] = false,
        },
    ["VkPresentTimeGOOGLE"] = {
        ["extension"] = VK_GOOGLE_display_timing,
        ["fields"] = {
            [1] = {
                ["name"] = presentID,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = desiredPresentTime,
                ["type"] = uint64_t ,
                },
            },
        ["name"] = VkPresentTimeGOOGLE,
        ["returnedOnly"] = false,
        },
    ["VkObjectTableIndexBufferEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [4] = {
                ["name"] = indexType,
                ["type"] = VkIndexType ,
                },
            },
        ["name"] = VkObjectTableIndexBufferEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorUpdateTemplateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkDescriptorUpdateTemplateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = descriptorUpdateEntryCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["len"] = descriptorUpdateEntryCount,
                ["type"] = const VkDescriptorUpdateTemplateEntry * ,
                ["name"] = pDescriptorUpdateEntries,
                },
            [6] = {
                ["name"] = templateType,
                ["type"] = VkDescriptorUpdateTemplateType ,
                },
            [7] = {
                ["type"] = VkDescriptorSetLayout ,
                ["name"] = descriptorSetLayout,
                ["optional"] = true,
                },
            [8] = {
                ["noautovalidity"] = true,
                ["type"] = VkPipelineBindPoint ,
                ["name"] = pipelineBindPoint,
                },
            [9] = {
                ["noautovalidity"] = true,
                ["type"] = VkPipelineLayout ,
                ["name"] = pipelineLayout,
                },
            [10] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = set,
                },
            },
        ["name"] = VkDescriptorUpdateTemplateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSubpassDescription"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkSubpassDescriptionFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = pipelineBindPoint,
                ["type"] = VkPipelineBindPoint ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = inputAttachmentCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = inputAttachmentCount,
                ["type"] = const VkAttachmentReference * ,
                ["name"] = pInputAttachments,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = colorAttachmentCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = colorAttachmentCount,
                ["type"] = const VkAttachmentReference * ,
                ["name"] = pColorAttachments,
                },
            [7] = {
                ["len"] = colorAttachmentCount,
                ["type"] = const VkAttachmentReference * ,
                ["name"] = pResolveAttachments,
                ["optional"] = true,
                },
            [8] = {
                ["type"] = const VkAttachmentReference * ,
                ["name"] = pDepthStencilAttachment,
                ["optional"] = true,
                },
            [9] = {
                ["type"] = uint32_t ,
                ["name"] = preserveAttachmentCount,
                ["optional"] = true,
                },
            [10] = {
                ["len"] = preserveAttachmentCount,
                ["type"] = const uint32_t * ,
                ["name"] = pPreserveAttachments,
                },
            },
        ["name"] = VkSubpassDescription,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupSubmitInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = waitSemaphoreCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = waitSemaphoreCount,
                ["type"] = const uint32_t * ,
                ["name"] = pWaitSemaphoreDeviceIndices,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = commandBufferCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = commandBufferCount,
                ["type"] = const uint32_t * ,
                ["name"] = pCommandBufferDeviceMasks,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = signalSemaphoreCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = signalSemaphoreCount,
                ["type"] = const uint32_t * ,
                ["name"] = pSignalSemaphoreDeviceIndices,
                },
            },
        ["name"] = VkDeviceGroupSubmitInfo,
        ["returnedOnly"] = false,
        },
    ["VkMemoryType"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkMemoryPropertyFlags ,
                ["name"] = propertyFlags,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = heapIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryType,
        ["returnedOnly"] = false,
        },
    ["VkImageSwapchainCreateInfoKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSwapchainKHR ,
                ["name"] = swapchain,
                ["optional"] = true,
                },
            },
        ["name"] = VkImageSwapchainCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkFenceGetFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_fence_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = fence,
                ["type"] = VkFence ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalFenceHandleTypeFlagBits ,
                },
            },
        ["name"] = VkFenceGetFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkWaylandSurfaceCreateInfoKHR"] = {
        ["extension"] = VK_KHR_wayland_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkWaylandSurfaceCreateFlagsKHR ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = struct wl_display * ,
                ["name"] = display,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["type"] = struct wl_surface * ,
                ["name"] = surface,
                },
            },
        ["name"] = VkWaylandSurfaceCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPipelineDynamicStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineDynamicStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = uint32_t ,
                ["name"] = dynamicStateCount,
                ["optional"] = true,
                },
            [5] = {
                ["len"] = dynamicStateCount,
                ["type"] = const VkDynamicState * ,
                ["name"] = pDynamicStates,
                },
            },
        ["name"] = VkPipelineDynamicStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSurfaceCapabilities2KHR"] = {
        ["extension"] = VK_KHR_get_surface_capabilities2,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = surfaceCapabilities,
                ["type"] = VkSurfaceCapabilitiesKHR ,
                },
            },
        ["name"] = VkSurfaceCapabilities2KHR,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGroupPresentInfoKHR"] = {
        ["extension"] = VK_KHR_swapchain,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = swapchainCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = swapchainCount,
                ["type"] = const uint32_t * ,
                ["name"] = pDeviceMasks,
                },
            [5] = {
                ["name"] = mode,
                ["type"] = VkDeviceGroupPresentModeFlagBitsKHR ,
                },
            },
        ["name"] = VkDeviceGroupPresentInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMultiviewFeatures"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = multiview,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = multiviewGeometryShader,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = multiviewTessellationShader,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceMultiviewFeatures,
        ["returnedOnly"] = false,
        },
    ["VkInstanceCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkInstanceCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["type"] = const VkApplicationInfo * ,
                ["name"] = pApplicationInfo,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = enabledLayerCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = enabledLayerCount,null-terminated,
                ["type"] = const char * const* ,
                ["name"] = ppEnabledLayerNames,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = enabledExtensionCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = enabledExtensionCount,null-terminated,
                ["type"] = const char * const* ,
                ["name"] = ppEnabledExtensionNames,
                },
            },
        ["name"] = VkInstanceCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDedicatedAllocationImageCreateInfoNV"] = {
        ["extension"] = VK_NV_dedicated_allocation,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = dedicatedAllocation,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDedicatedAllocationImageCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkVertexInputBindingDescription"] = {
        ["fields"] = {
            [1] = {
                ["name"] = binding,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = stride,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = inputRate,
                ["type"] = VkVertexInputRate ,
                },
            },
        ["name"] = VkVertexInputBindingDescription,
        ["returnedOnly"] = false,
        },
    ["VkDrawIndirectCommand"] = {
        ["fields"] = {
            [1] = {
                ["name"] = vertexCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = instanceCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = firstVertex,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = firstInstance,
                },
            },
        ["name"] = VkDrawIndirectCommand,
        ["returnedOnly"] = false,
        },
    ["VkBindBufferMemoryInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [4] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [5] = {
                ["name"] = memoryOffset,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkBindBufferMemoryInfo,
        ["returnedOnly"] = false,
        },
    ["VkExternalMemoryBufferCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlags ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExternalMemoryBufferCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkObjectTableCreateInfoNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = objectCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = objectCount,
                ["type"] = const VkObjectEntryTypeNVX * ,
                ["name"] = pObjectEntryTypes,
                },
            [5] = {
                ["len"] = objectCount,
                ["type"] = const uint32_t * ,
                ["name"] = pObjectEntryCounts,
                },
            [6] = {
                ["len"] = objectCount,
                ["type"] = const VkObjectEntryUsageFlagsNVX * ,
                ["name"] = pObjectEntryUsageFlags,
                },
            [7] = {
                ["name"] = maxUniformBuffersPerDescriptor,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = maxStorageBuffersPerDescriptor,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = maxStorageImagesPerDescriptor,
                ["type"] = uint32_t ,
                },
            [10] = {
                ["name"] = maxSampledImagesPerDescriptor,
                ["type"] = uint32_t ,
                },
            [11] = {
                ["name"] = maxPipelineLayouts,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkObjectTableCreateInfoNVX,
        ["returnedOnly"] = false,
        },
    ["VkImageSubresourceLayers"] = {
        ["fields"] = {
            [1] = {
                ["name"] = aspectMask,
                ["type"] = VkImageAspectFlags ,
                },
            [2] = {
                ["name"] = mipLevel,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = baseArrayLayer,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = layerCount,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkImageSubresourceLayers,
        ["returnedOnly"] = false,
        },
    ["VkMemoryAllocateFlagsInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkMemoryAllocateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = deviceMask,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryAllocateFlagsInfo,
        ["returnedOnly"] = false,
        },
    ["VkOffset3D"] = {
        ["fields"] = {
            [1] = {
                ["name"] = x,
                ["type"] = int32_t ,
                },
            [2] = {
                ["name"] = y,
                ["type"] = int32_t ,
                },
            [3] = {
                ["name"] = z,
                ["type"] = int32_t ,
                },
            },
        ["name"] = VkOffset3D,
        ["returnedOnly"] = false,
        },
    ["VkStencilOpState"] = {
        ["fields"] = {
            [1] = {
                ["name"] = failOp,
                ["type"] = VkStencilOp ,
                },
            [2] = {
                ["name"] = passOp,
                ["type"] = VkStencilOp ,
                },
            [3] = {
                ["name"] = depthFailOp,
                ["type"] = VkStencilOp ,
                },
            [4] = {
                ["name"] = compareOp,
                ["type"] = VkCompareOp ,
                },
            [5] = {
                ["name"] = compareMask,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = writeMask,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = reference,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkStencilOpState,
        ["returnedOnly"] = false,
        },
    ["VkBufferImageCopy"] = {
        ["fields"] = {
            [1] = {
                ["name"] = bufferOffset,
                ["type"] = VkDeviceSize ,
                },
            [2] = {
                ["name"] = bufferRowLength,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = bufferImageHeight,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = imageSubresource,
                ["type"] = VkImageSubresourceLayers ,
                },
            [5] = {
                ["name"] = imageOffset,
                ["type"] = VkOffset3D ,
                },
            [6] = {
                ["name"] = imageExtent,
                ["type"] = VkExtent3D ,
                },
            },
        ["name"] = VkBufferImageCopy,
        ["returnedOnly"] = false,
        },
    ["VkExternalMemoryImageCreateInfoNV"] = {
        ["extension"] = VK_NV_external_memory,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagsNV ,
                ["name"] = handleTypes,
                ["optional"] = true,
                },
            },
        ["name"] = VkExternalMemoryImageCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorSetLayoutBinding"] = {
        ["fields"] = {
            [1] = {
                ["name"] = binding,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = descriptorType,
                ["type"] = VkDescriptorType ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = descriptorCount,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = VkShaderStageFlags ,
                ["name"] = stageFlags,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pImmutableSamplers,
                ["len"] = descriptorCount,
                ["type"] = const VkSampler * ,
                },
            },
        ["name"] = VkDescriptorSetLayoutBinding,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceGroupProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = physicalDeviceCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = physicalDevices,
                ["type"] = VkPhysicalDevice [ VK_MAX_DEVICE_GROUP_SIZE] ,
                },
            [5] = {
                ["name"] = subsetAllocation,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceGroupProperties,
        ["returnedOnly"] = false,
        },
    ["VkMemoryPriorityAllocateInfoEXT"] = {
        ["extension"] = VK_EXT_memory_priority,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = priority,
                ["type"] = float ,
                },
            },
        ["name"] = VkMemoryPriorityAllocateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkPresentInfoKHR"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = waitSemaphoreCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = waitSemaphoreCount,
                ["type"] = const VkSemaphore * ,
                ["name"] = pWaitSemaphores,
                },
            [5] = {
                ["name"] = swapchainCount,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["len"] = swapchainCount,
                ["type"] = const VkSwapchainKHR * ,
                ["name"] = pSwapchains,
                },
            [7] = {
                ["len"] = swapchainCount,
                ["type"] = const uint32_t * ,
                ["name"] = pImageIndices,
                },
            [8] = {
                ["len"] = swapchainCount,
                ["type"] = VkResult * ,
                ["name"] = pResults,
                ["optional"] = true,
                },
            },
        ["name"] = VkPresentInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkDispatchIndirectCommand"] = {
        ["fields"] = {
            [1] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = x,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = y,
                },
            [3] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = z,
                },
            },
        ["name"] = VkDispatchIndirectCommand,
        ["returnedOnly"] = false,
        },
    ["VkViSurfaceCreateInfoNN"] = {
        ["extension"] = VK_NN_vi_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkViSurfaceCreateFlagsNN ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = window,
                },
            },
        ["name"] = VkViSurfaceCreateInfoNN,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceLimits"] = {
        ["fields"] = {
            [1] = {
                ["name"] = maxImageDimension1D,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = maxImageDimension2D,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = maxImageDimension3D,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = maxImageDimensionCube,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = maxImageArrayLayers,
                ["type"] = uint32_t ,
                },
            [6] = {
                ["name"] = maxTexelBufferElements,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = maxUniformBufferRange,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = maxStorageBufferRange,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = maxPushConstantsSize,
                ["type"] = uint32_t ,
                },
            [10] = {
                ["name"] = maxMemoryAllocationCount,
                ["type"] = uint32_t ,
                },
            [11] = {
                ["name"] = maxSamplerAllocationCount,
                ["type"] = uint32_t ,
                },
            [12] = {
                ["name"] = bufferImageGranularity,
                ["type"] = VkDeviceSize ,
                },
            [13] = {
                ["name"] = sparseAddressSpaceSize,
                ["type"] = VkDeviceSize ,
                },
            [14] = {
                ["name"] = maxBoundDescriptorSets,
                ["type"] = uint32_t ,
                },
            [15] = {
                ["name"] = maxPerStageDescriptorSamplers,
                ["type"] = uint32_t ,
                },
            [16] = {
                ["name"] = maxPerStageDescriptorUniformBuffers,
                ["type"] = uint32_t ,
                },
            [17] = {
                ["name"] = maxPerStageDescriptorStorageBuffers,
                ["type"] = uint32_t ,
                },
            [18] = {
                ["name"] = maxPerStageDescriptorSampledImages,
                ["type"] = uint32_t ,
                },
            [19] = {
                ["name"] = maxPerStageDescriptorStorageImages,
                ["type"] = uint32_t ,
                },
            [20] = {
                ["name"] = maxPerStageDescriptorInputAttachments,
                ["type"] = uint32_t ,
                },
            [21] = {
                ["name"] = maxPerStageResources,
                ["type"] = uint32_t ,
                },
            [22] = {
                ["name"] = maxDescriptorSetSamplers,
                ["type"] = uint32_t ,
                },
            [23] = {
                ["name"] = maxDescriptorSetUniformBuffers,
                ["type"] = uint32_t ,
                },
            [24] = {
                ["name"] = maxDescriptorSetUniformBuffersDynamic,
                ["type"] = uint32_t ,
                },
            [25] = {
                ["name"] = maxDescriptorSetStorageBuffers,
                ["type"] = uint32_t ,
                },
            [26] = {
                ["name"] = maxDescriptorSetStorageBuffersDynamic,
                ["type"] = uint32_t ,
                },
            [27] = {
                ["name"] = maxDescriptorSetSampledImages,
                ["type"] = uint32_t ,
                },
            [28] = {
                ["name"] = maxDescriptorSetStorageImages,
                ["type"] = uint32_t ,
                },
            [29] = {
                ["name"] = maxDescriptorSetInputAttachments,
                ["type"] = uint32_t ,
                },
            [30] = {
                ["name"] = maxVertexInputAttributes,
                ["type"] = uint32_t ,
                },
            [31] = {
                ["name"] = maxVertexInputBindings,
                ["type"] = uint32_t ,
                },
            [32] = {
                ["name"] = maxVertexInputAttributeOffset,
                ["type"] = uint32_t ,
                },
            [33] = {
                ["name"] = maxVertexInputBindingStride,
                ["type"] = uint32_t ,
                },
            [34] = {
                ["name"] = maxVertexOutputComponents,
                ["type"] = uint32_t ,
                },
            [35] = {
                ["name"] = maxTessellationGenerationLevel,
                ["type"] = uint32_t ,
                },
            [36] = {
                ["name"] = maxTessellationPatchSize,
                ["type"] = uint32_t ,
                },
            [37] = {
                ["name"] = maxTessellationControlPerVertexInputComponents,
                ["type"] = uint32_t ,
                },
            [38] = {
                ["name"] = maxTessellationControlPerVertexOutputComponents,
                ["type"] = uint32_t ,
                },
            [39] = {
                ["name"] = maxTessellationControlPerPatchOutputComponents,
                ["type"] = uint32_t ,
                },
            [40] = {
                ["name"] = maxTessellationControlTotalOutputComponents,
                ["type"] = uint32_t ,
                },
            [41] = {
                ["name"] = maxTessellationEvaluationInputComponents,
                ["type"] = uint32_t ,
                },
            [42] = {
                ["name"] = maxTessellationEvaluationOutputComponents,
                ["type"] = uint32_t ,
                },
            [43] = {
                ["name"] = maxGeometryShaderInvocations,
                ["type"] = uint32_t ,
                },
            [44] = {
                ["name"] = maxGeometryInputComponents,
                ["type"] = uint32_t ,
                },
            [45] = {
                ["name"] = maxGeometryOutputComponents,
                ["type"] = uint32_t ,
                },
            [46] = {
                ["name"] = maxGeometryOutputVertices,
                ["type"] = uint32_t ,
                },
            [47] = {
                ["name"] = maxGeometryTotalOutputComponents,
                ["type"] = uint32_t ,
                },
            [48] = {
                ["name"] = maxFragmentInputComponents,
                ["type"] = uint32_t ,
                },
            [49] = {
                ["name"] = maxFragmentOutputAttachments,
                ["type"] = uint32_t ,
                },
            [50] = {
                ["name"] = maxFragmentDualSrcAttachments,
                ["type"] = uint32_t ,
                },
            [51] = {
                ["name"] = maxFragmentCombinedOutputResources,
                ["type"] = uint32_t ,
                },
            [52] = {
                ["name"] = maxComputeSharedMemorySize,
                ["type"] = uint32_t ,
                },
            [53] = {
                ["name"] = maxComputeWorkGroupCount,
                ["type"] = uint32_t [3] ,
                },
            [54] = {
                ["name"] = maxComputeWorkGroupInvocations,
                ["type"] = uint32_t ,
                },
            [55] = {
                ["name"] = maxComputeWorkGroupSize,
                ["type"] = uint32_t [3] ,
                },
            [56] = {
                ["name"] = subPixelPrecisionBits,
                ["type"] = uint32_t ,
                },
            [57] = {
                ["name"] = subTexelPrecisionBits,
                ["type"] = uint32_t ,
                },
            [58] = {
                ["name"] = mipmapPrecisionBits,
                ["type"] = uint32_t ,
                },
            [59] = {
                ["name"] = maxDrawIndexedIndexValue,
                ["type"] = uint32_t ,
                },
            [60] = {
                ["name"] = maxDrawIndirectCount,
                ["type"] = uint32_t ,
                },
            [61] = {
                ["name"] = maxSamplerLodBias,
                ["type"] = float ,
                },
            [62] = {
                ["name"] = maxSamplerAnisotropy,
                ["type"] = float ,
                },
            [63] = {
                ["name"] = maxViewports,
                ["type"] = uint32_t ,
                },
            [64] = {
                ["name"] = maxViewportDimensions,
                ["type"] = uint32_t [2] ,
                },
            [65] = {
                ["name"] = viewportBoundsRange,
                ["type"] = float [2] ,
                },
            [66] = {
                ["name"] = viewportSubPixelBits,
                ["type"] = uint32_t ,
                },
            [67] = {
                ["name"] = minMemoryMapAlignment,
                ["type"] = size_t ,
                },
            [68] = {
                ["name"] = minTexelBufferOffsetAlignment,
                ["type"] = VkDeviceSize ,
                },
            [69] = {
                ["name"] = minUniformBufferOffsetAlignment,
                ["type"] = VkDeviceSize ,
                },
            [70] = {
                ["name"] = minStorageBufferOffsetAlignment,
                ["type"] = VkDeviceSize ,
                },
            [71] = {
                ["name"] = minTexelOffset,
                ["type"] = int32_t ,
                },
            [72] = {
                ["name"] = maxTexelOffset,
                ["type"] = uint32_t ,
                },
            [73] = {
                ["name"] = minTexelGatherOffset,
                ["type"] = int32_t ,
                },
            [74] = {
                ["name"] = maxTexelGatherOffset,
                ["type"] = uint32_t ,
                },
            [75] = {
                ["name"] = minInterpolationOffset,
                ["type"] = float ,
                },
            [76] = {
                ["name"] = maxInterpolationOffset,
                ["type"] = float ,
                },
            [77] = {
                ["name"] = subPixelInterpolationOffsetBits,
                ["type"] = uint32_t ,
                },
            [78] = {
                ["name"] = maxFramebufferWidth,
                ["type"] = uint32_t ,
                },
            [79] = {
                ["name"] = maxFramebufferHeight,
                ["type"] = uint32_t ,
                },
            [80] = {
                ["name"] = maxFramebufferLayers,
                ["type"] = uint32_t ,
                },
            [81] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = framebufferColorSampleCounts,
                ["optional"] = true,
                },
            [82] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = framebufferDepthSampleCounts,
                ["optional"] = true,
                },
            [83] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = framebufferStencilSampleCounts,
                ["optional"] = true,
                },
            [84] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = framebufferNoAttachmentsSampleCounts,
                ["optional"] = true,
                },
            [85] = {
                ["name"] = maxColorAttachments,
                ["type"] = uint32_t ,
                },
            [86] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = sampledImageColorSampleCounts,
                ["optional"] = true,
                },
            [87] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = sampledImageIntegerSampleCounts,
                ["optional"] = true,
                },
            [88] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = sampledImageDepthSampleCounts,
                ["optional"] = true,
                },
            [89] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = sampledImageStencilSampleCounts,
                ["optional"] = true,
                },
            [90] = {
                ["type"] = VkSampleCountFlags ,
                ["name"] = storageImageSampleCounts,
                ["optional"] = true,
                },
            [91] = {
                ["name"] = maxSampleMaskWords,
                ["type"] = uint32_t ,
                },
            [92] = {
                ["name"] = timestampComputeAndGraphics,
                ["type"] = VkBool32 ,
                },
            [93] = {
                ["name"] = timestampPeriod,
                ["type"] = float ,
                },
            [94] = {
                ["name"] = maxClipDistances,
                ["type"] = uint32_t ,
                },
            [95] = {
                ["name"] = maxCullDistances,
                ["type"] = uint32_t ,
                },
            [96] = {
                ["name"] = maxCombinedClipAndCullDistances,
                ["type"] = uint32_t ,
                },
            [97] = {
                ["name"] = discreteQueuePriorities,
                ["type"] = uint32_t ,
                },
            [98] = {
                ["name"] = pointSizeRange,
                ["type"] = float [2] ,
                },
            [99] = {
                ["name"] = lineWidthRange,
                ["type"] = float [2] ,
                },
            [100] = {
                ["name"] = pointSizeGranularity,
                ["type"] = float ,
                },
            [101] = {
                ["name"] = lineWidthGranularity,
                ["type"] = float ,
                },
            [102] = {
                ["name"] = strictLines,
                ["type"] = VkBool32 ,
                },
            [103] = {
                ["name"] = standardSampleLocations,
                ["type"] = VkBool32 ,
                },
            [104] = {
                ["name"] = optimalBufferCopyOffsetAlignment,
                ["type"] = VkDeviceSize ,
                },
            [105] = {
                ["name"] = optimalBufferCopyRowPitchAlignment,
                ["type"] = VkDeviceSize ,
                },
            [106] = {
                ["name"] = nonCoherentAtomSize,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkPhysicalDeviceLimits,
        ["returnedOnly"] = false,
        },
    ["VkWin32KeyedMutexAcquireReleaseInfoNV"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = acquireCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = acquireCount,
                ["type"] = const VkDeviceMemory * ,
                ["name"] = pAcquireSyncs,
                },
            [5] = {
                ["len"] = acquireCount,
                ["type"] = const uint64_t * ,
                ["name"] = pAcquireKeys,
                },
            [6] = {
                ["len"] = acquireCount,
                ["type"] = const uint32_t * ,
                ["name"] = pAcquireTimeoutMilliseconds,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = releaseCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = releaseCount,
                ["type"] = const VkDeviceMemory * ,
                ["name"] = pReleaseSyncs,
                },
            [9] = {
                ["len"] = releaseCount,
                ["type"] = const uint64_t * ,
                ["name"] = pReleaseKeys,
                },
            },
        ["name"] = VkWin32KeyedMutexAcquireReleaseInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkFenceGetWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_fence_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = fence,
                ["type"] = VkFence ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalFenceHandleTypeFlagBits ,
                },
            },
        ["name"] = VkFenceGetWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkImportFenceWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_fence_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkFence ,
                ["name"] = fence,
                ["externsync"] = true,
                },
            [4] = {
                ["type"] = VkFenceImportFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["type"] = VkExternalFenceHandleTypeFlagBits ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            [6] = {
                ["type"] = HANDLE ,
                ["name"] = handle,
                ["optional"] = true,
                },
            [7] = {
                ["type"] = LPCWSTR ,
                ["name"] = name,
                ["optional"] = true,
                },
            },
        ["name"] = VkImportFenceWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkImageFormatListCreateInfoKHR"] = {
        ["extension"] = VK_KHR_image_format_list,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = viewFormatCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = viewFormatCount,
                ["type"] = const VkFormat * ,
                ["name"] = pViewFormats,
                },
            },
        ["name"] = VkImageFormatListCreateInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkImportSemaphoreFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkSemaphore ,
                ["name"] = semaphore,
                ["externsync"] = true,
                },
            [4] = {
                ["type"] = VkSemaphoreImportFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [5] = {
                ["name"] = handleType,
                ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                },
            [6] = {
                ["name"] = fd,
                ["type"] = int ,
                },
            },
        ["name"] = VkImportSemaphoreFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkExportMemoryWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = const SECURITY_ATTRIBUTES * ,
                ["name"] = pAttributes,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = dwAccess,
                ["type"] = DWORD ,
                },
            [5] = {
                ["name"] = name,
                ["type"] = LPCWSTR ,
                },
            },
        ["name"] = VkExportMemoryWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkImagePlaneMemoryRequirementsInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = planeAspect,
                ["type"] = VkImageAspectFlagBits ,
                },
            },
        ["name"] = VkImagePlaneMemoryRequirementsInfo,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageFormatProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkImageAspectFlags ,
                ["name"] = aspectMask,
                ["optional"] = true,
                },
            [2] = {
                ["name"] = imageGranularity,
                ["type"] = VkExtent3D ,
                },
            [3] = {
                ["type"] = VkSparseImageFormatFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkSparseImageFormatProperties,
        ["returnedOnly"] = false,
        },
    ["VkMappedMemoryRange"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [4] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = size,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkMappedMemoryRange,
        ["returnedOnly"] = false,
        },
    ["VkDescriptorBufferInfo"] = {
        ["fields"] = {
            [1] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [2] = {
                ["name"] = offset,
                ["type"] = VkDeviceSize ,
                },
            [3] = {
                ["name"] = range,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkDescriptorBufferInfo,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDevicePointClippingProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
                },
            [2] = {
                ["name"] = pointClippingBehavior,
                ["type"] = VkPointClippingBehavior ,
                },
            [3] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            },
        ["name"] = VkPhysicalDevicePointClippingProperties,
        ["returnedOnly"] = false,
        },
    ["VkCommandPoolCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkCommandPoolCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = queueFamilyIndex,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkCommandPoolCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSparseBufferMemoryBindInfo"] = {
        ["fields"] = {
            [1] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            [2] = {
                ["name"] = bindCount,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["len"] = bindCount,
                ["type"] = const VkSparseMemoryBind * ,
                ["name"] = pBinds,
                },
            },
        ["name"] = VkSparseBufferMemoryBindInfo,
        ["returnedOnly"] = false,
        },
    ["VkFramebufferCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkFramebufferCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = renderPass,
                ["type"] = VkRenderPass ,
                },
            [5] = {
                ["type"] = uint32_t ,
                ["name"] = attachmentCount,
                ["optional"] = true,
                },
            [6] = {
                ["len"] = attachmentCount,
                ["type"] = const VkImageView * ,
                ["name"] = pAttachments,
                },
            [7] = {
                ["name"] = width,
                ["type"] = uint32_t ,
                },
            [8] = {
                ["name"] = height,
                ["type"] = uint32_t ,
                },
            [9] = {
                ["name"] = layers,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkFramebufferCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkDisplayEventInfoEXT"] = {
        ["extension"] = VK_EXT_display_control,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = displayEvent,
                ["type"] = VkDisplayEventTypeEXT ,
                },
            },
        ["name"] = VkDisplayEventInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkMemoryGetWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_memory_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = memory,
                ["type"] = VkDeviceMemory ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                },
            },
        ["name"] = VkMemoryGetWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkSparseImageMemoryRequirements"] = {
        ["fields"] = {
            [1] = {
                ["name"] = formatProperties,
                ["type"] = VkSparseImageFormatProperties ,
                },
            [2] = {
                ["name"] = imageMipTailFirstLod,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = imageMipTailSize,
                ["type"] = VkDeviceSize ,
                },
            [4] = {
                ["name"] = imageMipTailOffset,
                ["type"] = VkDeviceSize ,
                },
            [5] = {
                ["name"] = imageMipTailStride,
                ["type"] = VkDeviceSize ,
                },
            },
        ["name"] = VkSparseImageMemoryRequirements,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceScalarBlockLayoutFeaturesEXT"] = {
        ["extension"] = VK_EXT_scalar_block_layout,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = scalarBlockLayout,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceScalarBlockLayoutFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkSubmitInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SUBMIT_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = waitSemaphoreCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = waitSemaphoreCount,
                ["type"] = const VkSemaphore * ,
                ["name"] = pWaitSemaphores,
                },
            [5] = {
                ["len"] = waitSemaphoreCount,
                ["type"] = const VkPipelineStageFlags * ,
                ["name"] = pWaitDstStageMask,
                },
            [6] = {
                ["type"] = uint32_t ,
                ["name"] = commandBufferCount,
                ["optional"] = true,
                },
            [7] = {
                ["len"] = commandBufferCount,
                ["type"] = const VkCommandBuffer * ,
                ["name"] = pCommandBuffers,
                },
            [8] = {
                ["type"] = uint32_t ,
                ["name"] = signalSemaphoreCount,
                ["optional"] = true,
                },
            [9] = {
                ["len"] = signalSemaphoreCount,
                ["type"] = const VkSemaphore * ,
                ["name"] = pSignalSemaphores,
                },
            },
        ["name"] = VkSubmitInfo,
        ["returnedOnly"] = false,
        },
    ["VkImportMemoryFdInfoKHR"] = {
        ["extension"] = VK_KHR_external_memory_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                ["name"] = handleType,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = fd,
                ["type"] = int ,
                },
            },
        ["name"] = VkImportMemoryFdInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceImageFormatInfo2"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [4] = {
                ["name"] = type,
                ["type"] = VkImageType ,
                },
            [5] = {
                ["name"] = tiling,
                ["type"] = VkImageTiling ,
                },
            [6] = {
                ["name"] = usage,
                ["type"] = VkImageUsageFlags ,
                },
            [7] = {
                ["type"] = VkImageCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkPhysicalDeviceImageFormatInfo2,
        ["returnedOnly"] = false,
        },
    ["VkDeviceGeneratedCommandsFeaturesNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = computeBindingPointSupport,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkDeviceGeneratedCommandsFeaturesNVX,
        ["returnedOnly"] = false,
        },
    ["VkDisplayModeParametersKHR"] = {
        ["extension"] = VK_KHR_display,
        ["fields"] = {
            [1] = {
                ["name"] = visibleRegion,
                ["type"] = VkExtent2D ,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = uint32_t ,
                ["name"] = refreshRate,
                },
            },
        ["name"] = VkDisplayModeParametersKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDepthClipEnableFeaturesEXT"] = {
        ["extension"] = VK_EXT_depth_clip_enable,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = depthClipEnable,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceDepthClipEnableFeaturesEXT,
        ["returnedOnly"] = false,
        },
    ["VkPresentRegionKHR"] = {
        ["extension"] = VK_KHR_incremental_present,
        ["fields"] = {
            [1] = {
                ["type"] = uint32_t ,
                ["name"] = rectangleCount,
                ["optional"] = true,
                },
            [2] = {
                ["len"] = rectangleCount,
                ["type"] = const VkRectLayerKHR * ,
                ["name"] = pRectangles,
                ["optional"] = true,
                },
            },
        ["name"] = VkPresentRegionKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceShaderAtomicInt64FeaturesKHR"] = {
        ["extension"] = VK_KHR_shader_atomic_int64,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = shaderBufferInt64Atomics,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = shaderSharedInt64Atomics,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceShaderAtomicInt64FeaturesKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceDriverPropertiesKHR"] = {
        ["extension"] = VK_KHR_driver_properties,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = driverID,
                ["type"] = VkDriverIdKHR ,
                },
            [4] = {
                ["name"] = driverName,
                ["type"] = char [ VK_MAX_DRIVER_NAME_SIZE_KHR] ,
                },
            [5] = {
                ["name"] = conformanceVersion,
                ["type"] = VkConformanceVersionKHR ,
                },
            [6] = {
                ["name"] = driverInfo,
                ["type"] = char [ VK_MAX_DRIVER_INFO_SIZE_KHR] ,
                },
            },
        ["name"] = VkPhysicalDeviceDriverPropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkConformanceVersionKHR"] = {
        ["extension"] = VK_KHR_driver_properties,
        ["fields"] = {
            [1] = {
                ["name"] = major,
                ["type"] = uint8_t ,
                },
            [2] = {
                ["name"] = minor,
                ["type"] = uint8_t ,
                },
            [3] = {
                ["name"] = subminor,
                ["type"] = uint8_t ,
                },
            [4] = {
                ["name"] = patch,
                ["type"] = uint8_t ,
                },
            },
        ["name"] = VkConformanceVersionKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceCooperativeMatrixFeaturesNV"] = {
        ["extension"] = VK_NV_cooperative_matrix,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = cooperativeMatrix,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = cooperativeMatrixRobustBufferAccess,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceCooperativeMatrixFeaturesNV,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = apiVersion,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = driverVersion,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = vendorID,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = deviceID,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["name"] = deviceType,
                ["type"] = VkPhysicalDeviceType ,
                },
            [6] = {
                ["name"] = deviceName,
                ["type"] = char [ VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] ,
                },
            [7] = {
                ["name"] = pipelineCacheUUID,
                ["type"] = uint8_t [ VK_UUID_SIZE] ,
                },
            [8] = {
                ["name"] = limits,
                ["type"] = VkPhysicalDeviceLimits ,
                },
            [9] = {
                ["name"] = sparseProperties,
                ["type"] = VkPhysicalDeviceSparseProperties ,
                },
            },
        ["name"] = VkPhysicalDeviceProperties,
        ["returnedOnly"] = false,
        },
    ["VkWin32KeyedMutexAcquireReleaseInfoKHR"] = {
        ["extension"] = VK_KHR_win32_keyed_mutex,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = acquireCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = acquireCount,
                ["type"] = const VkDeviceMemory * ,
                ["name"] = pAcquireSyncs,
                },
            [5] = {
                ["len"] = acquireCount,
                ["type"] = const uint64_t * ,
                ["name"] = pAcquireKeys,
                },
            [6] = {
                ["len"] = acquireCount,
                ["type"] = const uint32_t * ,
                ["name"] = pAcquireTimeouts,
                },
            [7] = {
                ["type"] = uint32_t ,
                ["name"] = releaseCount,
                ["optional"] = true,
                },
            [8] = {
                ["len"] = releaseCount,
                ["type"] = const VkDeviceMemory * ,
                ["name"] = pReleaseSyncs,
                },
            [9] = {
                ["len"] = releaseCount,
                ["type"] = const uint64_t * ,
                ["name"] = pReleaseKeys,
                },
            },
        ["name"] = VkWin32KeyedMutexAcquireReleaseInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPipelineDepthStencilStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineDepthStencilStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = depthTestEnable,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = depthWriteEnable,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = depthCompareOp,
                ["type"] = VkCompareOp ,
                },
            [7] = {
                ["name"] = depthBoundsTestEnable,
                ["type"] = VkBool32 ,
                },
            [8] = {
                ["name"] = stencilTestEnable,
                ["type"] = VkBool32 ,
                },
            [9] = {
                ["name"] = front,
                ["type"] = VkStencilOpState ,
                },
            [10] = {
                ["name"] = back,
                ["type"] = VkStencilOpState ,
                },
            [11] = {
                ["name"] = minDepthBounds,
                ["type"] = float ,
                },
            [12] = {
                ["name"] = maxDepthBounds,
                ["type"] = float ,
                },
            },
        ["name"] = VkPipelineDepthStencilStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkSemaphoreGetWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_semaphore_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = semaphore,
                ["type"] = VkSemaphore ,
                },
            [4] = {
                ["name"] = handleType,
                ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                },
            },
        ["name"] = VkSemaphoreGetWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkObjectTableVertexBufferEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            [3] = {
                ["name"] = buffer,
                ["type"] = VkBuffer ,
                },
            },
        ["name"] = VkObjectTableVertexBufferEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkObjectTableDescriptorSetEntryNVX"] = {
        ["extension"] = VK_NVX_device_generated_commands,
        ["fields"] = {
            [1] = {
                ["name"] = type,
                ["type"] = VkObjectEntryTypeNVX ,
                },
            [2] = {
                ["name"] = flags,
                ["type"] = VkObjectEntryUsageFlagsNVX ,
                },
            [3] = {
                ["name"] = pipelineLayout,
                ["type"] = VkPipelineLayout ,
                },
            [4] = {
                ["name"] = descriptorSet,
                ["type"] = VkDescriptorSet ,
                },
            },
        ["name"] = VkObjectTableDescriptorSetEntryNVX,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceIDProperties"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = deviceUUID,
                ["type"] = uint8_t [ VK_UUID_SIZE] ,
                },
            [4] = {
                ["name"] = driverUUID,
                ["type"] = uint8_t [ VK_UUID_SIZE] ,
                },
            [5] = {
                ["name"] = deviceLUIDValid,
                ["type"] = VkBool32 ,
                },
            [6] = {
                ["name"] = deviceNodeMask,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["name"] = deviceLUID,
                ["type"] = uint8_t [ VK_LUID_SIZE] ,
                },
            },
        ["name"] = VkPhysicalDeviceIDProperties,
        ["returnedOnly"] = false,
        },
    ["VkPipelineVertexInputDivisorStateCreateInfoEXT"] = {
        ["extension"] = VK_EXT_vertex_attribute_divisor,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["name"] = vertexBindingDivisorCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["len"] = vertexBindingDivisorCount,
                ["type"] = const VkVertexInputBindingDivisorDescriptionEXT * ,
                ["name"] = pVertexBindingDivisors,
                },
            },
        ["name"] = VkPipelineVertexInputDivisorStateCreateInfoEXT,
        ["returnedOnly"] = false,
        },
    ["VkVertexInputAttributeDescription"] = {
        ["fields"] = {
            [1] = {
                ["name"] = location,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = binding,
                ["type"] = uint32_t ,
                },
            [3] = {
                ["name"] = format,
                ["type"] = VkFormat ,
                },
            [4] = {
                ["name"] = offset,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkVertexInputAttributeDescription,
        ["returnedOnly"] = false,
        },
    ["VkExportFenceWin32HandleInfoKHR"] = {
        ["extension"] = VK_KHR_external_fence_win32,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = const SECURITY_ATTRIBUTES * ,
                ["name"] = pAttributes,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = dwAccess,
                ["type"] = DWORD ,
                },
            [5] = {
                ["name"] = name,
                ["type"] = LPCWSTR ,
                },
            },
        ["name"] = VkExportFenceWin32HandleInfoKHR,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceMemoryProperties"] = {
        ["fields"] = {
            [1] = {
                ["name"] = memoryTypeCount,
                ["type"] = uint32_t ,
                },
            [2] = {
                ["name"] = memoryTypes,
                ["type"] = VkMemoryType [ VK_MAX_MEMORY_TYPES] ,
                },
            [3] = {
                ["name"] = memoryHeapCount,
                ["type"] = uint32_t ,
                },
            [4] = {
                ["name"] = memoryHeaps,
                ["type"] = VkMemoryHeap [ VK_MAX_MEMORY_HEAPS] ,
                },
            },
        ["name"] = VkPhysicalDeviceMemoryProperties,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportStateCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkPipelineViewportStateCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["name"] = viewportCount,
                ["type"] = uint32_t ,
                },
            [5] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pViewports,
                ["len"] = viewportCount,
                ["type"] = const VkViewport * ,
                },
            [6] = {
                ["name"] = scissorCount,
                ["type"] = uint32_t ,
                },
            [7] = {
                ["noautovalidity"] = true,
                ["optional"] = true,
                ["name"] = pScissors,
                ["len"] = scissorCount,
                ["type"] = const VkRect2D * ,
                },
            },
        ["name"] = VkPipelineViewportStateCreateInfo,
        ["returnedOnly"] = false,
        },
    ["VkPipelineViewportExclusiveScissorStateCreateInfoNV"] = {
        ["extension"] = VK_NV_scissor_exclusive,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = uint32_t ,
                ["name"] = exclusiveScissorCount,
                ["optional"] = true,
                },
            [4] = {
                ["len"] = exclusiveScissorCount,
                ["type"] = const VkRect2D * ,
                ["name"] = pExclusiveScissors,
                ["optional"] = true,
                },
            },
        ["name"] = VkPipelineViewportExclusiveScissorStateCreateInfoNV,
        ["returnedOnly"] = false,
        },
    ["VkMemoryFdPropertiesKHR"] = {
        ["extension"] = VK_KHR_external_memory_fd,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = void * ,
                },
            [3] = {
                ["name"] = memoryTypeBits,
                ["type"] = uint32_t ,
                },
            },
        ["name"] = VkMemoryFdPropertiesKHR,
        ["returnedOnly"] = false,
        },
    ["VkIOSSurfaceCreateInfoMVK"] = {
        ["extension"] = VK_MVK_ios_surface,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkIOSSurfaceCreateFlagsMVK ,
                ["name"] = flags,
                ["optional"] = true,
                },
            [4] = {
                ["noautovalidity"] = true,
                ["type"] = const void * ,
                ["name"] = pView,
                },
            },
        ["name"] = VkIOSSurfaceCreateInfoMVK,
        ["returnedOnly"] = false,
        },
    ["VkPhysicalDeviceVulkanMemoryModelFeaturesKHR"] = {
        ["extension"] = VK_KHR_vulkan_memory_model,
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR,
                },
            [2] = {
                ["noautovalidity"] = true,
                ["type"] = void * ,
                ["name"] = pNext,
                },
            [3] = {
                ["name"] = vulkanMemoryModel,
                ["type"] = VkBool32 ,
                },
            [4] = {
                ["name"] = vulkanMemoryModelDeviceScope,
                ["type"] = VkBool32 ,
                },
            [5] = {
                ["name"] = vulkanMemoryModelAvailabilityVisibilityChains,
                ["type"] = VkBool32 ,
                },
            },
        ["name"] = VkPhysicalDeviceVulkanMemoryModelFeaturesKHR,
        ["returnedOnly"] = false,
        },
    ["VkFenceCreateInfo"] = {
        ["fields"] = {
            [1] = {
                ["type"] = VkStructureType ,
                ["name"] = sType,
                ["values"] = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
                },
            [2] = {
                ["name"] = pNext,
                ["type"] = const void * ,
                },
            [3] = {
                ["type"] = VkFenceCreateFlags ,
                ["name"] = flags,
                ["optional"] = true,
                },
            },
        ["name"] = VkFenceCreateInfo,
        ["returnedOnly"] = false,
        },
    }
{
    ["bitmasks"] = {
        },
    ["commands"] = {
        [1] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkCreateInstance,
            ["params"] = {
                [1] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkInstanceCreateInfo * ,
                    },
                [2] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [3] = {
                    ["name"] = pInstance,
                    ["type"] = VkInstance * ,
                    },
                },
            },
        [2] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkDestroyInstance,
            ["params"] = {
                [1] = {
                    ["externsync"] = true,
                    ["type"] = VkInstance ,
                    ["name"] = instance,
                    ["optional"] = true,
                    },
                [2] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [3] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkEnumeratePhysicalDevices,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance ,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPhysicalDeviceCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pPhysicalDeviceCount,
                    ["type"] = VkPhysicalDevice * ,
                    ["name"] = pPhysicalDevices,
                    ["optional"] = true,
                    },
                },
            },
        [4] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceFeatures,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pFeatures,
                    ["type"] = VkPhysicalDeviceFeatures * ,
                    },
                },
            },
        [5] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [3] = {
                    ["name"] = pFormatProperties,
                    ["type"] = VkFormatProperties * ,
                    },
                },
            },
        [6] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceImageFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [3] = {
                    ["name"] = type,
                    ["type"] = VkImageType ,
                    },
                [4] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling ,
                    },
                [5] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags ,
                    },
                [6] = {
                    ["type"] = VkImageCreateFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                [7] = {
                    ["name"] = pImageFormatProperties,
                    ["type"] = VkImageFormatProperties * ,
                    },
                },
            },
        [7] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pProperties,
                    ["type"] = VkPhysicalDeviceProperties * ,
                    },
                },
            },
        [8] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceQueueFamilyProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pQueueFamilyPropertyCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pQueueFamilyPropertyCount,
                    ["type"] = VkQueueFamilyProperties * ,
                    ["name"] = pQueueFamilyProperties,
                    ["optional"] = true,
                    },
                },
            },
        [9] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceMemoryProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pMemoryProperties,
                    ["type"] = VkPhysicalDeviceMemoryProperties * ,
                    },
                },
            },
        [10] = {
            ["returnType"] = PFN_vkVoidFunction,
            ["group"] = Device initialization,
            ["name"] = vkGetInstanceProcAddr,
            ["params"] = {
                [1] = {
                    ["type"] = VkInstance ,
                    ["name"] = instance,
                    ["optional"] = true,
                    },
                [2] = {
                    ["len"] = null-terminated,
                    ["type"] = const char * ,
                    ["name"] = pName,
                    },
                },
            },
        [11] = {
            ["returnType"] = PFN_vkVoidFunction,
            ["group"] = Device initialization,
            ["name"] = vkGetDeviceProcAddr,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["len"] = null-terminated,
                    ["type"] = const char * ,
                    ["name"] = pName,
                    },
                },
            },
        [12] = {
            ["returnType"] = VkResult,
            ["group"] = Device commands,
            ["name"] = vkCreateDevice,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkDeviceCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pDevice,
                    ["type"] = VkDevice * ,
                    },
                },
            },
        [13] = {
            ["returnType"] = void,
            ["group"] = Device commands,
            ["name"] = vkDestroyDevice,
            ["params"] = {
                [1] = {
                    ["externsync"] = true,
                    ["type"] = VkDevice ,
                    ["name"] = device,
                    ["optional"] = true,
                    },
                [2] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [14] = {
            ["returnType"] = VkResult,
            ["group"] = Extension discovery commands,
            ["name"] = vkEnumerateInstanceExtensionProperties,
            ["params"] = {
                [1] = {
                    ["len"] = null-terminated,
                    ["type"] = const char * ,
                    ["name"] = pLayerName,
                    ["optional"] = true,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkExtensionProperties * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [15] = {
            ["returnType"] = VkResult,
            ["group"] = Extension discovery commands,
            ["name"] = vkEnumerateDeviceExtensionProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["len"] = null-terminated,
                    ["type"] = const char * ,
                    ["name"] = pLayerName,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [4] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkExtensionProperties * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [16] = {
            ["returnType"] = VkResult,
            ["group"] = Layer discovery commands,
            ["name"] = vkEnumerateInstanceLayerProperties,
            ["params"] = {
                [1] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [2] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkLayerProperties * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [17] = {
            ["returnType"] = VkResult,
            ["group"] = Layer discovery commands,
            ["name"] = vkEnumerateDeviceLayerProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkLayerProperties * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [18] = {
            ["returnType"] = void,
            ["group"] = queue commands,
            ["name"] = vkGetDeviceQueue,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = queueIndex,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = pQueue,
                    ["type"] = VkQueue * ,
                    },
                },
            },
        [19] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkQueueSubmit,
            ["params"] = {
                [1] = {
                    ["type"] = VkQueue ,
                    ["name"] = queue,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["type"] = uint32_t ,
                    ["name"] = submitCount,
                    ["optional"] = true,
                    },
                [3] = {
                    ["len"] = submitCount,
                    ["type"] = const VkSubmitInfo * ,
                    ["name"] = pSubmits,
                    ["externsync"] = pSubmits[].pWaitSemaphores[],pSubmits[].pSignalSemaphores[],
                    },
                [4] = {
                    ["externsync"] = true,
                    ["type"] = VkFence ,
                    ["name"] = fence,
                    ["optional"] = true,
                    },
                },
            },
        [20] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkQueueWaitIdle,
            ["params"] = {
                [1] = {
                    ["type"] = VkQueue ,
                    ["name"] = queue,
                    ["externsync"] = true,
                    },
                },
            },
        [21] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkDeviceWaitIdle,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                },
            },
        [22] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkAllocateMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pAllocateInfo,
                    ["type"] = const VkMemoryAllocateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pMemory,
                    ["type"] = VkDeviceMemory * ,
                    },
                },
            },
        [23] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkFreeMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkDeviceMemory ,
                    ["name"] = memory,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [24] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkMapMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkDeviceMemory ,
                    ["name"] = memory,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = size,
                    ["type"] = VkDeviceSize ,
                    },
                [5] = {
                    ["type"] = VkMemoryMapFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                [6] = {
                    ["type"] = void ** ,
                    ["name"] = ppData,
                    ["optional"] = false,true,
                    },
                },
            },
        [25] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkUnmapMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkDeviceMemory ,
                    ["name"] = memory,
                    ["externsync"] = true,
                    },
                },
            },
        [26] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkFlushMappedMemoryRanges,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = memoryRangeCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = memoryRangeCount,
                    ["type"] = const VkMappedMemoryRange * ,
                    ["name"] = pMemoryRanges,
                    },
                },
            },
        [27] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkInvalidateMappedMemoryRanges,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = memoryRangeCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = memoryRangeCount,
                    ["type"] = const VkMappedMemoryRange * ,
                    ["name"] = pMemoryRanges,
                    },
                },
            },
        [28] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkGetDeviceMemoryCommitment,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory ,
                    },
                [3] = {
                    ["name"] = pCommittedMemoryInBytes,
                    ["type"] = VkDeviceSize * ,
                    },
                },
            },
        [29] = {
            ["returnType"] = VkResult,
            ["group"] = Memory management API commands,
            ["name"] = vkBindBufferMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkBuffer ,
                    ["name"] = buffer,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory ,
                    },
                [4] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize ,
                    },
                },
            },
        [30] = {
            ["returnType"] = VkResult,
            ["group"] = Memory management API commands,
            ["name"] = vkBindImageMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkImage ,
                    ["name"] = image,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory ,
                    },
                [4] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize ,
                    },
                },
            },
        [31] = {
            ["returnType"] = void,
            ["group"] = Memory management API commands,
            ["name"] = vkGetBufferMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = pMemoryRequirements,
                    ["type"] = VkMemoryRequirements * ,
                    },
                },
            },
        [32] = {
            ["returnType"] = void,
            ["group"] = Memory management API commands,
            ["name"] = vkGetImageMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = pMemoryRequirements,
                    ["type"] = VkMemoryRequirements * ,
                    },
                },
            },
        [33] = {
            ["returnType"] = void,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkGetImageSparseMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pSparseMemoryRequirementCount,
                    ["optional"] = false,true,
                    },
                [4] = {
                    ["len"] = pSparseMemoryRequirementCount,
                    ["type"] = VkSparseImageMemoryRequirements * ,
                    ["name"] = pSparseMemoryRequirements,
                    ["optional"] = true,
                    },
                },
            },
        [34] = {
            ["returnType"] = void,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [3] = {
                    ["name"] = type,
                    ["type"] = VkImageType ,
                    },
                [4] = {
                    ["name"] = samples,
                    ["type"] = VkSampleCountFlagBits ,
                    },
                [5] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags ,
                    },
                [6] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling ,
                    },
                [7] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [8] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkSparseImageFormatProperties * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [35] = {
            ["returnType"] = VkResult,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkQueueBindSparse,
            ["params"] = {
                [1] = {
                    ["type"] = VkQueue ,
                    ["name"] = queue,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["type"] = uint32_t ,
                    ["name"] = bindInfoCount,
                    ["optional"] = true,
                    },
                [3] = {
                    ["len"] = bindInfoCount,
                    ["type"] = const VkBindSparseInfo * ,
                    ["name"] = pBindInfo,
                    ["externsync"] = pBindInfo[].pWaitSemaphores[],pBindInfo[].pSignalSemaphores[],pBindInfo[].pBufferBinds[].buffer,pBindInfo[].pImageOpaqueBinds[].image,pBindInfo[].pImageBinds[].image,
                    },
                [4] = {
                    ["externsync"] = true,
                    ["type"] = VkFence ,
                    ["name"] = fence,
                    ["optional"] = true,
                    },
                },
            },
        [36] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkCreateFence,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkFenceCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pFence,
                    ["type"] = VkFence * ,
                    },
                },
            },
        [37] = {
            ["returnType"] = void,
            ["group"] = Fence commands,
            ["name"] = vkDestroyFence,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkFence ,
                    ["name"] = fence,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [38] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkResetFences,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = fenceCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = fenceCount,
                    ["type"] = const VkFence * ,
                    ["name"] = pFences,
                    ["externsync"] = true,
                    },
                },
            },
        [39] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkGetFenceStatus,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = fence,
                    ["type"] = VkFence ,
                    },
                },
            },
        [40] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkWaitForFences,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = fenceCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = fenceCount,
                    ["type"] = const VkFence * ,
                    ["name"] = pFences,
                    },
                [4] = {
                    ["name"] = waitAll,
                    ["type"] = VkBool32 ,
                    },
                [5] = {
                    ["name"] = timeout,
                    ["type"] = uint64_t ,
                    },
                },
            },
        [41] = {
            ["returnType"] = VkResult,
            ["group"] = Queue semaphore commands,
            ["name"] = vkCreateSemaphore,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkSemaphoreCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pSemaphore,
                    ["type"] = VkSemaphore * ,
                    },
                },
            },
        [42] = {
            ["returnType"] = void,
            ["group"] = Queue semaphore commands,
            ["name"] = vkDestroySemaphore,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkSemaphore ,
                    ["name"] = semaphore,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [43] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkCreateEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkEventCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pEvent,
                    ["type"] = VkEvent * ,
                    },
                },
            },
        [44] = {
            ["returnType"] = void,
            ["group"] = Event commands,
            ["name"] = vkDestroyEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkEvent ,
                    ["name"] = event,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [45] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkGetEventStatus,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent ,
                    },
                },
            },
        [46] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkSetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkEvent ,
                    ["name"] = event,
                    ["externsync"] = true,
                    },
                },
            },
        [47] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkResetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkEvent ,
                    ["name"] = event,
                    ["externsync"] = true,
                    },
                },
            },
        [48] = {
            ["returnType"] = VkResult,
            ["group"] = Query commands,
            ["name"] = vkCreateQueryPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkQueryPoolCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pQueryPool,
                    ["type"] = VkQueryPool * ,
                    },
                },
            },
        [49] = {
            ["returnType"] = void,
            ["group"] = Query commands,
            ["name"] = vkDestroyQueryPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkQueryPool ,
                    ["name"] = queryPool,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [50] = {
            ["returnType"] = VkResult,
            ["group"] = Query commands,
            ["name"] = vkGetQueryPoolResults,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = dataSize,
                    ["type"] = size_t ,
                    },
                [6] = {
                    ["len"] = dataSize,
                    ["type"] = void * ,
                    ["name"] = pData,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = VkDeviceSize ,
                    },
                [8] = {
                    ["type"] = VkQueryResultFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [51] = {
            ["returnType"] = VkResult,
            ["group"] = Buffer commands,
            ["name"] = vkCreateBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkBufferCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pBuffer,
                    ["type"] = VkBuffer * ,
                    },
                },
            },
        [52] = {
            ["returnType"] = void,
            ["group"] = Buffer commands,
            ["name"] = vkDestroyBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkBuffer ,
                    ["name"] = buffer,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [53] = {
            ["returnType"] = VkResult,
            ["group"] = Buffer view commands,
            ["name"] = vkCreateBufferView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkBufferViewCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pView,
                    ["type"] = VkBufferView * ,
                    },
                },
            },
        [54] = {
            ["returnType"] = void,
            ["group"] = Buffer view commands,
            ["name"] = vkDestroyBufferView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkBufferView ,
                    ["name"] = bufferView,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [55] = {
            ["returnType"] = VkResult,
            ["group"] = Image commands,
            ["name"] = vkCreateImage,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkImageCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pImage,
                    ["type"] = VkImage * ,
                    },
                },
            },
        [56] = {
            ["returnType"] = void,
            ["group"] = Image commands,
            ["name"] = vkDestroyImage,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkImage ,
                    ["name"] = image,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [57] = {
            ["returnType"] = void,
            ["group"] = Image commands,
            ["name"] = vkGetImageSubresourceLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = pSubresource,
                    ["type"] = const VkImageSubresource * ,
                    },
                [4] = {
                    ["name"] = pLayout,
                    ["type"] = VkSubresourceLayout * ,
                    },
                },
            },
        [58] = {
            ["returnType"] = VkResult,
            ["group"] = Image view commands,
            ["name"] = vkCreateImageView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkImageViewCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pView,
                    ["type"] = VkImageView * ,
                    },
                },
            },
        [59] = {
            ["returnType"] = void,
            ["group"] = Image view commands,
            ["name"] = vkDestroyImageView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkImageView ,
                    ["name"] = imageView,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [60] = {
            ["returnType"] = VkResult,
            ["group"] = Shader commands,
            ["name"] = vkCreateShaderModule,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkShaderModuleCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pShaderModule,
                    ["type"] = VkShaderModule * ,
                    },
                },
            },
        [61] = {
            ["returnType"] = void,
            ["group"] = Shader commands,
            ["name"] = vkDestroyShaderModule,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkShaderModule ,
                    ["name"] = shaderModule,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [62] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkCreatePipelineCache,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkPipelineCacheCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pPipelineCache,
                    ["type"] = VkPipelineCache * ,
                    },
                },
            },
        [63] = {
            ["returnType"] = void,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkDestroyPipelineCache,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkPipelineCache ,
                    ["name"] = pipelineCache,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [64] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkGetPipelineCacheData,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache ,
                    },
                [3] = {
                    ["type"] = size_t * ,
                    ["name"] = pDataSize,
                    ["optional"] = false,true,
                    },
                [4] = {
                    ["len"] = pDataSize,
                    ["type"] = void * ,
                    ["name"] = pData,
                    ["optional"] = true,
                    },
                },
            },
        [65] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkMergePipelineCaches,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkPipelineCache ,
                    ["name"] = dstCache,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = srcCacheCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = srcCacheCount,
                    ["type"] = const VkPipelineCache * ,
                    ["name"] = pSrcCaches,
                    },
                },
            },
        [66] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline commands,
            ["name"] = vkCreateGraphicsPipelines,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkPipelineCache ,
                    ["name"] = pipelineCache,
                    ["optional"] = true,
                    },
                [3] = {
                    ["name"] = createInfoCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = createInfoCount,
                    ["type"] = const VkGraphicsPipelineCreateInfo * ,
                    ["name"] = pCreateInfos,
                    },
                [5] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = createInfoCount,
                    ["type"] = VkPipeline * ,
                    ["name"] = pPipelines,
                    },
                },
            },
        [67] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline commands,
            ["name"] = vkCreateComputePipelines,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkPipelineCache ,
                    ["name"] = pipelineCache,
                    ["optional"] = true,
                    },
                [3] = {
                    ["name"] = createInfoCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = createInfoCount,
                    ["type"] = const VkComputePipelineCreateInfo * ,
                    ["name"] = pCreateInfos,
                    },
                [5] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = createInfoCount,
                    ["type"] = VkPipeline * ,
                    ["name"] = pPipelines,
                    },
                },
            },
        [68] = {
            ["returnType"] = void,
            ["group"] = Pipeline commands,
            ["name"] = vkDestroyPipeline,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkPipeline ,
                    ["name"] = pipeline,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [69] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline layout commands,
            ["name"] = vkCreatePipelineLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkPipelineLayoutCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pPipelineLayout,
                    ["type"] = VkPipelineLayout * ,
                    },
                },
            },
        [70] = {
            ["returnType"] = void,
            ["group"] = Pipeline layout commands,
            ["name"] = vkDestroyPipelineLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkPipelineLayout ,
                    ["name"] = pipelineLayout,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [71] = {
            ["returnType"] = VkResult,
            ["group"] = Sampler commands,
            ["name"] = vkCreateSampler,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkSamplerCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pSampler,
                    ["type"] = VkSampler * ,
                    },
                },
            },
        [72] = {
            ["returnType"] = void,
            ["group"] = Sampler commands,
            ["name"] = vkDestroySampler,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkSampler ,
                    ["name"] = sampler,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [73] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkCreateDescriptorSetLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkDescriptorSetLayoutCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pSetLayout,
                    ["type"] = VkDescriptorSetLayout * ,
                    },
                },
            },
        [74] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkDestroyDescriptorSetLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkDescriptorSetLayout ,
                    ["name"] = descriptorSetLayout,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [75] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkCreateDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkDescriptorPoolCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pDescriptorPool,
                    ["type"] = VkDescriptorPool * ,
                    },
                },
            },
        [76] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkDestroyDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkDescriptorPool ,
                    ["name"] = descriptorPool,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [77] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkResetDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkDescriptorPool ,
                    ["name"] = descriptorPool,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["type"] = VkDescriptorPoolResetFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [78] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkAllocateDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = const VkDescriptorSetAllocateInfo * ,
                    ["name"] = pAllocateInfo,
                    ["externsync"] = pAllocateInfo::descriptorPool,
                    },
                [3] = {
                    ["len"] = pAllocateInfo::descriptorSetCount,
                    ["type"] = VkDescriptorSet * ,
                    ["name"] = pDescriptorSets,
                    },
                },
            },
        [79] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkFreeDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkDescriptorPool ,
                    ["name"] = descriptorPool,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = descriptorSetCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = const VkDescriptorSet * ,
                    ["name"] = pDescriptorSets,
                    ["len"] = descriptorSetCount,
                    ["externsync"] = true,
                    },
                },
            },
        [80] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkUpdateDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = uint32_t ,
                    ["name"] = descriptorWriteCount,
                    ["optional"] = true,
                    },
                [3] = {
                    ["len"] = descriptorWriteCount,
                    ["type"] = const VkWriteDescriptorSet * ,
                    ["name"] = pDescriptorWrites,
                    ["externsync"] = pDescriptorWrites[].dstSet,
                    },
                [4] = {
                    ["type"] = uint32_t ,
                    ["name"] = descriptorCopyCount,
                    ["optional"] = true,
                    },
                [5] = {
                    ["len"] = descriptorCopyCount,
                    ["type"] = const VkCopyDescriptorSet * ,
                    ["name"] = pDescriptorCopies,
                    ["externsync"] = pDescriptorCopies[].dstSet,
                    },
                },
            },
        [81] = {
            ["returnType"] = VkResult,
            ["group"] = Pass commands,
            ["name"] = vkCreateFramebuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkFramebufferCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pFramebuffer,
                    ["type"] = VkFramebuffer * ,
                    },
                },
            },
        [82] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkDestroyFramebuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkFramebuffer ,
                    ["name"] = framebuffer,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [83] = {
            ["returnType"] = VkResult,
            ["group"] = Pass commands,
            ["name"] = vkCreateRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkRenderPassCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pRenderPass,
                    ["type"] = VkRenderPass * ,
                    },
                },
            },
        [84] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkDestroyRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkRenderPass ,
                    ["name"] = renderPass,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [85] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkGetRenderAreaGranularity,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = renderPass,
                    ["type"] = VkRenderPass ,
                    },
                [3] = {
                    ["name"] = pGranularity,
                    ["type"] = VkExtent2D * ,
                    },
                },
            },
        [86] = {
            ["returnType"] = VkResult,
            ["group"] = Command pool commands,
            ["name"] = vkCreateCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkCommandPoolCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pCommandPool,
                    ["type"] = VkCommandPool * ,
                    },
                },
            },
        [87] = {
            ["returnType"] = void,
            ["group"] = Command pool commands,
            ["name"] = vkDestroyCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkCommandPool ,
                    ["name"] = commandPool,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [88] = {
            ["returnType"] = VkResult,
            ["group"] = Command pool commands,
            ["name"] = vkResetCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkCommandPool ,
                    ["name"] = commandPool,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["type"] = VkCommandPoolResetFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [89] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkAllocateCommandBuffers,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = const VkCommandBufferAllocateInfo * ,
                    ["name"] = pAllocateInfo,
                    ["externsync"] = pAllocateInfo::commandPool,
                    },
                [3] = {
                    ["len"] = pAllocateInfo::commandBufferCount,
                    ["type"] = VkCommandBuffer * ,
                    ["name"] = pCommandBuffers,
                    },
                },
            },
        [90] = {
            ["returnType"] = void,
            ["group"] = Command buffer commands,
            ["name"] = vkFreeCommandBuffers,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkCommandPool ,
                    ["name"] = commandPool,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = commandBufferCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = const VkCommandBuffer * ,
                    ["name"] = pCommandBuffers,
                    ["len"] = commandBufferCount,
                    ["externsync"] = true,
                    },
                },
            },
        [91] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkBeginCommandBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = pBeginInfo,
                    ["type"] = const VkCommandBufferBeginInfo * ,
                    },
                },
            },
        [92] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkEndCommandBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                },
            },
        [93] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkResetCommandBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["type"] = VkCommandBufferResetFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [94] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindPipeline,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = pipelineBindPoint,
                    ["type"] = VkPipelineBindPoint ,
                    },
                [3] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline ,
                    },
                },
            },
        [95] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetViewport,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = firstViewport,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = viewportCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = viewportCount,
                    ["type"] = const VkViewport * ,
                    ["name"] = pViewports,
                    },
                },
            },
        [96] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetScissor,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = firstScissor,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = scissorCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = scissorCount,
                    ["type"] = const VkRect2D * ,
                    ["name"] = pScissors,
                    },
                },
            },
        [97] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetLineWidth,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = lineWidth,
                    ["type"] = float ,
                    },
                },
            },
        [98] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetDepthBias,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = depthBiasConstantFactor,
                    ["type"] = float ,
                    },
                [3] = {
                    ["name"] = depthBiasClamp,
                    ["type"] = float ,
                    },
                [4] = {
                    ["name"] = depthBiasSlopeFactor,
                    ["type"] = float ,
                    },
                },
            },
        [99] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetBlendConstants,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = blendConstants,
                    ["type"] = const float [4] ,
                    },
                },
            },
        [100] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetDepthBounds,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = minDepthBounds,
                    ["type"] = float ,
                    },
                [3] = {
                    ["name"] = maxDepthBounds,
                    ["type"] = float ,
                    },
                },
            },
        [101] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilCompareMask,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags ,
                    },
                [3] = {
                    ["name"] = compareMask,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [102] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilWriteMask,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags ,
                    },
                [3] = {
                    ["name"] = writeMask,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [103] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilReference,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags ,
                    },
                [3] = {
                    ["name"] = reference,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [104] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindDescriptorSets,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = pipelineBindPoint,
                    ["type"] = VkPipelineBindPoint ,
                    },
                [3] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout ,
                    },
                [4] = {
                    ["name"] = firstSet,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = descriptorSetCount,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = descriptorSetCount,
                    ["type"] = const VkDescriptorSet * ,
                    ["name"] = pDescriptorSets,
                    },
                [7] = {
                    ["type"] = uint32_t ,
                    ["name"] = dynamicOffsetCount,
                    ["optional"] = true,
                    },
                [8] = {
                    ["len"] = dynamicOffsetCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pDynamicOffsets,
                    },
                },
            },
        [105] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindIndexBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = indexType,
                    ["type"] = VkIndexType ,
                    },
                },
            },
        [106] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindVertexBuffers,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = firstBinding,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = bindingCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = bindingCount,
                    ["type"] = const VkBuffer * ,
                    ["name"] = pBuffers,
                    },
                [5] = {
                    ["len"] = bindingCount,
                    ["type"] = const VkDeviceSize * ,
                    ["name"] = pOffsets,
                    },
                },
            },
        [107] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDraw,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = vertexCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = firstVertex,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = firstInstance,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [108] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndexed,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = indexCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = firstIndex,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = vertexOffset,
                    ["type"] = int32_t ,
                    },
                [6] = {
                    ["name"] = firstInstance,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [109] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndirect,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = drawCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = stride,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [110] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndexedIndirect,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = drawCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = stride,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [111] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDispatch,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = groupCountX,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = groupCountY,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = groupCountZ,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [112] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDispatchIndirect,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                },
            },
        [113] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcBuffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer ,
                    },
                [4] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["len"] = regionCount,
                    ["type"] = const VkBufferCopy * ,
                    ["name"] = pRegions,
                    },
                },
            },
        [114] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage ,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["len"] = regionCount,
                    ["type"] = const VkImageCopy * ,
                    ["name"] = pRegions,
                    },
                },
            },
        [115] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBlitImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage ,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["len"] = regionCount,
                    ["type"] = const VkImageBlit * ,
                    ["name"] = pRegions,
                    },
                [8] = {
                    ["name"] = filter,
                    ["type"] = VkFilter ,
                    },
                },
            },
        [116] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyBufferToImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcBuffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage ,
                    },
                [4] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [5] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = regionCount,
                    ["type"] = const VkBufferImageCopy * ,
                    ["name"] = pRegions,
                    },
                },
            },
        [117] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyImageToBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer ,
                    },
                [5] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = regionCount,
                    ["type"] = const VkBufferImageCopy * ,
                    ["name"] = pRegions,
                    },
                },
            },
        [118] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdUpdateBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = dataSize,
                    ["type"] = VkDeviceSize ,
                    },
                [5] = {
                    ["len"] = dataSize,
                    ["type"] = const void * ,
                    ["name"] = pData,
                    },
                },
            },
        [119] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdFillBuffer,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer ,
                    },
                [3] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize ,
                    },
                [4] = {
                    ["name"] = size,
                    ["type"] = VkDeviceSize ,
                    },
                [5] = {
                    ["name"] = data,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [120] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearColorImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = imageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = pColor,
                    ["type"] = const VkClearColorValue * ,
                    },
                [5] = {
                    ["name"] = rangeCount,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = rangeCount,
                    ["type"] = const VkImageSubresourceRange * ,
                    ["name"] = pRanges,
                    },
                },
            },
        [121] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearDepthStencilImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = imageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = pDepthStencil,
                    ["type"] = const VkClearDepthStencilValue * ,
                    },
                [5] = {
                    ["name"] = rangeCount,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = rangeCount,
                    ["type"] = const VkImageSubresourceRange * ,
                    ["name"] = pRanges,
                    },
                },
            },
        [122] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearAttachments,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = attachmentCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = attachmentCount,
                    ["type"] = const VkClearAttachment * ,
                    ["name"] = pAttachments,
                    },
                [4] = {
                    ["name"] = rectCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["len"] = rectCount,
                    ["type"] = const VkClearRect * ,
                    ["name"] = pRects,
                    },
                },
            },
        [123] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResolveImage,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage ,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage ,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout ,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["len"] = regionCount,
                    ["type"] = const VkImageResolve * ,
                    ["name"] = pRegions,
                    },
                },
            },
        [124] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetEvent,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent ,
                    },
                [3] = {
                    ["name"] = stageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                },
            },
        [125] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResetEvent,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent ,
                    },
                [3] = {
                    ["name"] = stageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                },
            },
        [126] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdWaitEvents,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = eventCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = eventCount,
                    ["type"] = const VkEvent * ,
                    ["name"] = pEvents,
                    },
                [4] = {
                    ["name"] = srcStageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                [5] = {
                    ["name"] = dstStageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                [6] = {
                    ["type"] = uint32_t ,
                    ["name"] = memoryBarrierCount,
                    ["optional"] = true,
                    },
                [7] = {
                    ["len"] = memoryBarrierCount,
                    ["type"] = const VkMemoryBarrier * ,
                    ["name"] = pMemoryBarriers,
                    },
                [8] = {
                    ["type"] = uint32_t ,
                    ["name"] = bufferMemoryBarrierCount,
                    ["optional"] = true,
                    },
                [9] = {
                    ["len"] = bufferMemoryBarrierCount,
                    ["type"] = const VkBufferMemoryBarrier * ,
                    ["name"] = pBufferMemoryBarriers,
                    },
                [10] = {
                    ["type"] = uint32_t ,
                    ["name"] = imageMemoryBarrierCount,
                    ["optional"] = true,
                    },
                [11] = {
                    ["len"] = imageMemoryBarrierCount,
                    ["type"] = const VkImageMemoryBarrier * ,
                    ["name"] = pImageMemoryBarriers,
                    },
                },
            },
        [127] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdPipelineBarrier,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = srcStageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                [3] = {
                    ["name"] = dstStageMask,
                    ["type"] = VkPipelineStageFlags ,
                    },
                [4] = {
                    ["type"] = VkDependencyFlags ,
                    ["name"] = dependencyFlags,
                    ["optional"] = true,
                    },
                [5] = {
                    ["type"] = uint32_t ,
                    ["name"] = memoryBarrierCount,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = memoryBarrierCount,
                    ["type"] = const VkMemoryBarrier * ,
                    ["name"] = pMemoryBarriers,
                    },
                [7] = {
                    ["type"] = uint32_t ,
                    ["name"] = bufferMemoryBarrierCount,
                    ["optional"] = true,
                    },
                [8] = {
                    ["len"] = bufferMemoryBarrierCount,
                    ["type"] = const VkBufferMemoryBarrier * ,
                    ["name"] = pBufferMemoryBarriers,
                    },
                [9] = {
                    ["type"] = uint32_t ,
                    ["name"] = imageMemoryBarrierCount,
                    ["optional"] = true,
                    },
                [10] = {
                    ["len"] = imageMemoryBarrierCount,
                    ["type"] = const VkImageMemoryBarrier * ,
                    ["name"] = pImageMemoryBarriers,
                    },
                },
            },
        [128] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBeginQuery,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["type"] = VkQueryControlFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [129] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdEndQuery,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [130] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResetQueryPool,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [131] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdWriteTimestamp,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = pipelineStage,
                    ["type"] = VkPipelineStageFlagBits ,
                    },
                [3] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [4] = {
                    ["name"] = query,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [132] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyQueryPoolResults,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool ,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer ,
                    },
                [6] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize ,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = VkDeviceSize ,
                    },
                [8] = {
                    ["type"] = VkQueryResultFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [133] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdPushConstants,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout ,
                    },
                [3] = {
                    ["name"] = stageFlags,
                    ["type"] = VkShaderStageFlags ,
                    },
                [4] = {
                    ["name"] = offset,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = size,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["len"] = size,
                    ["type"] = const void * ,
                    ["name"] = pValues,
                    },
                },
            },
        [134] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBeginRenderPass,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = pRenderPassBegin,
                    ["type"] = const VkRenderPassBeginInfo * ,
                    },
                [3] = {
                    ["name"] = contents,
                    ["type"] = VkSubpassContents ,
                    },
                },
            },
        [135] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdNextSubpass,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = contents,
                    ["type"] = VkSubpassContents ,
                    },
                },
            },
        [136] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdEndRenderPass,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                },
            },
        [137] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdExecuteCommands,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = commandBufferCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = commandBufferCount,
                    ["type"] = const VkCommandBuffer * ,
                    ["name"] = pCommandBuffers,
                    },
                },
            },
        [138] = {
            ["returnType"] = VkResult,
            ["group"] = Device Initialization,
            ["name"] = vkEnumerateInstanceVersion,
            ["params"] = {
                [1] = {
                    ["name"] = pApiVersion,
                    ["type"] = uint32_t * ,
                    },
                },
            },
        [139] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_bind_memory2,
            ["name"] = vkBindBufferMemory2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = bindInfoCount,
                    ["type"] = const VkBindBufferMemoryInfo * ,
                    ["name"] = pBindInfos,
                    },
                },
            },
        [140] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_bind_memory2,
            ["name"] = vkBindImageMemory2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["len"] = bindInfoCount,
                    ["type"] = const VkBindImageMemoryInfo * ,
                    ["name"] = pBindInfos,
                    },
                },
            },
        [141] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkGetDeviceGroupPeerMemoryFeatures,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = heapIndex,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = localDeviceIndex,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = remoteDeviceIndex,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = pPeerMemoryFeatures,
                    ["type"] = VkPeerMemoryFeatureFlags * ,
                    },
                },
            },
        [142] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkCmdSetDeviceMask,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = deviceMask,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [143] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkCmdDispatchBase,
            ["params"] = {
                [1] = {
                    ["type"] = VkCommandBuffer ,
                    ["name"] = commandBuffer,
                    ["externsync"] = true,
                    },
                [2] = {
                    ["name"] = baseGroupX,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = baseGroupY,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = baseGroupZ,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = groupCountX,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["name"] = groupCountY,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["name"] = groupCountZ,
                    ["type"] = uint32_t ,
                    },
                },
            },
        [144] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_device_group_creation,
            ["name"] = vkEnumeratePhysicalDeviceGroups,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance ,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPhysicalDeviceGroupCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pPhysicalDeviceGroupCount,
                    ["type"] = VkPhysicalDeviceGroupProperties * ,
                    ["name"] = pPhysicalDeviceGroupProperties,
                    ["optional"] = true,
                    },
                },
            },
        [145] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetImageMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pInfo,
                    ["type"] = const VkImageMemoryRequirementsInfo2 * ,
                    },
                [3] = {
                    ["name"] = pMemoryRequirements,
                    ["type"] = VkMemoryRequirements2 * ,
                    },
                },
            },
        [146] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetBufferMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pInfo,
                    ["type"] = const VkBufferMemoryRequirementsInfo2 * ,
                    },
                [3] = {
                    ["name"] = pMemoryRequirements,
                    ["type"] = VkMemoryRequirements2 * ,
                    },
                },
            },
        [147] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetImageSparseMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pInfo,
                    ["type"] = const VkImageSparseMemoryRequirementsInfo2 * ,
                    },
                [3] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pSparseMemoryRequirementCount,
                    ["optional"] = false,true,
                    },
                [4] = {
                    ["len"] = pSparseMemoryRequirementCount,
                    ["type"] = VkSparseImageMemoryRequirements2 * ,
                    ["name"] = pSparseMemoryRequirements,
                    ["optional"] = true,
                    },
                },
            },
        [148] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceFeatures2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pFeatures,
                    ["type"] = VkPhysicalDeviceFeatures2 * ,
                    },
                },
            },
        [149] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pProperties,
                    ["type"] = VkPhysicalDeviceProperties2 * ,
                    },
                },
            },
        [150] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [3] = {
                    ["name"] = pFormatProperties,
                    ["type"] = VkFormatProperties2 * ,
                    },
                },
            },
        [151] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceImageFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pImageFormatInfo,
                    ["type"] = const VkPhysicalDeviceImageFormatInfo2 * ,
                    },
                [3] = {
                    ["name"] = pImageFormatProperties,
                    ["type"] = VkImageFormatProperties2 * ,
                    },
                },
            },
        [152] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceQueueFamilyProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pQueueFamilyPropertyCount,
                    ["optional"] = false,true,
                    },
                [3] = {
                    ["len"] = pQueueFamilyPropertyCount,
                    ["type"] = VkQueueFamilyProperties2 * ,
                    ["name"] = pQueueFamilyProperties,
                    ["optional"] = true,
                    },
                },
            },
        [153] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceMemoryProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pMemoryProperties,
                    ["type"] = VkPhysicalDeviceMemoryProperties2 * ,
                    },
                },
            },
        [154] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pFormatInfo,
                    ["type"] = const VkPhysicalDeviceSparseImageFormatInfo2 * ,
                    },
                [3] = {
                    ["type"] = uint32_t * ,
                    ["name"] = pPropertyCount,
                    ["optional"] = false,true,
                    },
                [4] = {
                    ["len"] = pPropertyCount,
                    ["type"] = VkSparseImageFormatProperties2 * ,
                    ["name"] = pProperties,
                    ["optional"] = true,
                    },
                },
            },
        [155] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_maintenance1,
            ["name"] = vkTrimCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkCommandPool ,
                    ["name"] = commandPool,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["type"] = VkCommandPoolTrimFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            },
        [156] = {
            ["returnType"] = void,
            ["group"] = Originally based on VK_KHR_protected_memory (extension 146), which was never published; thus the mystifying large value= numbers below. These are not aliased since they weren't actually promoted from an extension.,
            ["name"] = vkGetDeviceQueue2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pQueueInfo,
                    ["type"] = const VkDeviceQueueInfo2 * ,
                    },
                [3] = {
                    ["name"] = pQueue,
                    ["type"] = VkQueue * ,
                    },
                },
            },
        [157] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
            ["name"] = vkCreateSamplerYcbcrConversion,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkSamplerYcbcrConversionCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pYcbcrConversion,
                    ["type"] = VkSamplerYcbcrConversion * ,
                    },
                },
            },
        [158] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
            ["name"] = vkDestroySamplerYcbcrConversion,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkSamplerYcbcrConversion ,
                    ["name"] = ycbcrConversion,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [159] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkCreateDescriptorUpdateTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkDescriptorUpdateTemplateCreateInfo * ,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = pDescriptorUpdateTemplate,
                    ["type"] = VkDescriptorUpdateTemplate * ,
                    },
                },
            },
        [160] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkDestroyDescriptorUpdateTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["externsync"] = true,
                    ["type"] = VkDescriptorUpdateTemplate ,
                    ["name"] = descriptorUpdateTemplate,
                    ["optional"] = true,
                    },
                [3] = {
                    ["type"] = const VkAllocationCallbacks * ,
                    ["name"] = pAllocator,
                    ["optional"] = true,
                    },
                },
            },
        [161] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkUpdateDescriptorSetWithTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["type"] = VkDescriptorSet ,
                    ["name"] = descriptorSet,
                    ["externsync"] = true,
                    },
                [3] = {
                    ["name"] = descriptorUpdateTemplate,
                    ["type"] = VkDescriptorUpdateTemplate ,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = const void * ,
                    ["name"] = pData,
                    },
                },
            },
        [162] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_memory_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalBufferProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pExternalBufferInfo,
                    ["type"] = const VkPhysicalDeviceExternalBufferInfo * ,
                    },
                [3] = {
                    ["name"] = pExternalBufferProperties,
                    ["type"] = VkExternalBufferProperties * ,
                    },
                },
            },
        [163] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_fence_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalFenceProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pExternalFenceInfo,
                    ["type"] = const VkPhysicalDeviceExternalFenceInfo * ,
                    },
                [3] = {
                    ["name"] = pExternalFenceProperties,
                    ["type"] = VkExternalFenceProperties * ,
                    },
                },
            },
        [164] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_semaphore_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalSemaphoreProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice ,
                    },
                [2] = {
                    ["name"] = pExternalSemaphoreInfo,
                    ["type"] = const VkPhysicalDeviceExternalSemaphoreInfo * ,
                    },
                [3] = {
                    ["name"] = pExternalSemaphoreProperties,
                    ["type"] = VkExternalSemaphoreProperties * ,
                    },
                },
            },
        [165] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_maintenance3,
            ["name"] = vkGetDescriptorSetLayoutSupport,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice ,
                    },
                [2] = {
                    ["name"] = pCreateInfo,
                    ["type"] = const VkDescriptorSetLayoutCreateInfo * ,
                    },
                [3] = {
                    ["name"] = pSupport,
                    ["type"] = VkDescriptorSetLayoutSupport * ,
                    },
                },
            },
        },
    ["structs"] = {
        [1] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = srcAccessMask,
                    ["optional"] = true,
                    },
                [4] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = dstAccessMask,
                    ["optional"] = true,
                    },
                [5] = {
                    ["name"] = srcQueueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [6] = {
                    ["name"] = dstQueueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [8] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize ,
                    },
                [9] = {
                    ["name"] = size,
                    ["type"] = VkDeviceSize ,
                    },
                },
            ["name"] = VkBufferMemoryBarrier,
            ["returnedOnly"] = false,
            },
        [2] = {
            ["fields"] = {
                [1] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = x,
                    },
                [2] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = y,
                    },
                [3] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = z,
                    },
                },
            ["name"] = VkDispatchIndirectCommand,
            ["returnedOnly"] = false,
            },
        [3] = {
            ["fields"] = {
                [1] = {
                    ["name"] = indexCount,
                    ["type"] = uint32_t ,
                    },
                [2] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = firstIndex,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = vertexOffset,
                    ["type"] = int32_t ,
                    },
                [5] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = firstInstance,
                    },
                },
            ["name"] = VkDrawIndexedIndirectCommand,
            ["returnedOnly"] = false,
            },
        [4] = {
            ["fields"] = {
                [1] = {
                    ["name"] = vertexCount,
                    ["type"] = uint32_t ,
                    },
                [2] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = firstVertex,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = firstInstance,
                    },
                },
            ["name"] = VkDrawIndirectCommand,
            ["returnedOnly"] = false,
            },
        [5] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = srcAccessMask,
                    ["optional"] = true,
                    },
                [4] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = dstAccessMask,
                    ["optional"] = true,
                    },
                [5] = {
                    ["name"] = oldLayout,
                    ["type"] = VkImageLayout ,
                    },
                [6] = {
                    ["name"] = newLayout,
                    ["type"] = VkImageLayout ,
                    },
                [7] = {
                    ["name"] = srcQueueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [8] = {
                    ["name"] = dstQueueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [9] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [10] = {
                    ["name"] = subresourceRange,
                    ["type"] = VkImageSubresourceRange ,
                    },
                },
            ["name"] = VkImageMemoryBarrier,
            ["returnedOnly"] = false,
            },
        [6] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = srcAccessMask,
                    ["optional"] = true,
                    },
                [4] = {
                    ["type"] = VkAccessFlags ,
                    ["name"] = dstAccessMask,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkMemoryBarrier,
            ["returnedOnly"] = false,
            },
        [7] = {
            ["fields"] = {
                [1] = {
                    ["name"] = sType,
                    ["type"] = VkStructureType ,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = struct VkBaseOutStructure * ,
                    },
                },
            ["name"] = VkBaseOutStructure,
            ["returnedOnly"] = false,
            },
        [8] = {
            ["fields"] = {
                [1] = {
                    ["name"] = sType,
                    ["type"] = VkStructureType ,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const struct VkBaseInStructure * ,
                    },
                },
            ["name"] = VkBaseInStructure,
            ["returnedOnly"] = false,
            },
        [9] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = subgroupSize,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkShaderStageFlags ,
                    ["name"] = supportedStages,
                    },
                [5] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkBool32 ,
                    ["name"] = quadOperationsInAllStages,
                    },
                [6] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkSubgroupFeatureFlags ,
                    ["name"] = supportedOperations,
                    },
                },
            ["name"] = VkPhysicalDeviceSubgroupProperties,
            ["returnedOnly"] = false,
            },
        [10] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                [4] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory ,
                    },
                [5] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize ,
                    },
                },
            ["name"] = VkBindBufferMemoryInfo,
            ["returnedOnly"] = false,
            },
        [11] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                [4] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkDeviceMemory ,
                    ["name"] = memory,
                    },
                [5] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize ,
                    },
                },
            ["name"] = VkBindImageMemoryInfo,
            ["returnedOnly"] = false,
            },
        [12] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
                    },
                [2] = {
                    ["noautovalidity"] = true,
                    ["type"] = void * ,
                    ["name"] = pNext,
                    },
                [3] = {
                    ["name"] = storageBuffer16BitAccess,
                    ["type"] = VkBool32 ,
                    },
                [4] = {
                    ["name"] = uniformAndStorageBuffer16BitAccess,
                    ["type"] = VkBool32 ,
                    },
                [5] = {
                    ["name"] = storagePushConstant16,
                    ["type"] = VkBool32 ,
                    },
                [6] = {
                    ["name"] = storageInputOutput16,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDevice16BitStorageFeatures,
            ["returnedOnly"] = false,
            },
        [13] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = prefersDedicatedAllocation,
                    ["type"] = VkBool32 ,
                    },
                [4] = {
                    ["name"] = requiresDedicatedAllocation,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkMemoryDedicatedRequirements,
            ["returnedOnly"] = false,
            },
        [14] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkImage ,
                    ["name"] = image,
                    ["optional"] = true,
                    },
                [4] = {
                    ["type"] = VkBuffer ,
                    ["name"] = buffer,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkMemoryDedicatedAllocateInfo,
            ["returnedOnly"] = false,
            },
        [15] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkMemoryAllocateFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = deviceMask,
                    ["type"] = uint32_t ,
                    },
                },
            ["name"] = VkMemoryAllocateFlagsInfo,
            ["returnedOnly"] = false,
            },
        [16] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = deviceMask,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["type"] = uint32_t ,
                    ["name"] = deviceRenderAreaCount,
                    ["optional"] = true,
                    },
                [5] = {
                    ["len"] = deviceRenderAreaCount,
                    ["type"] = const VkRect2D * ,
                    ["name"] = pDeviceRenderAreas,
                    },
                },
            ["name"] = VkDeviceGroupRenderPassBeginInfo,
            ["returnedOnly"] = false,
            },
        [17] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = deviceMask,
                    ["type"] = uint32_t ,
                    },
                },
            ["name"] = VkDeviceGroupCommandBufferBeginInfo,
            ["returnedOnly"] = false,
            },
        [18] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = uint32_t ,
                    ["name"] = waitSemaphoreCount,
                    ["optional"] = true,
                    },
                [4] = {
                    ["len"] = waitSemaphoreCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pWaitSemaphoreDeviceIndices,
                    },
                [5] = {
                    ["type"] = uint32_t ,
                    ["name"] = commandBufferCount,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = commandBufferCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pCommandBufferDeviceMasks,
                    },
                [7] = {
                    ["type"] = uint32_t ,
                    ["name"] = signalSemaphoreCount,
                    ["optional"] = true,
                    },
                [8] = {
                    ["len"] = signalSemaphoreCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pSignalSemaphoreDeviceIndices,
                    },
                },
            ["name"] = VkDeviceGroupSubmitInfo,
            ["returnedOnly"] = false,
            },
        [19] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = resourceDeviceIndex,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = memoryDeviceIndex,
                    ["type"] = uint32_t ,
                    },
                },
            ["name"] = VkDeviceGroupBindSparseInfo,
            ["returnedOnly"] = false,
            },
        [20] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = uint32_t ,
                    ["name"] = deviceIndexCount,
                    ["optional"] = true,
                    },
                [4] = {
                    ["len"] = deviceIndexCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pDeviceIndices,
                    },
                },
            ["name"] = VkBindBufferMemoryDeviceGroupInfo,
            ["returnedOnly"] = false,
            },
        [21] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = uint32_t ,
                    ["name"] = deviceIndexCount,
                    ["optional"] = true,
                    },
                [4] = {
                    ["len"] = deviceIndexCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pDeviceIndices,
                    },
                [5] = {
                    ["type"] = uint32_t ,
                    ["name"] = splitInstanceBindRegionCount,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = splitInstanceBindRegionCount,
                    ["type"] = const VkRect2D * ,
                    ["name"] = pSplitInstanceBindRegions,
                    },
                },
            ["name"] = VkBindImageMemoryDeviceGroupInfo,
            ["returnedOnly"] = false,
            },
        [22] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = physicalDeviceCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = physicalDevices,
                    ["type"] = VkPhysicalDevice [ VK_MAX_DEVICE_GROUP_SIZE] ,
                    },
                [5] = {
                    ["name"] = subsetAllocation,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceGroupProperties,
            ["returnedOnly"] = false,
            },
        [23] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = uint32_t ,
                    ["name"] = physicalDeviceCount,
                    ["optional"] = true,
                    },
                [4] = {
                    ["len"] = physicalDeviceCount,
                    ["type"] = const VkPhysicalDevice * ,
                    ["name"] = pPhysicalDevices,
                    },
                },
            ["name"] = VkDeviceGroupDeviceCreateInfo,
            ["returnedOnly"] = false,
            },
        [24] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer ,
                    },
                },
            ["name"] = VkBufferMemoryRequirementsInfo2,
            ["returnedOnly"] = false,
            },
        [25] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                },
            ["name"] = VkImageMemoryRequirementsInfo2,
            ["returnedOnly"] = false,
            },
        [26] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = image,
                    ["type"] = VkImage ,
                    },
                },
            ["name"] = VkImageSparseMemoryRequirementsInfo2,
            ["returnedOnly"] = false,
            },
        [27] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = memoryRequirements,
                    ["type"] = VkMemoryRequirements ,
                    },
                },
            ["name"] = VkMemoryRequirements2,
            ["returnedOnly"] = false,
            },
        [28] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = memoryRequirements,
                    ["type"] = VkSparseImageMemoryRequirements ,
                    },
                },
            ["name"] = VkSparseImageMemoryRequirements2,
            ["returnedOnly"] = false,
            },
        [29] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = features,
                    ["type"] = VkPhysicalDeviceFeatures ,
                    },
                },
            ["name"] = VkPhysicalDeviceFeatures2,
            ["returnedOnly"] = false,
            },
        [30] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = properties,
                    ["type"] = VkPhysicalDeviceProperties ,
                    },
                },
            ["name"] = VkPhysicalDeviceProperties2,
            ["returnedOnly"] = false,
            },
        [31] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = formatProperties,
                    ["type"] = VkFormatProperties ,
                    },
                },
            ["name"] = VkFormatProperties2,
            ["returnedOnly"] = false,
            },
        [32] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = imageFormatProperties,
                    ["type"] = VkImageFormatProperties ,
                    },
                },
            ["name"] = VkImageFormatProperties2,
            ["returnedOnly"] = false,
            },
        [33] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [4] = {
                    ["name"] = type,
                    ["type"] = VkImageType ,
                    },
                [5] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling ,
                    },
                [6] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags ,
                    },
                [7] = {
                    ["type"] = VkImageCreateFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkPhysicalDeviceImageFormatInfo2,
            ["returnedOnly"] = false,
            },
        [34] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = queueFamilyProperties,
                    ["type"] = VkQueueFamilyProperties ,
                    },
                },
            ["name"] = VkQueueFamilyProperties2,
            ["returnedOnly"] = false,
            },
        [35] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = memoryProperties,
                    ["type"] = VkPhysicalDeviceMemoryProperties ,
                    },
                },
            ["name"] = VkPhysicalDeviceMemoryProperties2,
            ["returnedOnly"] = false,
            },
        [36] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = properties,
                    ["type"] = VkSparseImageFormatProperties ,
                    },
                },
            ["name"] = VkSparseImageFormatProperties2,
            ["returnedOnly"] = false,
            },
        [37] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [4] = {
                    ["name"] = type,
                    ["type"] = VkImageType ,
                    },
                [5] = {
                    ["name"] = samples,
                    ["type"] = VkSampleCountFlagBits ,
                    },
                [6] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags ,
                    },
                [7] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling ,
                    },
                },
            ["name"] = VkPhysicalDeviceSparseImageFormatInfo2,
            ["returnedOnly"] = false,
            },
        [38] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pointClippingBehavior,
                    ["type"] = VkPointClippingBehavior ,
                    },
                [3] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                },
            ["name"] = VkPhysicalDevicePointClippingProperties,
            ["returnedOnly"] = false,
            },
        [39] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = aspectReferenceCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["len"] = aspectReferenceCount,
                    ["type"] = const VkInputAttachmentAspectReference * ,
                    ["name"] = pAspectReferences,
                    },
                },
            ["name"] = VkRenderPassInputAttachmentAspectCreateInfo,
            ["returnedOnly"] = false,
            },
        [40] = {
            ["fields"] = {
                [1] = {
                    ["name"] = subpass,
                    ["type"] = uint32_t ,
                    },
                [2] = {
                    ["name"] = inputAttachmentIndex,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = aspectMask,
                    ["type"] = VkImageAspectFlags ,
                    },
                },
            ["name"] = VkInputAttachmentAspectReference,
            ["returnedOnly"] = false,
            },
        [41] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags ,
                    },
                },
            ["name"] = VkImageViewUsageCreateInfo,
            ["returnedOnly"] = false,
            },
        [42] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = domainOrigin,
                    ["type"] = VkTessellationDomainOrigin ,
                    },
                },
            ["name"] = VkPipelineTessellationDomainOriginStateCreateInfo,
            ["returnedOnly"] = false,
            },
        [43] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = uint32_t ,
                    ["name"] = subpassCount,
                    ["optional"] = true,
                    },
                [4] = {
                    ["len"] = subpassCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pViewMasks,
                    },
                [5] = {
                    ["type"] = uint32_t ,
                    ["name"] = dependencyCount,
                    ["optional"] = true,
                    },
                [6] = {
                    ["len"] = dependencyCount,
                    ["type"] = const int32_t * ,
                    ["name"] = pViewOffsets,
                    },
                [7] = {
                    ["type"] = uint32_t ,
                    ["name"] = correlationMaskCount,
                    ["optional"] = true,
                    },
                [8] = {
                    ["len"] = correlationMaskCount,
                    ["type"] = const uint32_t * ,
                    ["name"] = pCorrelationMasks,
                    },
                },
            ["name"] = VkRenderPassMultiviewCreateInfo,
            ["returnedOnly"] = false,
            },
        [44] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
                    },
                [2] = {
                    ["noautovalidity"] = true,
                    ["type"] = void * ,
                    ["name"] = pNext,
                    },
                [3] = {
                    ["name"] = multiview,
                    ["type"] = VkBool32 ,
                    },
                [4] = {
                    ["name"] = multiviewGeometryShader,
                    ["type"] = VkBool32 ,
                    },
                [5] = {
                    ["name"] = multiviewTessellationShader,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceMultiviewFeatures,
            ["returnedOnly"] = false,
            },
        [45] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = maxMultiviewViewCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = maxMultiviewInstanceIndex,
                    ["type"] = uint32_t ,
                    },
                },
            ["name"] = VkPhysicalDeviceMultiviewProperties,
            ["returnedOnly"] = false,
            },
        [46] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = variablePointersStorageBuffer,
                    ["type"] = VkBool32 ,
                    },
                [4] = {
                    ["name"] = variablePointers,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceVariablePointersFeatures,
            ["returnedOnly"] = false,
            },
        [47] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = protectedMemory,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceProtectedMemoryFeatures,
            ["returnedOnly"] = false,
            },
        [48] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,
                    },
                [2] = {
                    ["name"] = protectedNoFault,
                    ["type"] = VkBool32 ,
                    },
                [3] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                },
            ["name"] = VkPhysicalDeviceProtectedMemoryProperties,
            ["returnedOnly"] = false,
            },
        [49] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = flags,
                    ["type"] = VkDeviceQueueCreateFlags ,
                    },
                [4] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["name"] = queueIndex,
                    ["type"] = uint32_t ,
                    },
                },
            ["name"] = VkDeviceQueueInfo2,
            ["returnedOnly"] = false,
            },
        [50] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = protectedSubmit,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkProtectedSubmitInfo,
            ["returnedOnly"] = false,
            },
        [51] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = format,
                    ["type"] = VkFormat ,
                    },
                [4] = {
                    ["name"] = ycbcrModel,
                    ["type"] = VkSamplerYcbcrModelConversion ,
                    },
                [5] = {
                    ["name"] = ycbcrRange,
                    ["type"] = VkSamplerYcbcrRange ,
                    },
                [6] = {
                    ["name"] = components,
                    ["type"] = VkComponentMapping ,
                    },
                [7] = {
                    ["name"] = xChromaOffset,
                    ["type"] = VkChromaLocation ,
                    },
                [8] = {
                    ["name"] = yChromaOffset,
                    ["type"] = VkChromaLocation ,
                    },
                [9] = {
                    ["name"] = chromaFilter,
                    ["type"] = VkFilter ,
                    },
                [10] = {
                    ["name"] = forceExplicitReconstruction,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkSamplerYcbcrConversionCreateInfo,
            ["returnedOnly"] = false,
            },
        [52] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = conversion,
                    ["type"] = VkSamplerYcbcrConversion ,
                    },
                },
            ["name"] = VkSamplerYcbcrConversionInfo,
            ["returnedOnly"] = false,
            },
        [53] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = planeAspect,
                    ["type"] = VkImageAspectFlagBits ,
                    },
                },
            ["name"] = VkBindImagePlaneMemoryInfo,
            ["returnedOnly"] = false,
            },
        [54] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = planeAspect,
                    ["type"] = VkImageAspectFlagBits ,
                    },
                },
            ["name"] = VkImagePlaneMemoryRequirementsInfo,
            ["returnedOnly"] = false,
            },
        [55] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
                    },
                [2] = {
                    ["noautovalidity"] = true,
                    ["type"] = void * ,
                    ["name"] = pNext,
                    },
                [3] = {
                    ["name"] = samplerYcbcrConversion,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceSamplerYcbcrConversionFeatures,
            ["returnedOnly"] = false,
            },
        [56] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
                    },
                [2] = {
                    ["name"] = combinedImageSamplerDescriptorCount,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["noautovalidity"] = true,
                    ["type"] = void * ,
                    ["name"] = pNext,
                    },
                },
            ["name"] = VkSamplerYcbcrConversionImageFormatProperties,
            ["returnedOnly"] = false,
            },
        [57] = {
            ["fields"] = {
                [1] = {
                    ["name"] = dstBinding,
                    ["type"] = uint32_t ,
                    },
                [2] = {
                    ["name"] = dstArrayElement,
                    ["type"] = uint32_t ,
                    },
                [3] = {
                    ["name"] = descriptorCount,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = descriptorType,
                    ["type"] = VkDescriptorType ,
                    },
                [5] = {
                    ["name"] = offset,
                    ["type"] = size_t ,
                    },
                [6] = {
                    ["name"] = stride,
                    ["type"] = size_t ,
                    },
                },
            ["name"] = VkDescriptorUpdateTemplateEntry,
            ["returnedOnly"] = false,
            },
        [58] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkDescriptorUpdateTemplateCreateFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = descriptorUpdateEntryCount,
                    ["type"] = uint32_t ,
                    },
                [5] = {
                    ["len"] = descriptorUpdateEntryCount,
                    ["type"] = const VkDescriptorUpdateTemplateEntry * ,
                    ["name"] = pDescriptorUpdateEntries,
                    },
                [6] = {
                    ["name"] = templateType,
                    ["type"] = VkDescriptorUpdateTemplateType ,
                    },
                [7] = {
                    ["type"] = VkDescriptorSetLayout ,
                    ["name"] = descriptorSetLayout,
                    ["optional"] = true,
                    },
                [8] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkPipelineBindPoint ,
                    ["name"] = pipelineBindPoint,
                    },
                [9] = {
                    ["noautovalidity"] = true,
                    ["type"] = VkPipelineLayout ,
                    ["name"] = pipelineLayout,
                    },
                [10] = {
                    ["noautovalidity"] = true,
                    ["type"] = uint32_t ,
                    ["name"] = set,
                    },
                },
            ["name"] = VkDescriptorUpdateTemplateCreateInfo,
            ["returnedOnly"] = false,
            },
        [59] = {
            ["fields"] = {
                [1] = {
                    ["name"] = externalMemoryFeatures,
                    ["type"] = VkExternalMemoryFeatureFlags ,
                    },
                [2] = {
                    ["type"] = VkExternalMemoryHandleTypeFlags ,
                    ["name"] = exportFromImportedHandleTypes,
                    ["optional"] = true,
                    },
                [3] = {
                    ["name"] = compatibleHandleTypes,
                    ["type"] = VkExternalMemoryHandleTypeFlags ,
                    },
                },
            ["name"] = VkExternalMemoryProperties,
            ["returnedOnly"] = false,
            },
        [60] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                    ["name"] = handleType,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkPhysicalDeviceExternalImageFormatInfo,
            ["returnedOnly"] = false,
            },
        [61] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
                    },
                [2] = {
                    ["name"] = externalMemoryProperties,
                    ["type"] = VkExternalMemoryProperties ,
                    },
                [3] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                },
            ["name"] = VkExternalImageFormatProperties,
            ["returnedOnly"] = false,
            },
        [62] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkBufferCreateFlags ,
                    ["name"] = flags,
                    ["optional"] = true,
                    },
                [4] = {
                    ["name"] = usage,
                    ["type"] = VkBufferUsageFlags ,
                    },
                [5] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalMemoryHandleTypeFlagBits ,
                    },
                },
            ["name"] = VkPhysicalDeviceExternalBufferInfo,
            ["returnedOnly"] = false,
            },
        [63] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = externalMemoryProperties,
                    ["type"] = VkExternalMemoryProperties ,
                    },
                },
            ["name"] = VkExternalBufferProperties,
            ["returnedOnly"] = false,
            },
        [64] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = deviceUUID,
                    ["type"] = uint8_t [ VK_UUID_SIZE] ,
                    },
                [4] = {
                    ["name"] = driverUUID,
                    ["type"] = uint8_t [ VK_UUID_SIZE] ,
                    },
                [5] = {
                    ["name"] = deviceLUIDValid,
                    ["type"] = VkBool32 ,
                    },
                [6] = {
                    ["name"] = deviceNodeMask,
                    ["type"] = uint32_t ,
                    },
                [7] = {
                    ["name"] = deviceLUID,
                    ["type"] = uint8_t [ VK_LUID_SIZE] ,
                    },
                },
            ["name"] = VkPhysicalDeviceIDProperties,
            ["returnedOnly"] = false,
            },
        [65] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = handleTypes,
                    ["type"] = VkExternalMemoryHandleTypeFlags ,
                    },
                },
            ["name"] = VkExternalMemoryImageCreateInfo,
            ["returnedOnly"] = false,
            },
        [66] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkExternalMemoryHandleTypeFlags ,
                    ["name"] = handleTypes,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExternalMemoryBufferCreateInfo,
            ["returnedOnly"] = false,
            },
        [67] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkExternalMemoryHandleTypeFlags ,
                    ["name"] = handleTypes,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExportMemoryAllocateInfo,
            ["returnedOnly"] = false,
            },
        [68] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalFenceHandleTypeFlagBits ,
                    },
                },
            ["name"] = VkPhysicalDeviceExternalFenceInfo,
            ["returnedOnly"] = false,
            },
        [69] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = exportFromImportedHandleTypes,
                    ["type"] = VkExternalFenceHandleTypeFlags ,
                    },
                [4] = {
                    ["name"] = compatibleHandleTypes,
                    ["type"] = VkExternalFenceHandleTypeFlags ,
                    },
                [5] = {
                    ["type"] = VkExternalFenceFeatureFlags ,
                    ["name"] = externalFenceFeatures,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExternalFenceProperties,
            ["returnedOnly"] = false,
            },
        [70] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkExternalFenceHandleTypeFlags ,
                    ["name"] = handleTypes,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExportFenceCreateInfo,
            ["returnedOnly"] = false,
            },
        [71] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                    ["name"] = handleTypes,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExportSemaphoreCreateInfo,
            ["returnedOnly"] = false,
            },
        [72] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = const void * ,
                    },
                [3] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalSemaphoreHandleTypeFlagBits ,
                    },
                },
            ["name"] = VkPhysicalDeviceExternalSemaphoreInfo,
            ["returnedOnly"] = false,
            },
        [73] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = exportFromImportedHandleTypes,
                    ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                    },
                [4] = {
                    ["name"] = compatibleHandleTypes,
                    ["type"] = VkExternalSemaphoreHandleTypeFlags ,
                    },
                [5] = {
                    ["type"] = VkExternalSemaphoreFeatureFlags ,
                    ["name"] = externalSemaphoreFeatures,
                    ["optional"] = true,
                    },
                },
            ["name"] = VkExternalSemaphoreProperties,
            ["returnedOnly"] = false,
            },
        [74] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = maxPerSetDescriptors,
                    ["type"] = uint32_t ,
                    },
                [4] = {
                    ["name"] = maxMemoryAllocationSize,
                    ["type"] = VkDeviceSize ,
                    },
                },
            ["name"] = VkPhysicalDeviceMaintenance3Properties,
            ["returnedOnly"] = false,
            },
        [75] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
                    },
                [2] = {
                    ["name"] = pNext,
                    ["type"] = void * ,
                    },
                [3] = {
                    ["name"] = supported,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkDescriptorSetLayoutSupport,
            ["returnedOnly"] = false,
            },
        [76] = {
            ["fields"] = {
                [1] = {
                    ["type"] = VkStructureType ,
                    ["name"] = sType,
                    ["values"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
                    },
                [2] = {
                    ["noautovalidity"] = true,
                    ["type"] = void * ,
                    ["name"] = pNext,
                    },
                [3] = {
                    ["name"] = shaderDrawParameters,
                    ["type"] = VkBool32 ,
                    },
                },
            ["name"] = VkPhysicalDeviceShaderDrawParametersFeatures,
            ["returnedOnly"] = false,
            },
        },
    ["enums"] = {
        },
    }
{
    ["43"] = {
        ["number"] = 43,
        ["commands"] = {
            [1] = vkGetShaderInfoAMD,
            },
        ["name"] = VK_AMD_shader_info,
        ["enums"] = {
            [1] = VkShaderInfoTypeAMD,
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkShaderResourceUsageAMD,
            [2] = VkShaderStatisticsInfoAMD,
            },
        ["type"] = device,
        },
    ["63"] = {
        ["number"] = 63,
        ["commands"] = {
            [1] = vkCreateViSurfaceNN,
            },
        ["name"] = VK_NN_vi_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NN,
        ["structs"] = {
            [1] = VkViSurfaceCreateInfoNN,
            },
        ["type"] = instance,
        },
    ["93"] = {
        ["number"] = 93,
        ["commands"] = {
            [1] = vkGetRefreshCycleDurationGOOGLE,
            [2] = vkGetPastPresentationTimingGOOGLE,
            },
        ["name"] = VK_GOOGLE_display_timing,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkRefreshCycleDurationGOOGLE,
            [2] = VkPastPresentationTimingGOOGLE,
            [3] = VkPresentTimesInfoGOOGLE,
            [4] = VkPresentTimeGOOGLE,
            },
        ["type"] = device,
        },
    ["133"] = {
        ["number"] = 133,
        ["commands"] = {
            },
        ["name"] = VK_AMD_gpu_shader_int16,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["137"] = {
        ["number"] = 137,
        ["commands"] = {
            },
        ["name"] = VK_AMD_mixed_attachment_samples,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["159"] = {
        ["number"] = 159,
        ["commands"] = {
            [1] = vkGetImageDrmFormatModifierPropertiesEXT,
            },
        ["name"] = VK_EXT_image_drm_format_modifier,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkDrmFormatModifierPropertiesListEXT,
            [2] = VkDrmFormatModifierPropertiesEXT,
            [3] = VkPhysicalDeviceImageDrmFormatModifierInfoEXT,
            [4] = VkImageDrmFormatModifierListCreateInfoEXT,
            [5] = VkImageDrmFormatModifierExplicitCreateInfoEXT,
            [6] = VkImageDrmFormatModifierPropertiesEXT,
            },
        ["type"] = device,
        },
    ["154"] = {
        ["number"] = 154,
        ["commands"] = {
            },
        ["name"] = VK_NV_fill_rectangle,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["238"] = {
        ["number"] = 238,
        ["commands"] = {
            },
        ["name"] = VK_EXT_memory_budget,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceMemoryBudgetPropertiesEXT,
            },
        ["type"] = device,
        },
    ["138"] = {
        ["number"] = 138,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_fragment_mask,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["13"] = {
        ["number"] = 13,
        ["commands"] = {
            },
        ["name"] = VK_NV_glsl_shader,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["130"] = {
        ["number"] = 130,
        ["commands"] = {
            [1] = vkGetAndroidHardwareBufferPropertiesANDROID,
            [2] = vkGetMemoryAndroidHardwareBufferANDROID,
            },
        ["name"] = VK_ANDROID_external_memory_android_hardware_buffer,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = ANDROID,
        ["structs"] = {
            [1] = VkAndroidHardwareBufferUsageANDROID,
            [2] = VkAndroidHardwareBufferPropertiesANDROID,
            [3] = VkAndroidHardwareBufferFormatPropertiesANDROID,
            [4] = VkImportAndroidHardwareBufferInfoANDROID,
            [5] = VkMemoryGetAndroidHardwareBufferInfoANDROID,
            [6] = VkExternalFormatANDROID,
            },
        ["type"] = device,
        },
    ["42"] = {
        ["number"] = 42,
        ["commands"] = {
            },
        ["name"] = VK_AMD_texture_gather_bias_lod,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkTextureLODGatherFormatPropertiesAMD,
            },
        ["type"] = device,
        },
    ["62"] = {
        ["number"] = 62,
        ["commands"] = {
            },
        ["name"] = VK_EXT_validation_flags,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkValidationFlagsEXT,
            },
        ["type"] = instance,
        },
    ["82"] = {
        ["number"] = 82,
        ["commands"] = {
            [1] = vkCmdBeginConditionalRenderingEXT,
            [2] = vkCmdEndConditionalRenderingEXT,
            },
        ["name"] = VK_EXT_conditional_rendering,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkConditionalRenderingFlagBitsEXT,
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkConditionalRenderingBeginInfoEXT,
            [2] = VkPhysicalDeviceConditionalRenderingFeaturesEXT,
            [3] = VkCommandBufferInheritanceConditionalRenderingInfoEXT,
            },
        ["type"] = device,
        },
    ["92"] = {
        ["number"] = 92,
        ["commands"] = {
            [1] = vkDisplayPowerControlEXT,
            [2] = vkRegisterDeviceEventEXT,
            [3] = vkRegisterDisplayEventEXT,
            [4] = vkGetSwapchainCounterEXT,
            },
        ["name"] = VK_EXT_display_control,
        ["enums"] = {
            [1] = VkDisplayPowerStateEXT,
            [2] = VkDeviceEventTypeEXT,
            [3] = VkDisplayEventTypeEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkDisplayPowerInfoEXT,
            [2] = VkDeviceEventInfoEXT,
            [3] = VkDisplayEventInfoEXT,
            [4] = VkSwapchainCounterCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["247"] = {
        ["number"] = 247,
        ["commands"] = {
            },
        ["name"] = VK_EXT_separate_stencil_usage,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkImageStencilUsageCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["222"] = {
        ["number"] = 222,
        ["commands"] = {
            },
        ["name"] = VK_EXT_scalar_block_layout,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceScalarBlockLayoutFeaturesEXT,
            },
        ["type"] = device,
        },
    ["122"] = {
        ["number"] = 122,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceDisplayProperties2KHR,
            [2] = vkGetPhysicalDeviceDisplayPlaneProperties2KHR,
            [3] = vkGetDisplayModeProperties2KHR,
            [4] = vkGetDisplayPlaneCapabilities2KHR,
            },
        ["name"] = VK_KHR_get_display_properties2,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkDisplayProperties2KHR,
            [2] = VkDisplayPlaneProperties2KHR,
            [3] = VkDisplayModeProperties2KHR,
            [4] = VkDisplayPlaneInfo2KHR,
            [5] = VkDisplayPlaneCapabilities2KHR,
            },
        ["type"] = instance,
        },
    ["129"] = {
        ["number"] = 129,
        ["commands"] = {
            [1] = vkSetDebugUtilsObjectNameEXT,
            [2] = vkSetDebugUtilsObjectTagEXT,
            [3] = vkQueueBeginDebugUtilsLabelEXT,
            [4] = vkQueueEndDebugUtilsLabelEXT,
            [5] = vkQueueInsertDebugUtilsLabelEXT,
            [6] = vkCmdBeginDebugUtilsLabelEXT,
            [7] = vkCmdEndDebugUtilsLabelEXT,
            [8] = vkCmdInsertDebugUtilsLabelEXT,
            [9] = vkCreateDebugUtilsMessengerEXT,
            [10] = vkDestroyDebugUtilsMessengerEXT,
            [11] = vkSubmitDebugUtilsMessageEXT,
            },
        ["name"] = VK_EXT_debug_utils,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkDebugUtilsObjectNameInfoEXT,
            [2] = VkDebugUtilsObjectTagInfoEXT,
            [3] = VkDebugUtilsLabelEXT,
            [4] = VkDebugUtilsMessengerCallbackDataEXT,
            [5] = VkDebugUtilsMessengerCreateInfoEXT,
            },
        ["type"] = instance,
        },
    ["240"] = {
        ["number"] = 240,
        ["commands"] = {
            },
        ["name"] = VK_KHR_surface_protected_capabilities,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkSurfaceProtectedCapabilitiesKHR,
            },
        ["type"] = instance,
        },
    ["148"] = {
        ["number"] = 148,
        ["commands"] = {
            },
        ["name"] = VK_KHR_image_format_list,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImageFormatListCreateInfoKHR,
            },
        ["type"] = device,
        },
    ["165"] = {
        ["number"] = 165,
        ["commands"] = {
            [1] = vkCmdBindShadingRateImageNV,
            [2] = vkCmdSetViewportShadingRatePaletteNV,
            [3] = vkCmdSetCoarseSampleOrderNV,
            },
        ["name"] = VK_NV_shading_rate_image,
        ["enums"] = {
            [1] = VkShadingRatePaletteEntryNV,
            [2] = VkCoarseSampleOrderTypeNV,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkShadingRatePaletteNV,
            [2] = VkPipelineViewportShadingRateImageStateCreateInfoNV,
            [3] = VkPhysicalDeviceShadingRateImageFeaturesNV,
            [4] = VkPhysicalDeviceShadingRateImagePropertiesNV,
            [5] = VkCoarseSampleLocationNV,
            [6] = VkCoarseSampleOrderCustomNV,
            [7] = VkPipelineViewportCoarseSampleOrderStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["248"] = {
        ["number"] = 248,
        ["commands"] = {
            },
        ["name"] = VK_EXT_validation_features,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = LUNARG,
        ["structs"] = {
            [1] = VkValidationFeaturesEXT,
            },
        ["type"] = instance,
        },
    ["12"] = {
        ["number"] = 12,
        ["commands"] = {
            [1] = vkCreateDebugReportCallbackEXT,
            [2] = vkDestroyDebugReportCallbackEXT,
            [3] = vkDebugReportMessageEXT,
            },
        ["name"] = VK_EXT_debug_report,
        ["enums"] = {
            [1] = VkDebugReportObjectTypeEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkDebugReportCallbackCreateInfoEXT,
            },
        ["type"] = instance,
        },
    ["22"] = {
        ["number"] = 22,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_explicit_vertex_parameter,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["95"] = {
        ["number"] = 95,
        ["commands"] = {
            },
        ["name"] = VK_NV_sample_mask_override_coverage,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["85"] = {
        ["number"] = 85,
        ["commands"] = {
            },
        ["name"] = VK_KHR_incremental_present,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPresentRegionsKHR,
            [2] = VkPresentRegionKHR,
            [3] = VkRectLayerKHR,
            },
        ["type"] = device,
        },
    ["75"] = {
        ["number"] = 75,
        ["commands"] = {
            [1] = vkGetMemoryFdKHR,
            [2] = vkGetMemoryFdPropertiesKHR,
            },
        ["name"] = VK_KHR_external_memory_fd,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportMemoryFdInfoKHR,
            [2] = VkMemoryFdPropertiesKHR,
            [3] = VkMemoryGetFdInfoKHR,
            },
        ["type"] = device,
        },
    ["65"] = {
        ["number"] = 65,
        ["commands"] = {
            },
        ["name"] = VK_EXT_shader_subgroup_ballot,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["55"] = {
        ["number"] = 55,
        ["commands"] = {
            },
        ["name"] = VK_IMG_format_pvrtc,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = IMG,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["213"] = {
        ["number"] = 213,
        ["commands"] = {
            },
        ["name"] = VK_EXT_pci_bus_info,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDevicePCIBusInfoPropertiesEXT,
            },
        ["type"] = device,
        },
    ["193"] = {
        ["number"] = 193,
        ["commands"] = {
            },
        ["name"] = VK_EXT_pipeline_creation_feedback,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkPipelineCreationFeedbackFlagBitsEXT,
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkPipelineCreationFeedbackCreateInfoEXT,
            [2] = VkPipelineCreationFeedbackEXT,
            },
        ["type"] = device,
        },
    ["116"] = {
        ["number"] = 116,
        ["commands"] = {
            [1] = vkImportFenceFdKHR,
            [2] = vkGetFenceFdKHR,
            },
        ["name"] = VK_KHR_external_fence_fd,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportFenceFdInfoKHR,
            [2] = VkFenceGetFdInfoKHR,
            },
        ["type"] = device,
        },
    ["1"] = {
        ["number"] = 1,
        ["commands"] = {
            [1] = vkDestroySurfaceKHR,
            [2] = vkGetPhysicalDeviceSurfaceSupportKHR,
            [3] = vkGetPhysicalDeviceSurfaceCapabilitiesKHR,
            [4] = vkGetPhysicalDeviceSurfaceFormatsKHR,
            [5] = vkGetPhysicalDeviceSurfacePresentModesKHR,
            },
        ["name"] = VK_KHR_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            },
        ["type"] = instance,
        },
    ["218"] = {
        ["number"] = 218,
        ["commands"] = {
            [1] = vkCreateMetalSurfaceEXT,
            },
        ["name"] = VK_EXT_metal_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkMetalSurfaceCreateInfoEXT,
            },
        ["type"] = instance,
        },
    ["139"] = {
        ["number"] = 139,
        ["commands"] = {
            },
        ["name"] = VK_EXT_inline_uniform_block,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceInlineUniformBlockFeaturesEXT,
            [2] = VkPhysicalDeviceInlineUniformBlockPropertiesEXT,
            [3] = VkWriteDescriptorSetInlineUniformBlockEXT,
            [4] = VkDescriptorPoolInlineUniformBlockCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["2"] = {
        ["number"] = 2,
        ["commands"] = {
            [1] = vkCreateSwapchainKHR,
            [2] = vkDestroySwapchainKHR,
            [3] = vkGetSwapchainImagesKHR,
            [4] = vkAcquireNextImageKHR,
            [5] = vkQueuePresentKHR,
            [6] = vkGetDeviceGroupPresentCapabilitiesKHR,
            [7] = vkGetDeviceGroupSurfacePresentModesKHR,
            [8] = vkGetPhysicalDevicePresentRectanglesKHR,
            [9] = vkAcquireNextImage2KHR,
            },
        ["name"] = VK_KHR_swapchain,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkDeviceGroupPresentModeFlagBitsKHR,
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImageSwapchainCreateInfoKHR,
            [2] = VkBindImageMemorySwapchainInfoKHR,
            [3] = VkAcquireNextImageInfoKHR,
            [4] = VkDeviceGroupPresentCapabilitiesKHR,
            [5] = VkDeviceGroupPresentInfoKHR,
            [6] = VkDeviceGroupSwapchainCreateInfoKHR,
            },
        ["type"] = device,
        },
    ["5"] = {
        ["number"] = 5,
        ["commands"] = {
            [1] = vkCreateXlibSurfaceKHR,
            [2] = vkGetPhysicalDeviceXlibPresentationSupportKHR,
            },
        ["name"] = VK_KHR_xlib_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkXlibSurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    ["4"] = {
        ["number"] = 4,
        ["commands"] = {
            [1] = vkCreateSharedSwapchainsKHR,
            },
        ["name"] = VK_KHR_display_swapchain,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkDisplayPresentInfoKHR,
            },
        ["type"] = device,
        },
    ["7"] = {
        ["number"] = 7,
        ["commands"] = {
            [1] = vkCreateWaylandSurfaceKHR,
            [2] = vkGetPhysicalDeviceWaylandPresentationSupportKHR,
            },
        ["name"] = VK_KHR_wayland_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkWaylandSurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    ["131"] = {
        ["number"] = 131,
        ["commands"] = {
            },
        ["name"] = VK_EXT_sampler_filter_minmax,
        ["enums"] = {
            [1] = VkSamplerReductionModeEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkSamplerReductionModeCreateInfoEXT,
            [2] = VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT,
            },
        ["type"] = device,
        },
    ["9"] = {
        ["number"] = 9,
        ["commands"] = {
            [1] = vkCreateAndroidSurfaceKHR,
            },
        ["name"] = VK_KHR_android_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkAndroidSurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    ["15"] = {
        ["number"] = 15,
        ["commands"] = {
            },
        ["name"] = VK_KHR_sampler_mirror_clamp_to_edge,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["110"] = {
        ["number"] = 110,
        ["commands"] = {
            [1] = vkCreateRenderPass2KHR,
            [2] = vkCmdBeginRenderPass2KHR,
            [3] = vkCmdNextSubpass2KHR,
            [4] = vkCmdEndRenderPass2KHR,
            },
        ["name"] = VK_KHR_create_renderpass2,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["198"] = {
        ["number"] = 198,
        ["commands"] = {
            },
        ["name"] = VK_KHR_shader_float_controls,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDeviceFloatControlsPropertiesKHR,
            },
        ["type"] = device,
        },
    ["127"] = {
        ["number"] = 127,
        ["commands"] = {
            },
        ["name"] = VK_EXT_queue_family_foreign,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["123"] = {
        ["number"] = 123,
        ["commands"] = {
            [1] = vkCreateIOSSurfaceMVK,
            },
        ["name"] = VK_MVK_ios_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = MVK,
        ["structs"] = {
            [1] = VkIOSSurfaceCreateInfoMVK,
            },
        ["type"] = instance,
        },
    ["126"] = {
        ["number"] = 126,
        ["commands"] = {
            },
        ["name"] = VK_EXT_external_memory_dma_buf,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["202"] = {
        ["number"] = 202,
        ["commands"] = {
            },
        ["name"] = VK_NV_compute_shader_derivatives,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceComputeShaderDerivativesFeaturesNV,
            },
        ["type"] = device,
        },
    ["102"] = {
        ["number"] = 102,
        ["commands"] = {
            },
        ["name"] = VK_EXT_conservative_rasterization,
        ["enums"] = {
            [1] = VkConservativeRasterizationModeEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceConservativeRasterizationPropertiesEXT,
            [2] = VkPipelineRasterizationConservativeStateCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["144"] = {
        ["number"] = 144,
        ["commands"] = {
            [1] = vkCmdSetSampleLocationsEXT,
            [2] = vkGetPhysicalDeviceMultisamplePropertiesEXT,
            },
        ["name"] = VK_EXT_sample_locations,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkSampleLocationEXT,
            [2] = VkSampleLocationsInfoEXT,
            [3] = VkAttachmentSampleLocationsEXT,
            [4] = VkSubpassSampleLocationsEXT,
            [5] = VkRenderPassSampleLocationsBeginInfoEXT,
            [6] = VkPipelineSampleLocationsStateCreateInfoEXT,
            [7] = VkPhysicalDeviceSampleLocationsPropertiesEXT,
            [8] = VkMultisamplePropertiesEXT,
            },
        ["type"] = device,
        },
    ["201"] = {
        ["number"] = 201,
        ["commands"] = {
            },
        ["name"] = VK_KHR_swapchain_mutable_format,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["14"] = {
        ["number"] = 14,
        ["commands"] = {
            },
        ["name"] = VK_EXT_depth_range_unrestricted,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["181"] = {
        ["number"] = 181,
        ["commands"] = {
            },
        ["name"] = VK_KHR_shader_atomic_int64,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDeviceShaderAtomicInt64FeaturesKHR,
            },
        ["type"] = device,
        },
    ["120"] = {
        ["number"] = 120,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceSurfaceCapabilities2KHR,
            [2] = vkGetPhysicalDeviceSurfaceFormats2KHR,
            },
        ["name"] = VK_KHR_get_surface_capabilities2,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDeviceSurfaceInfo2KHR,
            [2] = VkSurfaceCapabilities2KHR,
            [3] = VkSurfaceFormat2KHR,
            },
        ["type"] = instance,
        },
    ["192"] = {
        ["number"] = 192,
        ["commands"] = {
            },
        ["name"] = VK_GGP_frame_token,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GGP,
        ["structs"] = {
            [1] = VkPresentFrameTokenGGP,
            },
        ["type"] = device,
        },
    ["97"] = {
        ["number"] = 97,
        ["commands"] = {
            },
        ["name"] = VK_NV_viewport_array2,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["47"] = {
        ["number"] = 47,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_image_load_store_lod,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["37"] = {
        ["number"] = 37,
        ["commands"] = {
            },
        ["name"] = VK_AMD_gpu_shader_half_float,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["57"] = {
        ["number"] = 57,
        ["commands"] = {
            },
        ["name"] = VK_NV_external_memory,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkExternalMemoryImageCreateInfoNV,
            [2] = VkExportMemoryAllocateInfoNV,
            },
        ["type"] = device,
        },
    ["112"] = {
        ["number"] = 112,
        ["commands"] = {
            [1] = vkGetSwapchainStatusKHR,
            },
        ["name"] = VK_KHR_shared_presentable_image,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkSharedPresentSurfaceCapabilitiesKHR,
            },
        ["type"] = device,
        },
    ["212"] = {
        ["number"] = 212,
        ["commands"] = {
            },
        ["name"] = VK_KHR_vulkan_memory_model,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDeviceVulkanMemoryModelFeaturesKHR,
            },
        ["type"] = device,
        },
    ["115"] = {
        ["number"] = 115,
        ["commands"] = {
            [1] = vkImportFenceWin32HandleKHR,
            [2] = vkGetFenceWin32HandleKHR,
            },
        ["name"] = VK_KHR_external_fence_win32,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportFenceWin32HandleInfoKHR,
            [2] = VkExportFenceWin32HandleInfoKHR,
            [3] = VkFenceGetWin32HandleInfoKHR,
            },
        ["type"] = device,
        },
    ["215"] = {
        ["number"] = 215,
        ["commands"] = {
            [1] = vkCreateImagePipeSurfaceFUCHSIA,
            },
        ["name"] = VK_FUCHSIA_imagepipe_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = FUCHSIA,
        ["structs"] = {
            [1] = VkImagePipeSurfaceCreateInfoFUCHSIA,
            },
        ["type"] = instance,
        },
    ["170"] = {
        ["number"] = 170,
        ["commands"] = {
            [1] = vkCmdDrawIndirectCountKHR,
            [2] = vkCmdDrawIndexedIndirectCountKHR,
            },
        ["name"] = VK_KHR_draw_indirect_count,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["199"] = {
        ["number"] = 199,
        ["commands"] = {
            },
        ["name"] = VK_NV_shader_subgroup_partitioned,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["219"] = {
        ["number"] = 219,
        ["commands"] = {
            },
        ["name"] = VK_EXT_fragment_density_map,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceFragmentDensityMapFeaturesEXT,
            [2] = VkPhysicalDeviceFragmentDensityMapPropertiesEXT,
            [3] = VkRenderPassFragmentDensityMapCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["27"] = {
        ["number"] = 27,
        ["commands"] = {
            },
        ["name"] = VK_NV_dedicated_allocation,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkDedicatedAllocationImageCreateInfoNV,
            [2] = VkDedicatedAllocationBufferCreateInfoNV,
            [3] = VkDedicatedAllocationMemoryAllocateInfoNV,
            },
        ["type"] = device,
        },
    ["214"] = {
        ["number"] = 214,
        ["commands"] = {
            [1] = vkSetLocalDimmingAMD,
            },
        ["name"] = VK_AMD_display_native_hdr,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkDisplayNativeHdrSurfaceCapabilitiesAMD,
            [2] = VkSwapchainDisplayNativeHdrCreateInfoAMD,
            },
        ["type"] = device,
        },
    ["178"] = {
        ["number"] = 178,
        ["commands"] = {
            },
        ["name"] = VK_KHR_8bit_storage,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDevice8BitStorageFeaturesKHR,
            },
        ["type"] = device,
        },
    ["162"] = {
        ["number"] = 162,
        ["commands"] = {
            },
        ["name"] = VK_EXT_descriptor_indexing,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkDescriptorSetLayoutBindingFlagsCreateInfoEXT,
            [2] = VkPhysicalDeviceDescriptorIndexingFeaturesEXT,
            [3] = VkPhysicalDeviceDescriptorIndexingPropertiesEXT,
            [4] = VkDescriptorSetVariableDescriptorCountAllocateInfoEXT,
            [5] = VkDescriptorSetVariableDescriptorCountLayoutSupportEXT,
            },
        ["type"] = device,
        },
    ["96"] = {
        ["number"] = 96,
        ["commands"] = {
            },
        ["name"] = VK_NV_geometry_shader_passthrough,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["186"] = {
        ["number"] = 186,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_core_properties,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkPhysicalDeviceShaderCorePropertiesAMD,
            },
        ["type"] = device,
        },
    ["36"] = {
        ["number"] = 36,
        ["commands"] = {
            },
        ["name"] = VK_AMD_negative_viewport_height,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["103"] = {
        ["number"] = 103,
        ["commands"] = {
            },
        ["name"] = VK_EXT_depth_clip_enable,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceDepthClipEnableFeaturesEXT,
            [2] = VkPipelineRasterizationDepthClipStateCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["66"] = {
        ["number"] = 66,
        ["commands"] = {
            },
        ["name"] = VK_EXT_shader_subgroup_vote,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["106"] = {
        ["number"] = 106,
        ["commands"] = {
            [1] = vkSetHdrMetadataEXT,
            },
        ["name"] = VK_EXT_hdr_metadata,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkHdrMetadataEXT,
            [2] = VkXYColorEXT,
            },
        ["type"] = device,
        },
    ["206"] = {
        ["number"] = 206,
        ["commands"] = {
            [1] = vkCmdSetExclusiveScissorNV,
            },
        ["name"] = VK_NV_scissor_exclusive,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPipelineViewportExclusiveScissorStateCreateInfoNV,
            [2] = VkPhysicalDeviceExclusiveScissorFeaturesNV,
            },
        ["type"] = device,
        },
    ["180"] = {
        ["number"] = 180,
        ["commands"] = {
            [1] = vkCmdWriteBufferMarkerAMD,
            },
        ["name"] = VK_AMD_buffer_marker,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["124"] = {
        ["number"] = 124,
        ["commands"] = {
            [1] = vkCreateMacOSSurfaceMVK,
            },
        ["name"] = VK_MVK_macos_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = MVK,
        ["structs"] = {
            [1] = VkMacOSSurfaceCreateInfoMVK,
            },
        ["type"] = instance,
        },
    ["16"] = {
        ["number"] = 16,
        ["commands"] = {
            },
        ["name"] = VK_IMG_filter_cubic,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = IMG,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["26"] = {
        ["number"] = 26,
        ["commands"] = {
            },
        ["name"] = VK_AMD_gcn_shader,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["200"] = {
        ["number"] = 200,
        ["commands"] = {
            },
        ["name"] = VK_KHR_depth_stencil_resolve,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkResolveModeFlagBitsKHR,
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkSubpassDescriptionDepthStencilResolveKHR,
            [2] = VkPhysicalDeviceDepthStencilResolvePropertiesKHR,
            },
        ["type"] = device,
        },
    ["100"] = {
        ["number"] = 100,
        ["commands"] = {
            [1] = vkCmdSetDiscardRectangleEXT,
            },
        ["name"] = VK_EXT_discard_rectangles,
        ["enums"] = {
            [1] = VkDiscardRectangleModeEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceDiscardRectanglePropertiesEXT,
            [2] = VkPipelineDiscardRectangleStateCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["51"] = {
        ["number"] = 51,
        ["commands"] = {
            },
        ["name"] = VK_NV_corner_sampled_image,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceCornerSampledImageFeaturesNV,
            },
        ["type"] = device,
        },
    ["156"] = {
        ["number"] = 156,
        ["commands"] = {
            },
        ["name"] = VK_EXT_post_depth_coverage,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["91"] = {
        ["number"] = 91,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceSurfaceCapabilities2EXT,
            },
        ["name"] = VK_EXT_display_surface_counter,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkSurfaceCounterFlagBitsEXT,
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkSurfaceCapabilities2EXT,
            },
        ["type"] = instance,
        },
    ["81"] = {
        ["number"] = 81,
        ["commands"] = {
            [1] = vkCmdPushDescriptorSetKHR,
            [2] = vkCmdPushDescriptorSetWithTemplateKHR,
            },
        ["name"] = VK_KHR_push_descriptor,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDevicePushDescriptorPropertiesKHR,
            },
        ["type"] = device,
        },
    ["153"] = {
        ["number"] = 153,
        ["commands"] = {
            },
        ["name"] = VK_NV_framebuffer_mixed_samples,
        ["enums"] = {
            [1] = VkCoverageModulationModeNV,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPipelineCoverageModulationStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["29"] = {
        ["number"] = 29,
        ["commands"] = {
            [1] = vkCmdBindTransformFeedbackBuffersEXT,
            [2] = vkCmdBeginTransformFeedbackEXT,
            [3] = vkCmdEndTransformFeedbackEXT,
            [4] = vkCmdBeginQueryIndexedEXT,
            [5] = vkCmdEndQueryIndexedEXT,
            [6] = vkCmdDrawIndirectByteCountEXT,
            },
        ["name"] = VK_EXT_transform_feedback,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceTransformFeedbackFeaturesEXT,
            [2] = VkPhysicalDeviceTransformFeedbackPropertiesEXT,
            [3] = VkPipelineRasterizationStateStreamCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["99"] = {
        ["number"] = 99,
        ["commands"] = {
            },
        ["name"] = VK_NV_viewport_swizzle,
        ["enums"] = {
            [1] = VkViewportCoordinateSwizzleNV,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkViewportSwizzleNV,
            [2] = VkPipelineViewportSwizzleStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["89"] = {
        ["number"] = 89,
        ["commands"] = {
            [1] = vkReleaseDisplayEXT,
            },
        ["name"] = VK_EXT_direct_mode_display,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = instance,
        },
    ["79"] = {
        ["number"] = 79,
        ["commands"] = {
            [1] = vkImportSemaphoreWin32HandleKHR,
            [2] = vkGetSemaphoreWin32HandleKHR,
            },
        ["name"] = VK_KHR_external_semaphore_win32,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportSemaphoreWin32HandleInfoKHR,
            [2] = VkExportSemaphoreWin32HandleInfoKHR,
            [3] = VkD3D12FenceSubmitInfoKHR,
            [4] = VkSemaphoreGetWin32HandleInfoKHR,
            },
        ["type"] = device,
        },
    ["262"] = {
        ["number"] = 262,
        ["commands"] = {
            [1] = vkResetQueryPoolEXT,
            },
        ["name"] = VK_EXT_host_query_reset,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceHostQueryResetFeaturesEXT,
            },
        ["type"] = device,
        },
    ["150"] = {
        ["number"] = 150,
        ["commands"] = {
            },
        ["name"] = VK_NV_fragment_coverage_to_color,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPipelineCoverageToColorStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["257"] = {
        ["number"] = 257,
        ["commands"] = {
            [1] = vkCreateHeadlessSurfaceEXT,
            },
        ["name"] = VK_EXT_headless_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkHeadlessSurfaceCreateInfoEXT,
            },
        ["type"] = instance,
        },
    ["256"] = {
        ["number"] = 256,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceSurfacePresentModes2EXT,
            [2] = vkAcquireFullScreenExclusiveModeEXT,
            [3] = vkReleaseFullScreenExclusiveModeEXT,
            [4] = vkGetDeviceGroupSurfacePresentModes2EXT,
            },
        ["name"] = VK_EXT_full_screen_exclusive,
        ["enums"] = {
            [1] = VkFullScreenExclusiveEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkSurfaceFullScreenExclusiveInfoEXT,
            [2] = VkSurfaceCapabilitiesFullScreenExclusiveEXT,
            [3] = VkSurfaceFullScreenExclusiveWin32InfoEXT,
            },
        ["type"] = device,
        },
    ["19"] = {
        ["number"] = 19,
        ["commands"] = {
            },
        ["name"] = VK_AMD_rasterization_order,
        ["enums"] = {
            [1] = VkRasterizationOrderAMD,
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkPipelineRasterizationStateRasterizationOrderAMD,
            },
        ["type"] = device,
        },
    ["179"] = {
        ["number"] = 179,
        ["commands"] = {
            [1] = vkGetMemoryHostPointerPropertiesEXT,
            },
        ["name"] = VK_EXT_external_memory_host,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkImportMemoryHostPointerInfoEXT,
            [2] = VkMemoryHostPointerPropertiesEXT,
            [3] = VkPhysicalDeviceExternalMemoryHostPropertiesEXT,
            },
        ["type"] = device,
        },
    ["250"] = {
        ["number"] = 250,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceCooperativeMatrixPropertiesNV,
            },
        ["name"] = VK_NV_cooperative_matrix,
        ["enums"] = {
            [1] = VkScopeNV,
            [2] = VkComponentTypeNV,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkCooperativeMatrixPropertiesNV,
            [2] = VkPhysicalDeviceCooperativeMatrixFeaturesNV,
            [3] = VkPhysicalDeviceCooperativeMatrixPropertiesNV,
            },
        ["type"] = device,
        },
    ["253"] = {
        ["number"] = 253,
        ["commands"] = {
            },
        ["name"] = VK_EXT_ycbcr_image_arrays,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceYcbcrImageArraysFeaturesEXT,
            },
        ["type"] = device,
        },
    ["245"] = {
        ["number"] = 245,
        ["commands"] = {
            [1] = vkGetBufferDeviceAddressEXT,
            },
        ["name"] = VK_EXT_buffer_device_address,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceBufferDeviceAddressFeaturesEXT,
            [2] = VkBufferDeviceAddressInfoEXT,
            [3] = VkBufferDeviceAddressCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["175"] = {
        ["number"] = 175,
        ["commands"] = {
            },
        ["name"] = VK_EXT_global_priority,
        ["enums"] = {
            [1] = VkQueueGlobalPriorityEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkDeviceQueueGlobalPriorityCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["171"] = {
        ["number"] = 171,
        ["commands"] = {
            },
        ["name"] = VK_EXT_filter_cubic,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = QCOM,
        ["structs"] = {
            [1] = VkPhysicalDeviceImageViewImageFormatInfoEXT,
            [2] = VkFilterCubicImageViewImageFormatPropertiesEXT,
            },
        ["type"] = device,
        },
    ["74"] = {
        ["number"] = 74,
        ["commands"] = {
            [1] = vkGetMemoryWin32HandleKHR,
            [2] = vkGetMemoryWin32HandlePropertiesKHR,
            },
        ["name"] = VK_KHR_external_memory_win32,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportMemoryWin32HandleInfoKHR,
            [2] = VkExportMemoryWin32HandleInfoKHR,
            [3] = VkMemoryWin32HandlePropertiesKHR,
            [4] = VkMemoryGetWin32HandleInfoKHR,
            },
        ["type"] = device,
        },
    ["31"] = {
        ["number"] = 31,
        ["commands"] = {
            [1] = vkGetImageViewHandleNVX,
            },
        ["name"] = VK_NVX_image_view_handle,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NVX,
        ["structs"] = {
            [1] = VkImageViewHandleInfoNVX,
            },
        ["type"] = device,
        },
    ["21"] = {
        ["number"] = 21,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_trinary_minmax,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["239"] = {
        ["number"] = 239,
        ["commands"] = {
            },
        ["name"] = VK_EXT_memory_priority,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkPhysicalDeviceMemoryPriorityFeaturesEXT,
            [2] = VkMemoryPriorityAllocateInfoEXT,
            },
        ["type"] = device,
        },
    ["225"] = {
        ["number"] = 225,
        ["commands"] = {
            },
        ["name"] = VK_GOOGLE_decorate_string,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["87"] = {
        ["number"] = 87,
        ["commands"] = {
            [1] = vkCmdProcessCommandsNVX,
            [2] = vkCmdReserveSpaceForCommandsNVX,
            [3] = vkCreateIndirectCommandsLayoutNVX,
            [4] = vkDestroyIndirectCommandsLayoutNVX,
            [5] = vkCreateObjectTableNVX,
            [6] = vkDestroyObjectTableNVX,
            [7] = vkRegisterObjectsNVX,
            [8] = vkUnregisterObjectsNVX,
            [9] = vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX,
            },
        ["name"] = VK_NVX_device_generated_commands,
        ["enums"] = {
            [1] = VkIndirectCommandsTokenTypeNVX,
            [2] = VkObjectEntryTypeNVX,
            },
        ["bitmasks"] = {
            [1] = VkIndirectCommandsLayoutUsageFlagBitsNVX,
            [2] = VkObjectEntryUsageFlagBitsNVX,
            },
        ["author"] = NVX,
        ["structs"] = {
            [1] = VkDeviceGeneratedCommandsFeaturesNVX,
            [2] = VkDeviceGeneratedCommandsLimitsNVX,
            [3] = VkIndirectCommandsTokenNVX,
            [4] = VkIndirectCommandsLayoutTokenNVX,
            [5] = VkIndirectCommandsLayoutCreateInfoNVX,
            [6] = VkCmdProcessCommandsInfoNVX,
            [7] = VkCmdReserveSpaceForCommandsInfoNVX,
            [8] = VkObjectTableCreateInfoNVX,
            [9] = VkObjectTableEntryNVX,
            [10] = VkObjectTablePipelineEntryNVX,
            [11] = VkObjectTableDescriptorSetEntryNVX,
            [12] = VkObjectTableVertexBufferEntryNVX,
            [13] = VkObjectTableIndexBufferEntryNVX,
            [14] = VkObjectTablePushConstantEntryNVX,
            },
        ["type"] = device,
        },
    ["224"] = {
        ["number"] = 224,
        ["commands"] = {
            },
        ["name"] = VK_GOOGLE_hlsl_functionality1,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["166"] = {
        ["number"] = 166,
        ["commands"] = {
            [1] = vkCreateAccelerationStructureNV,
            [2] = vkDestroyAccelerationStructureNV,
            [3] = vkGetAccelerationStructureMemoryRequirementsNV,
            [4] = vkBindAccelerationStructureMemoryNV,
            [5] = vkCmdBuildAccelerationStructureNV,
            [6] = vkCmdCopyAccelerationStructureNV,
            [7] = vkCmdTraceRaysNV,
            [8] = vkCreateRayTracingPipelinesNV,
            [9] = vkGetRayTracingShaderGroupHandlesNV,
            [10] = vkGetAccelerationStructureHandleNV,
            [11] = vkCmdWriteAccelerationStructuresPropertiesNV,
            [12] = vkCompileDeferredNV,
            },
        ["name"] = VK_NV_ray_tracing,
        ["enums"] = {
            [1] = VkRayTracingShaderGroupTypeNV,
            [2] = VkCopyAccelerationStructureModeNV,
            [3] = VkGeometryTypeNV,
            [4] = VkAccelerationStructureMemoryRequirementsTypeNV,
            },
        ["bitmasks"] = {
            [1] = VkGeometryFlagBitsNV,
            [2] = VkGeometryInstanceFlagBitsNV,
            [3] = VkBuildAccelerationStructureFlagBitsNV,
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkRayTracingShaderGroupCreateInfoNV,
            [2] = VkRayTracingPipelineCreateInfoNV,
            [3] = VkGeometryTrianglesNV,
            [4] = VkGeometryAABBNV,
            [5] = VkGeometryDataNV,
            [6] = VkGeometryNV,
            [7] = VkAccelerationStructureInfoNV,
            [8] = VkAccelerationStructureCreateInfoNV,
            [9] = VkBindAccelerationStructureMemoryInfoNV,
            [10] = VkWriteDescriptorSetAccelerationStructureNV,
            [11] = VkAccelerationStructureMemoryRequirementsInfoNV,
            [12] = VkPhysicalDeviceRayTracingPropertiesNV,
            },
        ["type"] = device,
        },
    ["50"] = {
        ["number"] = 50,
        ["commands"] = {
            [1] = vkCreateStreamDescriptorSurfaceGGP,
            },
        ["name"] = VK_GGP_stream_descriptor_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GGP,
        ["structs"] = {
            [1] = VkStreamDescriptorSurfaceCreateInfoGGP,
            },
        ["type"] = instance,
        },
    ["191"] = {
        ["number"] = 191,
        ["commands"] = {
            },
        ["name"] = VK_EXT_vertex_attribute_divisor,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT,
            [2] = VkVertexInputBindingDivisorDescriptionEXT,
            [3] = VkPipelineVertexInputDivisorStateCreateInfoEXT,
            [4] = VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT,
            },
        ["type"] = device,
        },
    ["203"] = {
        ["number"] = 203,
        ["commands"] = {
            [1] = vkCmdDrawMeshTasksNV,
            [2] = vkCmdDrawMeshTasksIndirectNV,
            [3] = vkCmdDrawMeshTasksIndirectCountNV,
            },
        ["name"] = VK_NV_mesh_shader,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceMeshShaderFeaturesNV,
            [2] = VkPhysicalDeviceMeshShaderPropertiesNV,
            [3] = VkDrawMeshTasksIndirectCommandNV,
            },
        ["type"] = device,
        },
    ["80"] = {
        ["number"] = 80,
        ["commands"] = {
            [1] = vkImportSemaphoreFdKHR,
            [2] = vkGetSemaphoreFdKHR,
            },
        ["name"] = VK_KHR_external_semaphore_fd,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkImportSemaphoreFdInfoKHR,
            [2] = VkSemaphoreGetFdInfoKHR,
            },
        ["type"] = device,
        },
    ["90"] = {
        ["number"] = 90,
        ["commands"] = {
            [1] = vkAcquireXlibDisplayEXT,
            [2] = vkGetRandROutputDisplayEXT,
            },
        ["name"] = VK_EXT_acquire_xlib_display,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = instance,
        },
    ["207"] = {
        ["number"] = 207,
        ["commands"] = {
            [1] = vkCmdSetCheckpointNV,
            [2] = vkGetQueueCheckpointDataNV,
            },
        ["name"] = VK_NV_device_diagnostic_checkpoints,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NVIDIA,
        ["structs"] = {
            [1] = VkQueueFamilyCheckpointPropertiesNV,
            [2] = VkCheckpointDataNV,
            },
        ["type"] = device,
        },
    ["58"] = {
        ["number"] = 58,
        ["commands"] = {
            [1] = vkGetMemoryWin32HandleNV,
            },
        ["name"] = VK_NV_external_memory_win32,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkImportMemoryWin32HandleInfoNV,
            [2] = VkExportMemoryWin32HandleInfoNV,
            },
        ["type"] = device,
        },
    ["161"] = {
        ["number"] = 161,
        ["commands"] = {
            [1] = vkCreateValidationCacheEXT,
            [2] = vkDestroyValidationCacheEXT,
            [3] = vkMergeValidationCachesEXT,
            [4] = vkGetValidationCacheDataEXT,
            },
        ["name"] = VK_EXT_validation_cache,
        ["enums"] = {
            [1] = VkValidationCacheHeaderVersionEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            [1] = VkValidationCacheCreateInfoEXT,
            [2] = VkShaderModuleValidationCacheCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["38"] = {
        ["number"] = 38,
        ["commands"] = {
            },
        ["name"] = VK_AMD_shader_ballot,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["88"] = {
        ["number"] = 88,
        ["commands"] = {
            [1] = vkCmdSetViewportWScalingNV,
            },
        ["name"] = VK_NV_clip_space_w_scaling,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkViewportWScalingNV,
            [2] = VkPipelineViewportWScalingStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["98"] = {
        ["number"] = 98,
        ["commands"] = {
            },
        ["name"] = VK_NVX_multiview_per_view_attributes,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NVX,
        ["structs"] = {
            [1] = VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX,
            },
        ["type"] = device,
        },
    ["68"] = {
        ["number"] = 68,
        ["commands"] = {
            },
        ["name"] = VK_EXT_astc_decode_mode,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = ARM,
        ["structs"] = {
            [1] = VkImageViewASTCDecodeModeEXT,
            [2] = VkPhysicalDeviceASTCDecodeFeaturesEXT,
            },
        ["type"] = device,
        },
    ["205"] = {
        ["number"] = 205,
        ["commands"] = {
            },
        ["name"] = VK_NV_shader_image_footprint,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceShaderImageFootprintFeaturesNV,
            },
        ["type"] = device,
        },
    ["204"] = {
        ["number"] = 204,
        ["commands"] = {
            },
        ["name"] = VK_NV_fragment_shader_barycentric,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV,
            },
        ["type"] = device,
        },
    ["149"] = {
        ["number"] = 149,
        ["commands"] = {
            },
        ["name"] = VK_EXT_blend_operation_advanced,
        ["enums"] = {
            [1] = VkBlendOverlapEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT,
            [2] = VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT,
            [3] = VkPipelineColorBlendAdvancedStateCreateInfoEXT,
            },
        ["type"] = device,
        },
    ["105"] = {
        ["number"] = 105,
        ["commands"] = {
            },
        ["name"] = VK_EXT_swapchain_colorspace,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = GOOGLE,
        ["structs"] = {
            },
        ["type"] = instance,
        },
    ["76"] = {
        ["number"] = 76,
        ["commands"] = {
            },
        ["name"] = VK_KHR_win32_keyed_mutex,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkWin32KeyedMutexAcquireReleaseInfoKHR,
            },
        ["type"] = device,
        },
    ["56"] = {
        ["number"] = 56,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceExternalImageFormatPropertiesNV,
            },
        ["name"] = VK_NV_external_memory_capabilities,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkExternalMemoryHandleTypeFlagBitsNV,
            [2] = VkExternalMemoryFeatureFlagBitsNV,
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkExternalImageFormatPropertiesNV,
            },
        ["type"] = instance,
        },
    ["197"] = {
        ["number"] = 197,
        ["commands"] = {
            },
        ["name"] = VK_KHR_driver_properties,
        ["enums"] = {
            [1] = VkDriverIdKHR,
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkConformanceVersionKHR,
            [2] = VkPhysicalDeviceDriverPropertiesKHR,
            },
        ["type"] = device,
        },
    ["190"] = {
        ["number"] = 190,
        ["commands"] = {
            },
        ["name"] = VK_AMD_memory_overallocation_behavior,
        ["enums"] = {
            [1] = VkMemoryOverallocationBehaviorAMD,
            },
        ["bitmasks"] = {
            },
        ["author"] = AMD,
        ["structs"] = {
            [1] = VkDeviceMemoryOverallocationCreateInfoAMD,
            },
        ["type"] = device,
        },
    ["167"] = {
        ["number"] = 167,
        ["commands"] = {
            },
        ["name"] = VK_NV_representative_fragment_test,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            [1] = VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV,
            [2] = VkPipelineRepresentativeFragmentTestStateCreateInfoNV,
            },
        ["type"] = device,
        },
    ["185"] = {
        ["number"] = 185,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceCalibrateableTimeDomainsEXT,
            [2] = vkGetCalibratedTimestampsEXT,
            },
        ["name"] = VK_EXT_calibrated_timestamps,
        ["enums"] = {
            [1] = VkTimeDomainEXT,
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            [1] = VkCalibratedTimestampInfoEXT,
            },
        ["type"] = device,
        },
    ["141"] = {
        ["number"] = 141,
        ["commands"] = {
            },
        ["name"] = VK_EXT_shader_stencil_export,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = EXT,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["163"] = {
        ["number"] = 163,
        ["commands"] = {
            },
        ["name"] = VK_EXT_shader_viewport_index_layer,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NV,
        ["structs"] = {
            },
        ["type"] = device,
        },
    ["3"] = {
        ["number"] = 3,
        ["commands"] = {
            [1] = vkGetPhysicalDeviceDisplayPropertiesKHR,
            [2] = vkGetPhysicalDeviceDisplayPlanePropertiesKHR,
            [3] = vkGetDisplayPlaneSupportedDisplaysKHR,
            [4] = vkGetDisplayModePropertiesKHR,
            [5] = vkCreateDisplayModeKHR,
            [6] = vkGetDisplayPlaneCapabilitiesKHR,
            [7] = vkCreateDisplayPlaneSurfaceKHR,
            },
        ["name"] = VK_KHR_display,
        ["enums"] = {
            },
        ["bitmasks"] = {
            [1] = VkDisplayPlaneAlphaFlagBitsKHR,
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkDisplayPropertiesKHR,
            [2] = VkDisplayModeParametersKHR,
            [3] = VkDisplayModePropertiesKHR,
            [4] = VkDisplayModeCreateInfoKHR,
            [5] = VkDisplayPlaneCapabilitiesKHR,
            [6] = VkDisplayPlanePropertiesKHR,
            [7] = VkDisplaySurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    ["6"] = {
        ["number"] = 6,
        ["commands"] = {
            [1] = vkCreateXcbSurfaceKHR,
            [2] = vkGetPhysicalDeviceXcbPresentationSupportKHR,
            },
        ["name"] = VK_KHR_xcb_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkXcbSurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    ["83"] = {
        ["number"] = 83,
        ["commands"] = {
            },
        ["name"] = VK_KHR_shader_float16_int8,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkPhysicalDeviceFloat16Int8FeaturesKHR,
            },
        ["type"] = device,
        },
    ["241"] = {
        ["number"] = 241,
        ["commands"] = {
            },
        ["name"] = VK_NV_dedicated_allocation_image_aliasing,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = NVIDIA,
        ["structs"] = {
            [1] = VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV,
            },
        ["type"] = device,
        },
    ["10"] = {
        ["number"] = 10,
        ["commands"] = {
            [1] = vkCreateWin32SurfaceKHR,
            [2] = vkGetPhysicalDeviceWin32PresentationSupportKHR,
            },
        ["name"] = VK_KHR_win32_surface,
        ["enums"] = {
            },
        ["bitmasks"] = {
            },
        ["author"] = KHR,
        ["structs"] = {
            [1] = VkWin32SurfaceCreateInfoKHR,
            },
        ["type"] = instance,
        },
    }
