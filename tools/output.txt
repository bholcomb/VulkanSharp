vk={
    ["commands"] = {
        ["vkCmdCopyQueryPoolResults"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyQueryPoolResults,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [6] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = VkDeviceSize,
                    },
                [8] = {
                    ["name"] = flags,
                    ["type"] = VkQueryResultFlags,
                    },
                },
            },
        ["vkGetImageSparseMemoryRequirements2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetImageSparseMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImageSparseMemoryRequirementsInfo2,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pSparseMemoryRequirementCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSparseImageMemoryRequirements2,
                    ["name"] = pSparseMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetLineWidth"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetLineWidth,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = lineWidth,
                    ["type"] = float,
                    },
                },
            },
        ["vkCreateCommandPool"] = {
            ["returnType"] = VkResult,
            ["group"] = Command pool commands,
            ["name"] = vkCreateCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkCommandPoolCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkCommandPool,
                    ["name"] = pCommandPool,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyFramebuffer"] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkDestroyFramebuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = framebuffer,
                    ["type"] = VkFramebuffer,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceMemoryCommitment"] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkGetDeviceMemoryCommitment,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [3] = {
                    ["type"] = VkDeviceSize,
                    ["name"] = pCommittedMemoryInBytes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateSemaphore"] = {
            ["returnType"] = VkResult,
            ["group"] = Queue semaphore commands,
            ["name"] = vkCreateSemaphore,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSemaphoreCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSemaphore,
                    ["name"] = pSemaphore,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyDebugReportCallbackEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_report,
            ["name"] = vkDestroyDebugReportCallbackEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["name"] = callback,
                    ["type"] = VkDebugReportCallbackEXT,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBindVertexBuffers"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindVertexBuffers,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstBinding,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = bindingCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkBuffer,
                    ["name"] = pBuffers,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkDeviceSize,
                    ["name"] = pOffsets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBeginRenderPass"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBeginRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkRenderPassBeginInfo,
                    ["name"] = pRenderPassBegin,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["name"] = contents,
                    ["type"] = VkSubpassContents,
                    },
                },
            },
        ["vkCmdDebugMarkerEndEXT"] = {
            ["returnType"] = void,
            ["name"] = vkCmdDebugMarkerEndEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                },
            },
        ["vkDestroyInstance"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkDestroyInstance,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateXlibSurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_xlib_surface,
            ["name"] = vkCreateXlibSurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkXlibSurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceGroupSurfacePresentModes2EXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_full_screen_exclusive,
            ["name"] = vkGetDeviceGroupSurfacePresentModes2EXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceSurfaceInfo2KHR,
                    ["name"] = pSurfaceInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDeviceGroupPresentModeFlagsKHR,
                    ["name"] = pModes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkMergePipelineCaches"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkMergePipelineCaches,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = dstCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["name"] = srcCacheCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkPipelineCache,
                    ["name"] = pSrcCaches,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceImageFormatProperties"] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceImageFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["name"] = type,
                    ["type"] = VkImageType,
                    },
                [4] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling,
                    },
                [5] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags,
                    },
                [6] = {
                    ["name"] = flags,
                    ["type"] = VkImageCreateFlags,
                    },
                [7] = {
                    ["type"] = VkImageFormatProperties,
                    ["name"] = pImageFormatProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBeginDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkCmdBeginDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsLabelEXT,
                    ["name"] = pLabelInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDispatchIndirect"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDispatchIndirect,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                },
            },
        ["vkCmdDispatchBase"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkCmdDispatchBase,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = baseGroupX,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = baseGroupY,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = baseGroupZ,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = groupCountX,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["name"] = groupCountY,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["name"] = groupCountZ,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDisplayPowerControlEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_display_control,
            ["name"] = vkDisplayPowerControlEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkDisplayPowerInfoEXT,
                    ["name"] = pDisplayPowerInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceExternalImageFormatPropertiesNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_external_memory_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalImageFormatPropertiesNV,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["name"] = type,
                    ["type"] = VkImageType,
                    },
                [4] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling,
                    },
                [5] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags,
                    },
                [6] = {
                    ["name"] = flags,
                    ["type"] = VkImageCreateFlags,
                    },
                [7] = {
                    ["name"] = externalHandleType,
                    ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                    },
                [8] = {
                    ["type"] = VkExternalImageFormatPropertiesNV,
                    ["name"] = pExternalImageFormatProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkFreeCommandBuffers"] = {
            ["returnType"] = void,
            ["group"] = Command buffer commands,
            ["name"] = vkFreeCommandBuffers,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = commandPool,
                    ["type"] = VkCommandPool,
                    },
                [3] = {
                    ["name"] = commandBufferCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkCommandBuffer,
                    ["name"] = pCommandBuffers,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateSharedSwapchainsKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display_swapchain,
            ["name"] = vkCreateSharedSwapchainsKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchainCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSwapchainCreateInfoKHR,
                    ["name"] = pCreateInfos,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["type"] = VkSwapchainKHR,
                    ["name"] = pSwapchains,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetImageMemoryRequirements"] = {
            ["returnType"] = void,
            ["group"] = Memory management API commands,
            ["name"] = vkGetImageMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["type"] = VkMemoryRequirements,
                    ["name"] = pMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceImageFormatProperties2"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceImageFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceImageFormatInfo2,
                    ["name"] = pImageFormatInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkImageFormatProperties2,
                    ["name"] = pImageFormatProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDebugReportMessageEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_report,
            ["name"] = vkDebugReportMessageEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["name"] = flags,
                    ["type"] = VkDebugReportFlagsEXT,
                    },
                [3] = {
                    ["name"] = objectType,
                    ["type"] = VkDebugReportObjectTypeEXT,
                    },
                [4] = {
                    ["name"] = object,
                    ["type"] = uint64_t,
                    },
                [5] = {
                    ["name"] = location,
                    ["type"] = size_t,
                    },
                [6] = {
                    ["name"] = messageCode,
                    ["type"] = int32_t,
                    },
                [7] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pLayerPrefix,
                    ["pointer"] = true,
                    },
                [8] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pMessage,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceMultisamplePropertiesEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_sample_locations,
            ["name"] = vkGetPhysicalDeviceMultisamplePropertiesEXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = samples,
                    ["type"] = VkSampleCountFlags,
                    },
                [3] = {
                    ["type"] = VkMultisamplePropertiesEXT,
                    ["name"] = pMultisampleProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkMapMemory"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkMapMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = size,
                    ["type"] = VkDeviceSize,
                    },
                [5] = {
                    ["name"] = flags,
                    ["type"] = VkMemoryMapFlags,
                    },
                [6] = {
                    ["type"] = void,
                    ["name"] = ppData,
                    ["doublePointer"] = true,
                    },
                },
            },
        ["vkCmdSetStencilWriteMask"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilWriteMask,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags,
                    },
                [3] = {
                    ["name"] = writeMask,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDestroyDescriptorUpdateTemplate"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkDestroyDescriptorUpdateTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorUpdateTemplate,
                    ["type"] = VkDescriptorUpdateTemplate,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDescriptorSetLayoutSupport"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_maintenance3,
            ["name"] = vkGetDescriptorSetLayoutSupport,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorSetLayoutCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDescriptorSetLayoutSupport,
                    ["name"] = pSupport,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetBufferMemoryRequirements2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetBufferMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkBufferMemoryRequirementsInfo2,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkMemoryRequirements2,
                    ["name"] = pMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyPipeline"] = {
            ["returnType"] = void,
            ["group"] = Pipeline commands,
            ["name"] = vkDestroyPipeline,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPipelineCacheData"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkGetPipelineCacheData,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["type"] = size_t,
                    ["name"] = pDataSize,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateStreamDescriptorSurfaceGGP"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_GGP_stream_descriptor_surface,
            ["name"] = vkCreateStreamDescriptorSurfaceGGP,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkStreamDescriptorSurfaceCreateInfoGGP,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetExclusiveScissorNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_scissor_exclusive,
            ["name"] = vkCmdSetExclusiveScissorNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstExclusiveScissor,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = exclusiveScissorCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkRect2D,
                    ["name"] = pExclusiveScissors,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetSemaphoreFdKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_semaphore_fd,
            ["name"] = vkGetSemaphoreFdKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSemaphoreGetFdInfoKHR,
                    ["name"] = pGetFdInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = int,
                    ["name"] = pFd,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfacePresentModesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_surface,
            ["name"] = vkGetPhysicalDeviceSurfacePresentModesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPresentModeCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkPresentModeKHR,
                    ["name"] = pPresentModes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceWaylandPresentationSupportKHR"] = {
            ["returnType"] = VkBool32,
            ["extension"] = VK_KHR_wayland_surface,
            ["name"] = vkGetPhysicalDeviceWaylandPresentationSupportKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["type"] = wl_display,
                    ["name"] = display,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyIndirectCommandsLayoutNVX"] = {
            ["returnType"] = void,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkDestroyIndirectCommandsLayoutNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = indirectCommandsLayout,
                    ["type"] = VkIndirectCommandsLayoutNVX,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyAccelerationStructureNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkDestroyAccelerationStructureNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = accelerationStructure,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyRenderPass"] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkDestroyRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = renderPass,
                    ["type"] = VkRenderPass,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdFillBuffer"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdFillBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = size,
                    ["type"] = VkDeviceSize,
                    },
                [5] = {
                    ["name"] = data,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDestroyDevice"] = {
            ["returnType"] = void,
            ["group"] = Device commands,
            ["name"] = vkDestroyDevice,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateIndirectCommandsLayoutNVX"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkCreateIndirectCommandsLayoutNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkIndirectCommandsLayoutCreateInfoNVX,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkIndirectCommandsLayoutNVX,
                    ["name"] = pIndirectCommandsLayout,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreatePipelineLayout"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline layout commands,
            ["name"] = vkCreatePipelineLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPipelineLayoutCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkPipelineLayout,
                    ["name"] = pPipelineLayout,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateRenderPass"] = {
            ["returnType"] = VkResult,
            ["group"] = Pass commands,
            ["name"] = vkCreateRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkRenderPassCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkRenderPass,
                    ["name"] = pRenderPass,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetDescriptorPool"] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkResetDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorPool,
                    ["type"] = VkDescriptorPool,
                    },
                [3] = {
                    ["name"] = flags,
                    ["type"] = VkDescriptorPoolResetFlags,
                    },
                },
            },
        ["vkDestroySurfaceKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_surface,
            ["name"] = vkDestroySurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDebugMarkerInsertEXT"] = {
            ["returnType"] = void,
            ["name"] = vkCmdDebugMarkerInsertEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugMarkerMarkerInfoEXT,
                    ["name"] = pMarkerInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBeginTransformFeedbackEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdBeginTransformFeedbackEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstCounterBuffer,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = counterBufferCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkBuffer,
                    ["name"] = pCounterBuffers,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkDeviceSize,
                    ["name"] = pCounterBufferOffsets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawIndexed"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndexed,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = indexCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = firstIndex,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = vertexOffset,
                    ["type"] = int32_t,
                    },
                [6] = {
                    ["name"] = firstInstance,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkEnumerateInstanceLayerProperties"] = {
            ["returnType"] = VkResult,
            ["group"] = Layer discovery commands,
            ["name"] = vkEnumerateInstanceLayerProperties,
            ["params"] = {
                [1] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [2] = {
                    ["type"] = VkLayerProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDisplayModePropertiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkGetDisplayModePropertiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDisplayModePropertiesKHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdWaitEvents"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdWaitEvents,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = eventCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkEvent,
                    ["name"] = pEvents,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = srcStageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                [5] = {
                    ["name"] = dstStageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                [6] = {
                    ["name"] = memoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["const"] = true,
                    ["type"] = VkMemoryBarrier,
                    ["name"] = pMemoryBarriers,
                    ["pointer"] = true,
                    },
                [8] = {
                    ["name"] = bufferMemoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [9] = {
                    ["const"] = true,
                    ["type"] = VkBufferMemoryBarrier,
                    ["name"] = pBufferMemoryBarriers,
                    ["pointer"] = true,
                    },
                [10] = {
                    ["name"] = imageMemoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [11] = {
                    ["const"] = true,
                    ["type"] = VkImageMemoryBarrier,
                    ["name"] = pImageMemoryBarriers,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyBufferView"] = {
            ["returnType"] = void,
            ["group"] = Buffer view commands,
            ["name"] = vkDestroyBufferView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = bufferView,
                    ["type"] = VkBufferView,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkFreeDescriptorSets"] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkFreeDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorPool,
                    ["type"] = VkDescriptorPool,
                    },
                [3] = {
                    ["name"] = descriptorSetCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorSet,
                    ["name"] = pDescriptorSets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdNextSubpass2KHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_create_renderpass2,
            ["name"] = vkCmdNextSubpass2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSubpassBeginInfoKHR,
                    ["name"] = pSubpassBeginInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSubpassEndInfoKHR,
                    ["name"] = pSubpassEndInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetFenceStatus"] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkGetFenceStatus,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                },
            },
        ["vkDestroyPipelineCache"] = {
            ["returnType"] = void,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkDestroyPipelineCache,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdResetQueryPool"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResetQueryPool,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkCmdSetSampleLocationsEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_sample_locations,
            ["name"] = vkCmdSetSampleLocationsEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSampleLocationsInfoEXT,
                    ["name"] = pSampleLocationsInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdPushDescriptorSetKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_push_descriptor,
            ["name"] = vkCmdPushDescriptorSetKHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = pipelineBindPoint,
                    ["type"] = VkPipelineBindPoint,
                    },
                [3] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout,
                    },
                [4] = {
                    ["name"] = set,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = descriptorWriteCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkWriteDescriptorSet,
                    ["name"] = pDescriptorWrites,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkReleaseDisplayEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_direct_mode_display,
            ["name"] = vkReleaseDisplayEXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                },
            },
        ["vkAllocateCommandBuffers"] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkAllocateCommandBuffers,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkCommandBufferAllocateInfo,
                    ["name"] = pAllocateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkCommandBuffer,
                    ["name"] = pCommandBuffers,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateRenderPass2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_create_renderpass2,
            ["name"] = vkCreateRenderPass2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkRenderPassCreateInfo2KHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkRenderPass,
                    ["name"] = pRenderPass,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetAndroidHardwareBufferPropertiesANDROID"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            ["name"] = vkGetAndroidHardwareBufferPropertiesANDROID,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["type"] = AHardwareBuffer,
                    ["name"] = buffer,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkAndroidHardwareBufferPropertiesANDROID,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueuePresentKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkQueuePresentKHR,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPresentInfoKHR,
                    ["name"] = pPresentInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetFenceFdKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_fence_fd,
            ["name"] = vkGetFenceFdKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkFenceGetFdInfoKHR,
                    ["name"] = pGetFdInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = int,
                    ["name"] = pFd,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawMeshTasksIndirectNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_mesh_shader,
            ["name"] = vkCmdDrawMeshTasksIndirectNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = drawCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceWin32PresentationSupportKHR"] = {
            ["returnType"] = VkBool32,
            ["extension"] = VK_KHR_win32_surface,
            ["name"] = vkGetPhysicalDeviceWin32PresentationSupportKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDestroyObjectTableNVX"] = {
            ["returnType"] = void,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkDestroyObjectTableNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = objectTable,
                    ["type"] = VkObjectTableNVX,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkInvalidateMappedMemoryRanges"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkInvalidateMappedMemoryRanges,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memoryRangeCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkMappedMemoryRange,
                    ["name"] = pMemoryRanges,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDisplayModeProperties2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_display_properties2,
            ["name"] = vkGetDisplayModeProperties2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDisplayModeProperties2KHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetSwapchainCounterEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_display_control,
            ["name"] = vkGetSwapchainCounterEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["name"] = counter,
                    ["type"] = VkSurfaceCounterFlagsEXT,
                    },
                [4] = {
                    ["type"] = uint64_t,
                    ["name"] = pCounterValue,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDeviceWaitIdle"] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkDeviceWaitIdle,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                },
            },
        ["vkSetHdrMetadataEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_hdr_metadata,
            ["name"] = vkSetHdrMetadataEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchainCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSwapchainKHR,
                    ["name"] = pSwapchains,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkHdrMetadataEXT,
                    ["name"] = pMetadata,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceMemoryProperties"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceMemoryProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceMemoryProperties,
                    ["name"] = pMemoryProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetStencilReference"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilReference,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags,
                    },
                [3] = {
                    ["name"] = reference,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetMemoryWin32HandleNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_external_memory_win32,
            ["name"] = vkGetMemoryWin32HandleNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [3] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                    },
                [4] = {
                    ["type"] = HANDLE,
                    ["name"] = pHandle,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPastPresentationTimingGOOGLE"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_GOOGLE_display_timing,
            ["name"] = vkGetPastPresentationTimingGOOGLE,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPresentationTimingCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkPastPresentationTimingGOOGLE,
                    ["name"] = pPresentationTimings,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEnumerateDeviceLayerProperties"] = {
            ["returnType"] = VkResult,
            ["group"] = Layer discovery commands,
            ["name"] = vkEnumerateDeviceLayerProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkLayerProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdUpdateBuffer"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdUpdateBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = dataSize,
                    ["type"] = VkDeviceSize,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetQueryPoolResults"] = {
            ["returnType"] = VkResult,
            ["group"] = Query commands,
            ["name"] = vkGetQueryPoolResults,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = dataSize,
                    ["type"] = size_t,
                    },
                [6] = {
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = VkDeviceSize,
                    },
                [8] = {
                    ["name"] = flags,
                    ["type"] = VkQueryResultFlags,
                    },
                },
            },
        ["vkCmdBeginQuery"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBeginQuery,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = flags,
                    ["type"] = VkQueryControlFlags,
                    },
                },
            },
        ["vkCreateDescriptorPool"] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkCreateDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorPoolCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDescriptorPool,
                    ["name"] = pDescriptorPool,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetCommandPool"] = {
            ["returnType"] = VkResult,
            ["group"] = Command pool commands,
            ["name"] = vkResetCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = commandPool,
                    ["type"] = VkCommandPool,
                    },
                [3] = {
                    ["name"] = flags,
                    ["type"] = VkCommandPoolResetFlags,
                    },
                },
            },
        ["vkCmdSetDeviceMask"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkCmdSetDeviceMask,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = deviceMask,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetRayTracingShaderGroupHandlesNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkGetRayTracingShaderGroupHandlesNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline,
                    },
                [3] = {
                    ["name"] = firstGroup,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = groupCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = dataSize,
                    ["type"] = size_t,
                    },
                [6] = {
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDisplayPlaneCapabilitiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkGetDisplayPlaneCapabilitiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = mode,
                    ["type"] = VkDisplayModeKHR,
                    },
                [3] = {
                    ["name"] = planeIndex,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["type"] = VkDisplayPlaneCapabilitiesKHR,
                    ["name"] = pCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyDescriptorPool"] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkDestroyDescriptorPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorPool,
                    ["type"] = VkDescriptorPool,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdCopyImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["const"] = true,
                    ["type"] = VkImageCopy,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateHeadlessSurfaceEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_headless_surface,
            ["name"] = vkCreateHeadlessSurfaceEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkHeadlessSurfaceCreateInfoEXT,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceQueue2"] = {
            ["returnType"] = void,
            ["group"] = Originally based on VK_KHR_protected_memory (extension 146), which was never published; thus the mystifying large value= numbers below. These are not aliased since they weren't actually promoted from an extension.,
            ["name"] = vkGetDeviceQueue2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDeviceQueueInfo2,
                    ["name"] = pQueueInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkQueue,
                    ["name"] = pQueue,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDebugMarkerSetObjectNameEXT"] = {
            ["returnType"] = VkResult,
            ["name"] = vkDebugMarkerSetObjectNameEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugMarkerObjectNameInfoEXT,
                    ["name"] = pNameInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawIndirectByteCountEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdDrawIndirectByteCountEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = firstInstance,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = counterBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = counterBufferOffset,
                    ["type"] = VkDeviceSize,
                    },
                [6] = {
                    ["name"] = counterOffset,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["name"] = vertexStride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_cooperative_matrix,
            ["name"] = vkGetPhysicalDeviceCooperativeMatrixPropertiesNV,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkCooperativeMatrixPropertiesNV,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateComputePipelines"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline commands,
            ["name"] = vkCreateComputePipelines,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["name"] = createInfoCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkComputePipelineCreateInfo,
                    ["name"] = pCreateInfos,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [6] = {
                    ["type"] = VkPipeline,
                    ["name"] = pPipelines,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetQueryPoolEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_host_query_reset,
            ["name"] = vkResetQueryPoolEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = queryCount,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceExternalBufferProperties"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_memory_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalBufferProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceExternalBufferInfo,
                    ["name"] = pExternalBufferInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkExternalBufferProperties,
                    ["name"] = pExternalBufferProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueWaitIdle"] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkQueueWaitIdle,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                },
            },
        ["vkGetEventStatus"] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkGetEventStatus,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                },
            },
        ["vkCreatePipelineCache"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline Cache commands,
            ["name"] = vkCreatePipelineCache,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPipelineCacheCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkPipelineCache,
                    ["name"] = pPipelineCache,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkUpdateDescriptorSets"] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkUpdateDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorWriteCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkWriteDescriptorSet,
                    ["name"] = pDescriptorWrites,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = descriptorCopyCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkCopyDescriptorSet,
                    ["name"] = pDescriptorCopies,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBindDescriptorSets"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = pipelineBindPoint,
                    ["type"] = VkPipelineBindPoint,
                    },
                [3] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout,
                    },
                [4] = {
                    ["name"] = firstSet,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = descriptorSetCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorSet,
                    ["name"] = pDescriptorSets,
                    ["pointer"] = true,
                    },
                [7] = {
                    ["name"] = dynamicOffsetCount,
                    ["type"] = uint32_t,
                    },
                [8] = {
                    ["const"] = true,
                    ["type"] = uint32_t,
                    ["name"] = pDynamicOffsets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEndCommandBuffer"] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkEndCommandBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                },
            },
        ["vkCmdDrawIndirectCountKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_draw_indirect_count,
            ["name"] = vkCmdDrawIndirectCountKHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = countBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = countBufferOffset,
                    ["type"] = VkDeviceSize,
                    },
                [6] = {
                    ["name"] = maxDrawCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetQueueCheckpointDataNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_device_diagnostic_checkpoints,
            ["name"] = vkGetQueueCheckpointDataNV,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pCheckpointDataCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkCheckpointDataNV,
                    ["name"] = pCheckpointData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDebugUtilsMessengerEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkCreateDebugUtilsMessengerEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsMessengerCreateInfoEXT,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDebugUtilsMessengerEXT,
                    ["name"] = pMessenger,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueInsertDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkQueueInsertDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsLabelEXT,
                    ["name"] = pLabelInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceFormatProperties2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["type"] = VkFormatProperties2,
                    ["name"] = pFormatProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEnumeratePhysicalDeviceGroups"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_device_group_creation,
            ["name"] = vkEnumeratePhysicalDeviceGroups,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPhysicalDeviceGroupCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkPhysicalDeviceGroupProperties,
                    ["name"] = pPhysicalDeviceGroupProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceQueue"] = {
            ["returnType"] = void,
            ["group"] = queue commands,
            ["name"] = vkGetDeviceQueue,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = queueIndex,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["type"] = VkQueue,
                    ["name"] = pQueue,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDisplayModeKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkCreateDisplayModeKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkDisplayModeCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["type"] = VkDisplayModeKHR,
                    ["name"] = pMode,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetDepthBounds"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetDepthBounds,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = minDepthBounds,
                    ["type"] = float,
                    },
                [3] = {
                    ["name"] = maxDepthBounds,
                    ["type"] = float,
                    },
                },
            },
        ["vkCmdSetEvent"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                [3] = {
                    ["name"] = stageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                },
            },
        ["vkCmdEndConditionalRenderingEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_conditional_rendering,
            ["name"] = vkCmdEndConditionalRenderingEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                },
            },
        ["vkGetDisplayPlaneSupportedDisplaysKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkGetDisplayPlaneSupportedDisplaysKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = planeIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pDisplayCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDisplayKHR,
                    ["name"] = pDisplays,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateGraphicsPipelines"] = {
            ["returnType"] = VkResult,
            ["group"] = Pipeline commands,
            ["name"] = vkCreateGraphicsPipelines,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["name"] = createInfoCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkGraphicsPipelineCreateInfo,
                    ["name"] = pCreateInfos,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [6] = {
                    ["type"] = VkPipeline,
                    ["name"] = pPipelines,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetShaderInfoAMD"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_AMD_shader_info,
            ["name"] = vkGetShaderInfoAMD,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline,
                    },
                [3] = {
                    ["name"] = shaderStage,
                    ["type"] = VkShaderStageFlags,
                    },
                [4] = {
                    ["name"] = infoType,
                    ["type"] = VkShaderInfoTypeAMD,
                    },
                [5] = {
                    ["type"] = size_t,
                    ["name"] = pInfoSize,
                    ["pointer"] = true,
                    },
                [6] = {
                    ["type"] = void,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdClearColorImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearColorImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = imageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkClearColorValue,
                    ["name"] = pColor,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["name"] = rangeCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkImageSubresourceRange,
                    ["name"] = pRanges,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceFeatures"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceFeatures,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceFeatures,
                    ["name"] = pFeatures,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateMetalSurfaceEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_metal_surface,
            ["name"] = vkCreateMetalSurfaceEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMetalSurfaceCreateInfoEXT,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyBuffer"] = {
            ["returnType"] = void,
            ["group"] = Buffer commands,
            ["name"] = vkDestroyBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceSupportKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_surface,
            ["name"] = vkGetPhysicalDeviceSurfaceSupportKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [4] = {
                    ["type"] = VkBool32,
                    ["name"] = pSupported,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateViSurfaceNN"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NN_vi_surface,
            ["name"] = vkCreateViSurfaceNN,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkViSurfaceCreateInfoNN,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceFeatures2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceFeatures2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceFeatures2,
                    ["name"] = pFeatures,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateAccelerationStructureNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCreateAccelerationStructureNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAccelerationStructureCreateInfoNV,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkAccelerationStructureNV,
                    ["name"] = pAccelerationStructure,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkRegisterDisplayEventEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_display_control,
            ["name"] = vkRegisterDisplayEventEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkDisplayEventInfoEXT,
                    ["name"] = pDisplayEventInfo,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["type"] = VkFence,
                    ["name"] = pFence,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateXcbSurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_xcb_surface,
            ["name"] = vkCreateXcbSurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkXcbSurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEnumerateInstanceExtensionProperties"] = {
            ["returnType"] = VkResult,
            ["group"] = Extension discovery commands,
            ["name"] = vkEnumerateInstanceExtensionProperties,
            ["params"] = {
                [1] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pLayerName,
                    ["pointer"] = true,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkExtensionProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetSemaphoreWin32HandleKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_semaphore_win32,
            ["name"] = vkGetSemaphoreWin32HandleKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSemaphoreGetWin32HandleInfoKHR,
                    ["name"] = pGetWin32HandleInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = HANDLE,
                    ["name"] = pHandle,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetCoarseSampleOrderNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_shading_rate_image,
            ["name"] = vkCmdSetCoarseSampleOrderNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = sampleOrderType,
                    ["type"] = VkCoarseSampleOrderTypeNV,
                    },
                [3] = {
                    ["name"] = customSampleOrderCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkCoarseSampleOrderCustomNV,
                    ["name"] = pCustomSampleOrders,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyFence"] = {
            ["returnType"] = void,
            ["group"] = Fence commands,
            ["name"] = vkDestroyFence,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceProcAddr"] = {
            ["returnType"] = PFN_vkVoidFunction,
            ["group"] = Device initialization,
            ["name"] = vkGetDeviceProcAddr,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pName,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetInstanceProcAddr"] = {
            ["returnType"] = PFN_vkVoidFunction,
            ["group"] = Device initialization,
            ["name"] = vkGetInstanceProcAddr,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pName,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceDisplayPlaneProperties2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_display_properties2,
            ["name"] = vkGetPhysicalDeviceDisplayPlaneProperties2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDisplayPlaneProperties2KHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceQueueFamilyProperties"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceQueueFamilyProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pQueueFamilyPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkQueueFamilyProperties,
                    ["name"] = pQueueFamilyProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAcquireNextImageKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkAcquireNextImageKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["name"] = timeout,
                    ["type"] = uint64_t,
                    },
                [4] = {
                    ["name"] = semaphore,
                    ["type"] = VkSemaphore,
                    },
                [5] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                [6] = {
                    ["type"] = uint32_t,
                    ["name"] = pImageIndex,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdEndTransformFeedbackEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdEndTransformFeedbackEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstCounterBuffer,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = counterBufferCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkBuffer,
                    ["name"] = pCounterBuffers,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkDeviceSize,
                    ["name"] = pCounterBufferOffsets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEnumerateDeviceExtensionProperties"] = {
            ["returnType"] = VkResult,
            ["group"] = Extension discovery commands,
            ["name"] = vkEnumerateDeviceExtensionProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = char,
                    ["name"] = pLayerName,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkExtensionProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkSubmitDebugUtilsMessageEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkSubmitDebugUtilsMessageEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["name"] = messageSeverity,
                    ["type"] = VkDebugUtilsMessageSeverityFlagsEXT,
                    },
                [3] = {
                    ["name"] = messageTypes,
                    ["type"] = VkDebugUtilsMessageTypeFlagsEXT,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsMessengerCallbackDataEXT,
                    ["name"] = pCallbackData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetMemoryWin32HandleKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_memory_win32,
            ["name"] = vkGetMemoryWin32HandleKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMemoryGetWin32HandleInfoKHR,
                    ["name"] = pGetWin32HandleInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = HANDLE,
                    ["name"] = pHandle,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetViewportShadingRatePaletteNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_shading_rate_image,
            ["name"] = vkCmdSetViewportShadingRatePaletteNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstViewport,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = viewportCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkShadingRatePaletteNV,
                    ["name"] = pShadingRatePalettes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBeginConditionalRenderingEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_conditional_rendering,
            ["name"] = vkCmdBeginConditionalRenderingEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkConditionalRenderingBeginInfoEXT,
                    ["name"] = pConditionalRenderingBegin,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyShaderModule"] = {
            ["returnType"] = void,
            ["group"] = Shader commands,
            ["name"] = vkDestroyShaderModule,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = shaderModule,
                    ["type"] = VkShaderModule,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateFramebuffer"] = {
            ["returnType"] = VkResult,
            ["group"] = Pass commands,
            ["name"] = vkCreateFramebuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkFramebufferCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkFramebuffer,
                    ["name"] = pFramebuffer,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetMemoryFdKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_memory_fd,
            ["name"] = vkGetMemoryFdKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMemoryGetFdInfoKHR,
                    ["name"] = pGetFdInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = int,
                    ["name"] = pFd,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfacePresentModes2EXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_full_screen_exclusive,
            ["name"] = vkGetPhysicalDeviceSurfacePresentModes2EXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceSurfaceInfo2KHR,
                    ["name"] = pSurfaceInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPresentModeCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkPresentModeKHR,
                    ["name"] = pPresentModes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateSampler"] = {
            ["returnType"] = VkResult,
            ["group"] = Sampler commands,
            ["name"] = vkCreateSampler,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSamplerCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSampler,
                    ["name"] = pSampler,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateQueryPool"] = {
            ["returnType"] = VkResult,
            ["group"] = Query commands,
            ["name"] = vkCreateQueryPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkQueryPoolCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkQueryPool,
                    ["name"] = pQueryPool,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceXlibPresentationSupportKHR"] = {
            ["returnType"] = VkBool32,
            ["extension"] = VK_KHR_xlib_surface,
            ["name"] = vkGetPhysicalDeviceXlibPresentationSupportKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["type"] = Display,
                    ["name"] = dpy,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = visualID,
                    ["type"] = VisualID,
                    },
                },
            },
        ["vkCmdBindIndexBuffer"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindIndexBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = indexType,
                    ["type"] = VkIndexType,
                    },
                },
            },
        ["vkGetPhysicalDeviceQueueFamilyProperties2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceQueueFamilyProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pQueueFamilyPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkQueueFamilyProperties2,
                    ["name"] = pQueueFamilyProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDescriptorSetLayout"] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkCreateDescriptorSetLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorSetLayoutCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDescriptorSetLayout,
                    ["name"] = pSetLayout,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdCopyBufferToImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyBufferToImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcBuffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage,
                    },
                [4] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [5] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkBufferImageCopy,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateWin32SurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_win32_surface,
            ["name"] = vkCreateWin32SurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkWin32SurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyValidationCacheEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_validation_cache,
            ["name"] = vkDestroyValidationCacheEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = validationCache,
                    ["type"] = VkValidationCacheEXT,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetStencilCompareMask"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetStencilCompareMask,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = faceMask,
                    ["type"] = VkStencilFaceFlags,
                    },
                [3] = {
                    ["name"] = compareMask,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDestroyEvent"] = {
            ["returnType"] = void,
            ["group"] = Event commands,
            ["name"] = vkDestroyEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkImportSemaphoreWin32HandleKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_semaphore_win32,
            ["name"] = vkImportSemaphoreWin32HandleKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImportSemaphoreWin32HandleInfoKHR,
                    ["name"] = pImportSemaphoreWin32HandleInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkSetEvent"] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkSetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                },
            },
        ["vkCmdNextSubpass"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdNextSubpass,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = contents,
                    ["type"] = VkSubpassContents,
                    },
                },
            },
        ["vkCreateAndroidSurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_android_surface,
            ["name"] = vkCreateAndroidSurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAndroidSurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueBeginDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkQueueBeginDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsLabelEXT,
                    ["name"] = pLabelInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetAccelerationStructureMemoryRequirementsNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkGetAccelerationStructureMemoryRequirementsNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAccelerationStructureMemoryRequirementsInfoNV,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkMemoryRequirements2KHR,
                    ["name"] = pMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetSwapchainGrallocUsageANDROID"] = {
            ["returnType"] = VkResult,
            ["name"] = vkGetSwapchainGrallocUsageANDROID,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["name"] = imageUsage,
                    ["type"] = VkImageUsageFlags,
                    },
                [4] = {
                    ["type"] = int,
                    ["name"] = grallocUsage,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkRegisterObjectsNVX"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkRegisterObjectsNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = objectTable,
                    ["type"] = VkObjectTableNVX,
                    },
                [3] = {
                    ["name"] = objectCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkObjectTableEntryNVX,
                    ["name"] = ppObjectTableEntries,
                    ["doublePointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = uint32_t,
                    ["name"] = pObjectIndices,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkReleaseFullScreenExclusiveModeEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_full_screen_exclusive,
            ["name"] = vkReleaseFullScreenExclusiveModeEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                },
            },
        ["vkGetPhysicalDeviceProperties2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceProperties2,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdClearAttachments"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearAttachments,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = attachmentCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkClearAttachment,
                    ["name"] = pAttachments,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = rectCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkClearRect,
                    ["name"] = pRects,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdCopyImageToBuffer"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyImageToBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkBufferImageCopy,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAcquireFullScreenExclusiveModeEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_full_screen_exclusive,
            ["name"] = vkAcquireFullScreenExclusiveModeEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                },
            },
        ["vkGetImageViewHandleNVX"] = {
            ["returnType"] = uint32_t,
            ["extension"] = VK_NVX_image_view_handle,
            ["name"] = vkGetImageViewHandleNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImageViewHandleInfoNVX,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetBufferDeviceAddressEXT"] = {
            ["returnType"] = VkDeviceAddress,
            ["extension"] = VK_EXT_buffer_device_address,
            ["name"] = vkGetBufferDeviceAddressEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkBufferDeviceAddressInfoEXT,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBlitImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBlitImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["const"] = true,
                    ["type"] = VkImageBlit,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                [8] = {
                    ["name"] = filter,
                    ["type"] = VkFilter,
                    },
                },
            },
        ["vkGetImageDrmFormatModifierPropertiesEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_image_drm_format_modifier,
            ["name"] = vkGetImageDrmFormatModifierPropertiesEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["type"] = VkImageDrmFormatModifierPropertiesEXT,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdBeginRenderPass2KHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_create_renderpass2,
            ["name"] = vkCmdBeginRenderPass2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkRenderPassBeginInfo,
                    ["name"] = pRenderPassBegin,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSubpassBeginInfoKHR,
                    ["name"] = pSubpassBeginInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetAccelerationStructureHandleNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkGetAccelerationStructureHandleNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = accelerationStructure,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [3] = {
                    ["name"] = dataSize,
                    ["type"] = size_t,
                    },
                [4] = {
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkBeginCommandBuffer"] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkBeginCommandBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkCommandBufferBeginInfo,
                    ["name"] = pBeginInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceXcbPresentationSupportKHR"] = {
            ["returnType"] = VkBool32,
            ["extension"] = VK_KHR_xcb_surface,
            ["name"] = vkGetPhysicalDeviceXcbPresentationSupportKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = queueFamilyIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["type"] = xcb_connection_t,
                    ["name"] = connection,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = visual_id,
                    ["type"] = xcb_visualid_t,
                    },
                },
            },
        ["vkCmdBuildAccelerationStructureNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCmdBuildAccelerationStructureNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAccelerationStructureInfoNV,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["name"] = instanceData,
                    ["type"] = VkBuffer,
                    },
                [4] = {
                    ["name"] = instanceOffset,
                    ["type"] = VkDeviceSize,
                    },
                [5] = {
                    ["name"] = update,
                    ["type"] = VkBool32,
                    },
                [6] = {
                    ["name"] = dst,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [7] = {
                    ["name"] = src,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [8] = {
                    ["name"] = scratch,
                    ["type"] = VkBuffer,
                    },
                [9] = {
                    ["name"] = scratchOffset,
                    ["type"] = VkDeviceSize,
                    },
                },
            },
        ["vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX"] = {
            ["returnType"] = void,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkDeviceGeneratedCommandsFeaturesNVX,
                    ["name"] = pFeatures,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDeviceGeneratedCommandsLimitsNVX,
                    ["name"] = pLimits,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateImage"] = {
            ["returnType"] = VkResult,
            ["group"] = Image commands,
            ["name"] = vkCreateImage,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImageCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkImage,
                    ["name"] = pImage,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueSignalReleaseImageANDROID"] = {
            ["returnType"] = VkResult,
            ["name"] = vkQueueSignalReleaseImageANDROID,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["name"] = waitSemaphoreCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSemaphore,
                    ["name"] = pWaitSemaphores,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [5] = {
                    ["type"] = int,
                    ["name"] = pNativeFenceFd,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceDisplayPlanePropertiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkGetPhysicalDeviceDisplayPlanePropertiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDisplayPlanePropertiesKHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDisplayPlaneSurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkCreateDisplayPlaneSurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDisplaySurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueBindSparse"] = {
            ["returnType"] = VkResult,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkQueueBindSparse,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkBindSparseInfo,
                    ["name"] = pBindInfo,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                },
            },
        ["vkCmdBindShadingRateImageNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_shading_rate_image,
            ["name"] = vkCmdBindShadingRateImageNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = imageView,
                    ["type"] = VkImageView,
                    },
                [3] = {
                    ["name"] = imageLayout,
                    ["type"] = VkImageLayout,
                    },
                },
            },
        ["vkCmdBeginQueryIndexedEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdBeginQueryIndexedEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = flags,
                    ["type"] = VkQueryControlFlags,
                    },
                [5] = {
                    ["name"] = index,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkBindAccelerationStructureMemoryNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkBindAccelerationStructureMemoryNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkBindAccelerationStructureMemoryInfoNV,
                    ["name"] = pBindInfos,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCompileDeferredNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCompileDeferredNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline,
                    },
                [3] = {
                    ["name"] = shader,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetImageMemoryRequirements2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_memory_requirements2,
            ["name"] = vkGetImageMemoryRequirements2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImageMemoryRequirementsInfo2,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkMemoryRequirements2,
                    ["name"] = pMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawMeshTasksIndirectCountNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_mesh_shader,
            ["name"] = vkCmdDrawMeshTasksIndirectCountNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = countBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = countBufferOffset,
                    ["type"] = VkDeviceSize,
                    },
                [6] = {
                    ["name"] = maxDrawCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetMemoryFdPropertiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_memory_fd,
            ["name"] = vkGetMemoryFdPropertiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalMemoryHandleTypeFlags,
                    },
                [3] = {
                    ["name"] = fd,
                    ["type"] = int,
                    },
                [4] = {
                    ["type"] = VkMemoryFdPropertiesKHR,
                    ["name"] = pMemoryFdProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdEndQueryIndexedEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdEndQueryIndexedEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = index,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkBindBufferMemory"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory management API commands,
            ["name"] = vkBindBufferMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [4] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize,
                    },
                },
            },
        ["vkCmdDrawIndexedIndirectCountKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_draw_indirect_count,
            ["name"] = vkCmdDrawIndexedIndirectCountKHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = countBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = countBufferOffset,
                    ["type"] = VkDeviceSize,
                    },
                [6] = {
                    ["name"] = maxDrawCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDevicePresentRectanglesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkGetPhysicalDevicePresentRectanglesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pRectCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkRect2D,
                    ["name"] = pRects,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAcquireXlibDisplayEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_acquire_xlib_display,
            ["name"] = vkAcquireXlibDisplayEXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = Display,
                    ["name"] = dpy,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["name"] = display,
                    ["type"] = VkDisplayKHR,
                    },
                },
            },
        ["vkCmdCopyAccelerationStructureNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCmdCopyAccelerationStructureNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = dst,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [3] = {
                    ["name"] = src,
                    ["type"] = VkAccelerationStructureNV,
                    },
                [4] = {
                    ["name"] = mode,
                    ["type"] = VkCopyAccelerationStructureModeNV,
                    },
                },
            },
        ["vkCmdBindTransformFeedbackBuffersEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_transform_feedback,
            ["name"] = vkCmdBindTransformFeedbackBuffersEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstBinding,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = bindingCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkBuffer,
                    ["name"] = pBuffers,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkDeviceSize,
                    ["name"] = pOffsets,
                    ["pointer"] = true,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkDeviceSize,
                    ["name"] = pSizes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetCheckpointNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_device_diagnostic_checkpoints,
            ["name"] = vkCmdSetCheckpointNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pCheckpointMarker,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetMemoryAndroidHardwareBufferANDROID"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
            ["name"] = vkGetMemoryAndroidHardwareBufferANDROID,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMemoryGetAndroidHardwareBufferInfoANDROID,
                    ["name"] = pInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = AHardwareBuffer,
                    ["name"] = pBuffer,
                    ["doublePointer"] = true,
                    },
                },
            },
        ["vkCreateWaylandSurfaceKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_wayland_surface,
            ["name"] = vkCreateWaylandSurfaceKHR,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkWaylandSurfaceCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdEndRenderPass2KHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_create_renderpass2,
            ["name"] = vkCmdEndRenderPass2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSubpassEndInfoKHR,
                    ["name"] = pSubpassEndInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAcquireNextImage2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkAcquireNextImage2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAcquireNextImageInfoKHR,
                    ["name"] = pAcquireInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pImageIndex,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroySwapchainKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkDestroySwapchainKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateRayTracingPipelinesNV"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCreateRayTracingPipelinesNV,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineCache,
                    ["type"] = VkPipelineCache,
                    },
                [3] = {
                    ["name"] = createInfoCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkRayTracingPipelineCreateInfoNV,
                    ["name"] = pCreateInfos,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [6] = {
                    ["type"] = VkPipeline,
                    ["name"] = pPipelines,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyImage"] = {
            ["returnType"] = void,
            ["group"] = Image commands,
            ["name"] = vkDestroyImage,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateSwapchainKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkCreateSwapchainKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSwapchainCreateInfoKHR,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSwapchainKHR,
                    ["name"] = pSwapchain,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetMemoryHostPointerPropertiesEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_external_memory_host,
            ["name"] = vkGetMemoryHostPointerPropertiesEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalMemoryHandleTypeFlags,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pHostPointer,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkMemoryHostPointerPropertiesEXT,
                    ["name"] = pMemoryHostPointerProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroySampler"] = {
            ["returnType"] = void,
            ["group"] = Sampler commands,
            ["name"] = vkDestroySampler,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = sampler,
                    ["type"] = VkSampler,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdEndDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkCmdEndDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                },
            },
        ["vkCreateObjectTableNVX"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkCreateObjectTableNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkObjectTableCreateInfoNVX,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkObjectTableNVX,
                    ["name"] = pObjectTable,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyDebugUtilsMessengerEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkDestroyDebugUtilsMessengerEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["name"] = messenger,
                    ["type"] = VkDebugUtilsMessengerEXT,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkBindImageMemory2"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_bind_memory2,
            ["name"] = vkBindImageMemory2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkBindImageMemoryInfo,
                    ["name"] = pBindInfos,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdEndQuery"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdEndQuery,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["name"] = query,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkCmdDispatch"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDispatch,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = groupCountX,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = groupCountY,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = groupCountZ,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkCmdPushDescriptorSetWithTemplateKHR"] = {
            ["returnType"] = void,
            ["extension"] = VK_KHR_push_descriptor,
            ["name"] = vkCmdPushDescriptorSetWithTemplateKHR,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = descriptorUpdateTemplate,
                    ["type"] = VkDescriptorUpdateTemplate,
                    },
                [3] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout,
                    },
                [4] = {
                    ["name"] = set,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueEndDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkQueueEndDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                },
            },
        ["vkGetRenderAreaGranularity"] = {
            ["returnType"] = void,
            ["group"] = Pass commands,
            ["name"] = vkGetRenderAreaGranularity,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = renderPass,
                    ["type"] = VkRenderPass,
                    },
                [3] = {
                    ["type"] = VkExtent2D,
                    ["name"] = pGranularity,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkSetDebugUtilsObjectTagEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkSetDebugUtilsObjectTagEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsObjectTagInfoEXT,
                    ["name"] = pTagInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetDepthBias"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetDepthBias,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = depthBiasConstantFactor,
                    ["type"] = float,
                    },
                [3] = {
                    ["name"] = depthBiasClamp,
                    ["type"] = float,
                    },
                [4] = {
                    ["name"] = depthBiasSlopeFactor,
                    ["type"] = float,
                    },
                },
            },
        ["vkGetSwapchainImagesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkGetSwapchainImagesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pSwapchainImageCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkImage,
                    ["name"] = pSwapchainImages,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkSetDebugUtilsObjectNameEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkSetDebugUtilsObjectNameEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsObjectNameInfoEXT,
                    ["name"] = pNameInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDebugMarkerBeginEXT"] = {
            ["returnType"] = void,
            ["name"] = vkCmdDebugMarkerBeginEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugMarkerMarkerInfoEXT,
                    ["name"] = pMarkerInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdCopyBuffer"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdCopyBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcBuffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [4] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = VkBufferCopy,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetCalibratedTimestampsEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_calibrated_timestamps,
            ["name"] = vkGetCalibratedTimestampsEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = timestampCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkCalibratedTimestampInfoEXT,
                    ["name"] = pTimestampInfos,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = uint64_t,
                    ["name"] = pTimestamps,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["type"] = uint64_t,
                    ["name"] = pMaxDeviation,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_calibrated_timestamps,
            ["name"] = vkGetPhysicalDeviceCalibrateableTimeDomainsEXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pTimeDomainCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkTimeDomainEXT,
                    ["name"] = pTimeDomains,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkSetLocalDimmingAMD"] = {
            ["returnType"] = void,
            ["extension"] = VK_AMD_display_native_hdr,
            ["name"] = vkSetLocalDimmingAMD,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapChain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["name"] = localDimmingEnable,
                    ["type"] = VkBool32,
                    },
                },
            },
        ["vkAcquireImageANDROID"] = {
            ["returnType"] = VkResult,
            ["name"] = vkAcquireImageANDROID,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = nativeFenceFd,
                    ["type"] = int,
                    },
                [4] = {
                    ["name"] = semaphore,
                    ["type"] = VkSemaphore,
                    },
                [5] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                },
            },
        ["vkCreateImageView"] = {
            ["returnType"] = VkResult,
            ["group"] = Image view commands,
            ["name"] = vkCreateImageView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImageViewCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkImageView,
                    ["name"] = pView,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkMergeValidationCachesEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_validation_cache,
            ["name"] = vkMergeValidationCachesEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = dstCache,
                    ["type"] = VkValidationCacheEXT,
                    },
                [3] = {
                    ["name"] = srcCacheCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkValidationCacheEXT,
                    ["name"] = pSrcCaches,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdPipelineBarrier"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdPipelineBarrier,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcStageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                [3] = {
                    ["name"] = dstStageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                [4] = {
                    ["name"] = dependencyFlags,
                    ["type"] = VkDependencyFlags,
                    },
                [5] = {
                    ["name"] = memoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkMemoryBarrier,
                    ["name"] = pMemoryBarriers,
                    ["pointer"] = true,
                    },
                [7] = {
                    ["name"] = bufferMemoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [8] = {
                    ["const"] = true,
                    ["type"] = VkBufferMemoryBarrier,
                    ["name"] = pBufferMemoryBarriers,
                    ["pointer"] = true,
                    },
                [9] = {
                    ["name"] = imageMemoryBarrierCount,
                    ["type"] = uint32_t,
                    },
                [10] = {
                    ["const"] = true,
                    ["type"] = VkImageMemoryBarrier,
                    ["name"] = pImageMemoryBarriers,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetValidationCacheDataEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_validation_cache,
            ["name"] = vkGetValidationCacheDataEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = validationCache,
                    ["type"] = VkValidationCacheEXT,
                    },
                [3] = {
                    ["type"] = size_t,
                    ["name"] = pDataSize,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateValidationCacheEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_validation_cache,
            ["name"] = vkCreateValidationCacheEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkValidationCacheCreateInfoEXT,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkValidationCacheEXT,
                    ["name"] = pValidationCache,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceDisplayProperties2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_display_properties2,
            ["name"] = vkGetPhysicalDeviceDisplayProperties2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDisplayProperties2KHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdPushConstants"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdPushConstants,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = layout,
                    ["type"] = VkPipelineLayout,
                    },
                [3] = {
                    ["name"] = stageFlags,
                    ["type"] = VkShaderStageFlags,
                    },
                [4] = {
                    ["name"] = offset,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = size,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pValues,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroySamplerYcbcrConversion"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
            ["name"] = vkDestroySamplerYcbcrConversion,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = ycbcrConversion,
                    ["type"] = VkSamplerYcbcrConversion,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetBufferMemoryRequirements"] = {
            ["returnType"] = void,
            ["group"] = Memory management API commands,
            ["name"] = vkGetBufferMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["type"] = VkMemoryRequirements,
                    ["name"] = pMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateSamplerYcbcrConversion"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_sampler_ycbcr_conversion,
            ["name"] = vkCreateSamplerYcbcrConversion,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkSamplerYcbcrConversionCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSamplerYcbcrConversion,
                    ["name"] = pYcbcrConversion,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkImportFenceWin32HandleKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_fence_win32,
            ["name"] = vkImportFenceWin32HandleKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImportFenceWin32HandleInfoKHR,
                    ["name"] = pImportFenceWin32HandleInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkBindImageMemory"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory management API commands,
            ["name"] = vkBindImageMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [4] = {
                    ["name"] = memoryOffset,
                    ["type"] = VkDeviceSize,
                    },
                },
            },
        ["vkGetImageSparseMemoryRequirements"] = {
            ["returnType"] = void,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkGetImageSparseMemoryRequirements,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pSparseMemoryRequirementCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSparseImageMemoryRequirements,
                    ["name"] = pSparseMemoryRequirements,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDisplayPlaneCapabilities2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_display_properties2,
            ["name"] = vkGetDisplayPlaneCapabilities2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDisplayPlaneInfo2KHR,
                    ["name"] = pDisplayPlaneInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDisplayPlaneCapabilities2KHR,
                    ["name"] = pCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceProperties"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkTrimCommandPool"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_maintenance1,
            ["name"] = vkTrimCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = commandPool,
                    ["type"] = VkCommandPool,
                    },
                [3] = {
                    ["name"] = flags,
                    ["type"] = VkCommandPoolTrimFlags,
                    },
                },
            },
        ["vkCreateIOSSurfaceMVK"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_MVK_ios_surface,
            ["name"] = vkCreateIOSSurfaceMVK,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkIOSSurfaceCreateInfoMVK,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceFormats2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_surface_capabilities2,
            ["name"] = vkGetPhysicalDeviceSurfaceFormats2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceSurfaceInfo2KHR,
                    ["name"] = pSurfaceInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pSurfaceFormatCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceFormat2KHR,
                    ["name"] = pSurfaceFormats,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetCommandBuffer"] = {
            ["returnType"] = VkResult,
            ["group"] = Command buffer commands,
            ["name"] = vkResetCommandBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = flags,
                    ["type"] = VkCommandBufferResetFlags,
                    },
                },
            },
        ["vkCmdSetDiscardRectangleEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_discard_rectangles,
            ["name"] = vkCmdSetDiscardRectangleEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstDiscardRectangle,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = discardRectangleCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkRect2D,
                    ["name"] = pDiscardRectangles,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetBlendConstants"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetBlendConstants,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = float,
                    ["name"] = blendConstants,
                    },
                },
            },
        ["vkCmdBindPipeline"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdBindPipeline,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = pipelineBindPoint,
                    ["type"] = VkPipelineBindPoint,
                    },
                [3] = {
                    ["name"] = pipeline,
                    ["type"] = VkPipeline,
                    },
                },
            },
        ["vkCreateMacOSSurfaceMVK"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_MVK_macos_surface,
            ["name"] = vkCreateMacOSSurfaceMVK,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMacOSSurfaceCreateInfoMVK,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateInstance"] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkCreateInstance,
            ["params"] = {
                [1] = {
                    ["const"] = true,
                    ["type"] = VkInstanceCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkInstance,
                    ["name"] = pInstance,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawIndexedIndirect"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndexedIndirect,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = drawCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetFenceWin32HandleKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_fence_win32,
            ["name"] = vkGetFenceWin32HandleKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkFenceGetWin32HandleInfoKHR,
                    ["name"] = pGetWin32HandleInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = HANDLE,
                    ["name"] = pHandle,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceGroupSurfacePresentModesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkGetDeviceGroupSurfacePresentModesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = VkDeviceGroupPresentModeFlagsKHR,
                    ["name"] = pModes,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetRefreshCycleDurationGOOGLE"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_GOOGLE_display_timing,
            ["name"] = vkGetRefreshCycleDurationGOOGLE,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                [3] = {
                    ["type"] = VkRefreshCycleDurationGOOGLE,
                    ["name"] = pDisplayTimingProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAllocateMemory"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkAllocateMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkMemoryAllocateInfo,
                    ["name"] = pAllocateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDeviceMemory,
                    ["name"] = pMemory,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetImageSubresourceLayout"] = {
            ["returnType"] = void,
            ["group"] = Image commands,
            ["name"] = vkGetImageSubresourceLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkImageSubresource,
                    ["name"] = pSubresource,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSubresourceLayout,
                    ["name"] = pLayout,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkUpdateDescriptorSetWithTemplate"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkUpdateDescriptorSetWithTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorSet,
                    ["type"] = VkDescriptorSet,
                    },
                [3] = {
                    ["name"] = descriptorUpdateTemplate,
                    ["type"] = VkDescriptorUpdateTemplate,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = void,
                    ["name"] = pData,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetViewport"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetViewport,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstViewport,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = viewportCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkViewport,
                    ["name"] = pViewports,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetRandROutputDisplayEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_acquire_xlib_display,
            ["name"] = vkGetRandROutputDisplayEXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = Display,
                    ["name"] = dpy,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["name"] = rrOutput,
                    ["type"] = RROutput,
                    },
                [4] = {
                    ["type"] = VkDisplayKHR,
                    ["name"] = pDisplay,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetSwapchainStatusKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_shared_presentable_image,
            ["name"] = vkGetSwapchainStatusKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = swapchain,
                    ["type"] = VkSwapchainKHR,
                    },
                },
            },
        ["vkCmdReserveSpaceForCommandsNVX"] = {
            ["returnType"] = void,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkCmdReserveSpaceForCommandsNVX,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkCmdReserveSpaceForCommandsInfoNVX,
                    ["name"] = pReserveSpaceInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateEvent"] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkCreateEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkEventCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkEvent,
                    ["name"] = pEvent,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetMemoryWin32HandlePropertiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_memory_win32,
            ["name"] = vkGetMemoryWin32HandlePropertiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = handleType,
                    ["type"] = VkExternalMemoryHandleTypeFlags,
                    },
                [3] = {
                    ["name"] = handle,
                    ["type"] = HANDLE,
                    },
                [4] = {
                    ["type"] = VkMemoryWin32HandlePropertiesKHR,
                    ["name"] = pMemoryWin32HandleProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceGroupPeerMemoryFeatures"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_device_group,
            ["name"] = vkGetDeviceGroupPeerMemoryFeatures,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = heapIndex,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = localDeviceIndex,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = remoteDeviceIndex,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["type"] = VkPeerMemoryFeatureFlags,
                    ["name"] = pPeerMemoryFeatures,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceDisplayPropertiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_display,
            ["name"] = vkGetPhysicalDeviceDisplayPropertiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDisplayPropertiesKHR,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkQueueSubmit"] = {
            ["returnType"] = VkResult,
            ["group"] = queue commands,
            ["name"] = vkQueueSubmit,
            ["params"] = {
                [1] = {
                    ["name"] = queue,
                    ["type"] = VkQueue,
                    },
                [2] = {
                    ["name"] = submitCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkSubmitInfo,
                    ["name"] = pSubmits,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = fence,
                    ["type"] = VkFence,
                    },
                },
            },
        ["vkCmdEndRenderPass"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdEndRenderPass,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                },
            },
        ["vkCreateFence"] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkCreateFence,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkFenceCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkFence,
                    ["name"] = pFence,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroySemaphore"] = {
            ["returnType"] = void,
            ["group"] = Queue semaphore commands,
            ["name"] = vkDestroySemaphore,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = semaphore,
                    ["type"] = VkSemaphore,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdTraceRaysNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCmdTraceRaysNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = raygenShaderBindingTableBuffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = raygenShaderBindingOffset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = missShaderBindingTableBuffer,
                    ["type"] = VkBuffer,
                    },
                [5] = {
                    ["name"] = missShaderBindingOffset,
                    ["type"] = VkDeviceSize,
                    },
                [6] = {
                    ["name"] = missShaderBindingStride,
                    ["type"] = VkDeviceSize,
                    },
                [7] = {
                    ["name"] = hitShaderBindingTableBuffer,
                    ["type"] = VkBuffer,
                    },
                [8] = {
                    ["name"] = hitShaderBindingOffset,
                    ["type"] = VkDeviceSize,
                    },
                [9] = {
                    ["name"] = hitShaderBindingStride,
                    ["type"] = VkDeviceSize,
                    },
                [10] = {
                    ["name"] = callableShaderBindingTableBuffer,
                    ["type"] = VkBuffer,
                    },
                [11] = {
                    ["name"] = callableShaderBindingOffset,
                    ["type"] = VkDeviceSize,
                    },
                [12] = {
                    ["name"] = callableShaderBindingStride,
                    ["type"] = VkDeviceSize,
                    },
                [13] = {
                    ["name"] = width,
                    ["type"] = uint32_t,
                    },
                [14] = {
                    ["name"] = height,
                    ["type"] = uint32_t,
                    },
                [15] = {
                    ["name"] = depth,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceCapabilitiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_surface,
            ["name"] = vkGetPhysicalDeviceSurfaceCapabilitiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = VkSurfaceCapabilitiesKHR,
                    ["name"] = pSurfaceCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetDeviceGroupPresentCapabilitiesKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_swapchain,
            ["name"] = vkGetDeviceGroupPresentCapabilitiesKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["type"] = VkDeviceGroupPresentCapabilitiesKHR,
                    ["name"] = pDeviceGroupPresentCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateImagePipeSurfaceFUCHSIA"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_FUCHSIA_imagepipe_surface,
            ["name"] = vkCreateImagePipeSurfaceFUCHSIA,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImagePipeSurfaceCreateInfoFUCHSIA,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceKHR,
                    ["name"] = pSurface,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdClearDepthStencilImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdClearDepthStencilImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = image,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = imageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkClearDepthStencilValue,
                    ["name"] = pDepthStencil,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["name"] = rangeCount,
                    ["type"] = uint32_t,
                    },
                [6] = {
                    ["const"] = true,
                    ["type"] = VkImageSubresourceRange,
                    ["name"] = pRanges,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdWriteAccelerationStructuresPropertiesNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_ray_tracing,
            ["name"] = vkCmdWriteAccelerationStructuresPropertiesNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = accelerationStructureCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAccelerationStructureNV,
                    ["name"] = pAccelerationStructures,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = queryType,
                    ["type"] = VkQueryType,
                    },
                [5] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [6] = {
                    ["name"] = firstQuery,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceCapabilities2KHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_get_surface_capabilities2,
            ["name"] = vkGetPhysicalDeviceSurfaceCapabilities2KHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceSurfaceInfo2KHR,
                    ["name"] = pSurfaceInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkSurfaceCapabilities2KHR,
                    ["name"] = pSurfaceCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdWriteBufferMarkerAMD"] = {
            ["returnType"] = void,
            ["extension"] = VK_AMD_buffer_marker,
            ["name"] = vkCmdWriteBufferMarkerAMD,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = pipelineStage,
                    ["type"] = VkPipelineStageFlags,
                    },
                [3] = {
                    ["name"] = dstBuffer,
                    ["type"] = VkBuffer,
                    },
                [4] = {
                    ["name"] = dstOffset,
                    ["type"] = VkDeviceSize,
                    },
                [5] = {
                    ["name"] = marker,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkCmdDraw"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDraw,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = vertexCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = instanceCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["name"] = firstVertex,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = firstInstance,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkDestroyCommandPool"] = {
            ["returnType"] = void,
            ["group"] = Command pool commands,
            ["name"] = vkDestroyCommandPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = commandPool,
                    ["type"] = VkCommandPool,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDebugReportCallbackEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_debug_report,
            ["name"] = vkCreateDebugReportCallbackEXT,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugReportCallbackCreateInfoEXT,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDebugReportCallbackEXT,
                    ["name"] = pCallback,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkRegisterDeviceEventEXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_display_control,
            ["name"] = vkRegisterDeviceEventEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDeviceEventInfoEXT,
                    ["name"] = pDeviceEventInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkFence,
                    ["name"] = pFence,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkBindBufferMemory2"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_bind_memory2,
            ["name"] = vkBindBufferMemory2,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = bindInfoCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkBindBufferMemoryInfo,
                    ["name"] = pBindInfos,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkFlushMappedMemoryRanges"] = {
            ["returnType"] = VkResult,
            ["group"] = Memory commands,
            ["name"] = vkFlushMappedMemoryRanges,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memoryRangeCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkMappedMemoryRange,
                    ["name"] = pMemoryRanges,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyQueryPool"] = {
            ["returnType"] = void,
            ["group"] = Query commands,
            ["name"] = vkDestroyQueryPool,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkUnregisterObjectsNVX"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkUnregisterObjectsNVX,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = objectTable,
                    ["type"] = VkObjectTableNVX,
                    },
                [3] = {
                    ["name"] = objectCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkObjectEntryTypeNVX,
                    ["name"] = pObjectEntryTypes,
                    ["pointer"] = true,
                    },
                [5] = {
                    ["const"] = true,
                    ["type"] = uint32_t,
                    ["name"] = pObjectIndices,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDevice"] = {
            ["returnType"] = VkResult,
            ["group"] = Device commands,
            ["name"] = vkCreateDevice,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDeviceCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDevice,
                    ["name"] = pDevice,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawMeshTasksNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_mesh_shader,
            ["name"] = vkCmdDrawMeshTasksNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = taskCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = firstTask,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkCmdExecuteCommands"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdExecuteCommands,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = commandBufferCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkCommandBuffer,
                    ["name"] = pCommandBuffers,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkImportFenceFdKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_fence_fd,
            ["name"] = vkImportFenceFdKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImportFenceFdInfoKHR,
                    ["name"] = pImportFenceFdInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceFormatsKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_surface,
            ["name"] = vkGetPhysicalDeviceSurfaceFormatsKHR,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pSurfaceFormatCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSurfaceFormatKHR,
                    ["name"] = pSurfaceFormats,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateBuffer"] = {
            ["returnType"] = VkResult,
            ["group"] = Buffer commands,
            ["name"] = vkCreateBuffer,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkBufferCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkBuffer,
                    ["name"] = pBuffer,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceExternalFenceProperties"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_fence_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalFenceProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceExternalFenceInfo,
                    ["name"] = pExternalFenceInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkExternalFenceProperties,
                    ["name"] = pExternalFenceProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyImageView"] = {
            ["returnType"] = void,
            ["group"] = Image view commands,
            ["name"] = vkDestroyImageView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = imageView,
                    ["type"] = VkImageView,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateDescriptorUpdateTemplate"] = {
            ["returnType"] = VkResult,
            ["group"] = Promoted from VK_KHR_descriptor_update_template,
            ["name"] = vkCreateDescriptorUpdateTemplate,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorUpdateTemplateCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkDescriptorUpdateTemplate,
                    ["name"] = pDescriptorUpdateTemplate,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateBufferView"] = {
            ["returnType"] = VkResult,
            ["group"] = Buffer view commands,
            ["name"] = vkCreateBufferView,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkBufferViewCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkBufferView,
                    ["name"] = pView,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSparseImageFormatProperties2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceSparseImageFormatInfo2,
                    ["name"] = pFormatInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkSparseImageFormatProperties2,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkWaitForFences"] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkWaitForFences,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = fenceCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkFence,
                    ["name"] = pFences,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["name"] = waitAll,
                    ["type"] = VkBool32,
                    },
                [5] = {
                    ["name"] = timeout,
                    ["type"] = uint64_t,
                    },
                },
            },
        ["vkDestroyDescriptorSetLayout"] = {
            ["returnType"] = void,
            ["group"] = Descriptor set commands,
            ["name"] = vkDestroyDescriptorSetLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = descriptorSetLayout,
                    ["type"] = VkDescriptorSetLayout,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkEnumeratePhysicalDevices"] = {
            ["returnType"] = VkResult,
            ["group"] = Device initialization,
            ["name"] = vkEnumeratePhysicalDevices,
            ["params"] = {
                [1] = {
                    ["name"] = instance,
                    ["type"] = VkInstance,
                    },
                [2] = {
                    ["type"] = uint32_t,
                    ["name"] = pPhysicalDeviceCount,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkPhysicalDevice,
                    ["name"] = pPhysicalDevices,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdProcessCommandsNVX"] = {
            ["returnType"] = void,
            ["extension"] = VK_NVX_device_generated_commands,
            ["name"] = vkCmdProcessCommandsNVX,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkCmdProcessCommandsInfoNVX,
                    ["name"] = pProcessCommandsInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSurfaceCapabilities2EXT"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_EXT_display_surface_counter,
            ["name"] = vkGetPhysicalDeviceSurfaceCapabilities2EXT,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = surface,
                    ["type"] = VkSurfaceKHR,
                    },
                [3] = {
                    ["type"] = VkSurfaceCapabilities2EXT,
                    ["name"] = pSurfaceCapabilities,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkAllocateDescriptorSets"] = {
            ["returnType"] = VkResult,
            ["group"] = Descriptor set commands,
            ["name"] = vkAllocateDescriptorSets,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDescriptorSetAllocateInfo,
                    ["name"] = pAllocateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkDescriptorSet,
                    ["name"] = pDescriptorSets,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceMemoryProperties2"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_get_physical_device_properties2,
            ["name"] = vkGetPhysicalDeviceMemoryProperties2,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["type"] = VkPhysicalDeviceMemoryProperties2,
                    ["name"] = pMemoryProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceExternalSemaphoreProperties"] = {
            ["returnType"] = void,
            ["group"] = Promoted from VK_KHR_external_semaphore_capabilities,
            ["name"] = vkGetPhysicalDeviceExternalSemaphoreProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkPhysicalDeviceExternalSemaphoreInfo,
                    ["name"] = pExternalSemaphoreInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["type"] = VkExternalSemaphoreProperties,
                    ["name"] = pExternalSemaphoreProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdInsertDebugUtilsLabelEXT"] = {
            ["returnType"] = void,
            ["extension"] = VK_EXT_debug_utils,
            ["name"] = vkCmdInsertDebugUtilsLabelEXT,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugUtilsLabelEXT,
                    ["name"] = pLabelInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkFreeMemory"] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkFreeMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdWriteTimestamp"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdWriteTimestamp,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = pipelineStage,
                    ["type"] = VkPipelineStageFlags,
                    },
                [3] = {
                    ["name"] = queryPool,
                    ["type"] = VkQueryPool,
                    },
                [4] = {
                    ["name"] = query,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkEnumerateInstanceVersion"] = {
            ["returnType"] = VkResult,
            ["group"] = Device Initialization,
            ["name"] = vkEnumerateInstanceVersion,
            ["params"] = {
                [1] = {
                    ["type"] = uint32_t,
                    ["name"] = pApiVersion,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkImportSemaphoreFdKHR"] = {
            ["returnType"] = VkResult,
            ["extension"] = VK_KHR_external_semaphore_fd,
            ["name"] = vkImportSemaphoreFdKHR,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkImportSemaphoreFdInfoKHR,
                    ["name"] = pImportSemaphoreFdInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetFences"] = {
            ["returnType"] = VkResult,
            ["group"] = Fence commands,
            ["name"] = vkResetFences,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = fenceCount,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkFence,
                    ["name"] = pFences,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkResetEvent"] = {
            ["returnType"] = VkResult,
            ["group"] = Event commands,
            ["name"] = vkResetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                },
            },
        ["vkCmdSetViewportWScalingNV"] = {
            ["returnType"] = void,
            ["extension"] = VK_NV_clip_space_w_scaling,
            ["name"] = vkCmdSetViewportWScalingNV,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstViewport,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = viewportCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkViewportWScalingNV,
                    ["name"] = pViewportWScalings,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDebugMarkerSetObjectTagEXT"] = {
            ["returnType"] = VkResult,
            ["name"] = vkDebugMarkerSetObjectTagEXT,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkDebugMarkerObjectTagInfoEXT,
                    ["name"] = pTagInfo,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkDestroyPipelineLayout"] = {
            ["returnType"] = void,
            ["group"] = Pipeline layout commands,
            ["name"] = vkDestroyPipelineLayout,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = pipelineLayout,
                    ["type"] = VkPipelineLayout,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCreateShaderModule"] = {
            ["returnType"] = VkResult,
            ["group"] = Shader commands,
            ["name"] = vkCreateShaderModule,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["const"] = true,
                    ["type"] = VkShaderModuleCreateInfo,
                    ["name"] = pCreateInfo,
                    ["pointer"] = true,
                    },
                [3] = {
                    ["const"] = true,
                    ["type"] = VkAllocationCallbacks,
                    ["name"] = pAllocator,
                    ["pointer"] = true,
                    },
                [4] = {
                    ["type"] = VkShaderModule,
                    ["name"] = pShaderModule,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdDrawIndirect"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdDrawIndirect,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = buffer,
                    ["type"] = VkBuffer,
                    },
                [3] = {
                    ["name"] = offset,
                    ["type"] = VkDeviceSize,
                    },
                [4] = {
                    ["name"] = drawCount,
                    ["type"] = uint32_t,
                    },
                [5] = {
                    ["name"] = stride,
                    ["type"] = uint32_t,
                    },
                },
            },
        ["vkGetPhysicalDeviceFormatProperties"] = {
            ["returnType"] = void,
            ["group"] = Device initialization,
            ["name"] = vkGetPhysicalDeviceFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["type"] = VkFormatProperties,
                    ["name"] = pFormatProperties,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkCmdSetScissor"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdSetScissor,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = firstScissor,
                    ["type"] = uint32_t,
                    },
                [3] = {
                    ["name"] = scissorCount,
                    ["type"] = uint32_t,
                    },
                [4] = {
                    ["const"] = true,
                    ["type"] = VkRect2D,
                    ["name"] = pScissors,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkUnmapMemory"] = {
            ["returnType"] = void,
            ["group"] = Memory commands,
            ["name"] = vkUnmapMemory,
            ["params"] = {
                [1] = {
                    ["name"] = device,
                    ["type"] = VkDevice,
                    },
                [2] = {
                    ["name"] = memory,
                    ["type"] = VkDeviceMemory,
                    },
                },
            },
        ["vkCmdResetEvent"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResetEvent,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = event,
                    ["type"] = VkEvent,
                    },
                [3] = {
                    ["name"] = stageMask,
                    ["type"] = VkPipelineStageFlags,
                    },
                },
            },
        ["vkCmdResolveImage"] = {
            ["returnType"] = void,
            ["group"] = Command buffer building commands,
            ["name"] = vkCmdResolveImage,
            ["params"] = {
                [1] = {
                    ["name"] = commandBuffer,
                    ["type"] = VkCommandBuffer,
                    },
                [2] = {
                    ["name"] = srcImage,
                    ["type"] = VkImage,
                    },
                [3] = {
                    ["name"] = srcImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [4] = {
                    ["name"] = dstImage,
                    ["type"] = VkImage,
                    },
                [5] = {
                    ["name"] = dstImageLayout,
                    ["type"] = VkImageLayout,
                    },
                [6] = {
                    ["name"] = regionCount,
                    ["type"] = uint32_t,
                    },
                [7] = {
                    ["const"] = true,
                    ["type"] = VkImageResolve,
                    ["name"] = pRegions,
                    ["pointer"] = true,
                    },
                },
            },
        ["vkGetPhysicalDeviceSparseImageFormatProperties"] = {
            ["returnType"] = void,
            ["group"] = Sparse resource memory management API commands,
            ["name"] = vkGetPhysicalDeviceSparseImageFormatProperties,
            ["params"] = {
                [1] = {
                    ["name"] = physicalDevice,
                    ["type"] = VkPhysicalDevice,
                    },
                [2] = {
                    ["name"] = format,
                    ["type"] = VkFormat,
                    },
                [3] = {
                    ["name"] = type,
                    ["type"] = VkImageType,
                    },
                [4] = {
                    ["name"] = samples,
                    ["type"] = VkSampleCountFlags,
                    },
                [5] = {
                    ["name"] = usage,
                    ["type"] = VkImageUsageFlags,
                    },
                [6] = {
                    ["name"] = tiling,
                    ["type"] = VkImageTiling,
                    },
                [7] = {
                    ["type"] = uint32_t,
                    ["name"] = pPropertyCount,
                    ["pointer"] = true,
                    },
                [8] = {
                    ["type"] = VkSparseImageFormatProperties,
                    ["name"] = pProperties,
                    ["pointer"] = true,
                    },
                },
            },
        },
    ["tags"] = {
        [1] = IMG,
        [2] = AMD,
        [3] = AMDX,
        [4] = ARM,
        [5] = FSL,
        [6] = BRCM,
        [7] = NXP,
        [8] = NV,
        [9] = NVX,
        [10] = VIV,
        [11] = VSI,
        [12] = KDAB,
        [13] = ANDROID,
        [14] = CHROMIUM,
        [15] = FUCHSIA,
        [16] = GGP,
        [17] = GOOGLE,
        [18] = QCOM,
        [19] = LUNARG,
        [20] = SAMSUNG,
        [21] = SEC,
        [22] = TIZEN,
        [23] = RENDERDOC,
        [24] = NN,
        [25] = MVK,
        [26] = KHR,
        [27] = KHX,
        [28] = EXT,
        [29] = MESA,
        },
    ["api"] = {
        ["commands"] = {
            [1] = vkCreateInstance,
            [2] = vkDestroyInstance,
            [3] = vkEnumeratePhysicalDevices,
            [4] = vkGetPhysicalDeviceFeatures,
            [5] = vkGetPhysicalDeviceFormatProperties,
            [6] = vkGetPhysicalDeviceImageFormatProperties,
            [7] = vkGetPhysicalDeviceProperties,
            [8] = vkGetPhysicalDeviceQueueFamilyProperties,
            [9] = vkGetPhysicalDeviceMemoryProperties,
            [10] = vkGetInstanceProcAddr,
            [11] = vkGetDeviceProcAddr,
            [12] = vkCreateDevice,
            [13] = vkDestroyDevice,
            [14] = vkEnumerateInstanceExtensionProperties,
            [15] = vkEnumerateDeviceExtensionProperties,
            [16] = vkEnumerateInstanceLayerProperties,
            [17] = vkEnumerateDeviceLayerProperties,
            [18] = vkGetDeviceQueue,
            [19] = vkQueueSubmit,
            [20] = vkQueueWaitIdle,
            [21] = vkDeviceWaitIdle,
            [22] = vkAllocateMemory,
            [23] = vkFreeMemory,
            [24] = vkMapMemory,
            [25] = vkUnmapMemory,
            [26] = vkFlushMappedMemoryRanges,
            [27] = vkInvalidateMappedMemoryRanges,
            [28] = vkGetDeviceMemoryCommitment,
            [29] = vkBindBufferMemory,
            [30] = vkBindImageMemory,
            [31] = vkGetBufferMemoryRequirements,
            [32] = vkGetImageMemoryRequirements,
            [33] = vkGetImageSparseMemoryRequirements,
            [34] = vkGetPhysicalDeviceSparseImageFormatProperties,
            [35] = vkQueueBindSparse,
            [36] = vkCreateFence,
            [37] = vkDestroyFence,
            [38] = vkResetFences,
            [39] = vkGetFenceStatus,
            [40] = vkWaitForFences,
            [41] = vkCreateSemaphore,
            [42] = vkDestroySemaphore,
            [43] = vkCreateEvent,
            [44] = vkDestroyEvent,
            [45] = vkGetEventStatus,
            [46] = vkSetEvent,
            [47] = vkResetEvent,
            [48] = vkCreateQueryPool,
            [49] = vkDestroyQueryPool,
            [50] = vkGetQueryPoolResults,
            [51] = vkCreateBuffer,
            [52] = vkDestroyBuffer,
            [53] = vkCreateBufferView,
            [54] = vkDestroyBufferView,
            [55] = vkCreateImage,
            [56] = vkDestroyImage,
            [57] = vkGetImageSubresourceLayout,
            [58] = vkCreateImageView,
            [59] = vkDestroyImageView,
            [60] = vkCreateShaderModule,
            [61] = vkDestroyShaderModule,
            [62] = vkCreatePipelineCache,
            [63] = vkDestroyPipelineCache,
            [64] = vkGetPipelineCacheData,
            [65] = vkMergePipelineCaches,
            [66] = vkCreateGraphicsPipelines,
            [67] = vkCreateComputePipelines,
            [68] = vkDestroyPipeline,
            [69] = vkCreatePipelineLayout,
            [70] = vkDestroyPipelineLayout,
            [71] = vkCreateSampler,
            [72] = vkDestroySampler,
            [73] = vkCreateDescriptorSetLayout,
            [74] = vkDestroyDescriptorSetLayout,
            [75] = vkCreateDescriptorPool,
            [76] = vkDestroyDescriptorPool,
            [77] = vkResetDescriptorPool,
            [78] = vkAllocateDescriptorSets,
            [79] = vkFreeDescriptorSets,
            [80] = vkUpdateDescriptorSets,
            [81] = vkCreateFramebuffer,
            [82] = vkDestroyFramebuffer,
            [83] = vkCreateRenderPass,
            [84] = vkDestroyRenderPass,
            [85] = vkGetRenderAreaGranularity,
            [86] = vkCreateCommandPool,
            [87] = vkDestroyCommandPool,
            [88] = vkResetCommandPool,
            [89] = vkAllocateCommandBuffers,
            [90] = vkFreeCommandBuffers,
            [91] = vkBeginCommandBuffer,
            [92] = vkEndCommandBuffer,
            [93] = vkResetCommandBuffer,
            [94] = vkCmdBindPipeline,
            [95] = vkCmdSetViewport,
            [96] = vkCmdSetScissor,
            [97] = vkCmdSetLineWidth,
            [98] = vkCmdSetDepthBias,
            [99] = vkCmdSetBlendConstants,
            [100] = vkCmdSetDepthBounds,
            [101] = vkCmdSetStencilCompareMask,
            [102] = vkCmdSetStencilWriteMask,
            [103] = vkCmdSetStencilReference,
            [104] = vkCmdBindDescriptorSets,
            [105] = vkCmdBindIndexBuffer,
            [106] = vkCmdBindVertexBuffers,
            [107] = vkCmdDraw,
            [108] = vkCmdDrawIndexed,
            [109] = vkCmdDrawIndirect,
            [110] = vkCmdDrawIndexedIndirect,
            [111] = vkCmdDispatch,
            [112] = vkCmdDispatchIndirect,
            [113] = vkCmdCopyBuffer,
            [114] = vkCmdCopyImage,
            [115] = vkCmdBlitImage,
            [116] = vkCmdCopyBufferToImage,
            [117] = vkCmdCopyImageToBuffer,
            [118] = vkCmdUpdateBuffer,
            [119] = vkCmdFillBuffer,
            [120] = vkCmdClearColorImage,
            [121] = vkCmdClearDepthStencilImage,
            [122] = vkCmdClearAttachments,
            [123] = vkCmdResolveImage,
            [124] = vkCmdSetEvent,
            [125] = vkCmdResetEvent,
            [126] = vkCmdWaitEvents,
            [127] = vkCmdPipelineBarrier,
            [128] = vkCmdBeginQuery,
            [129] = vkCmdEndQuery,
            [130] = vkCmdResetQueryPool,
            [131] = vkCmdWriteTimestamp,
            [132] = vkCmdCopyQueryPoolResults,
            [133] = vkCmdPushConstants,
            [134] = vkCmdBeginRenderPass,
            [135] = vkCmdNextSubpass,
            [136] = vkCmdEndRenderPass,
            [137] = vkCmdExecuteCommands,
            [138] = vkEnumerateInstanceVersion,
            [139] = vkBindBufferMemory2,
            [140] = vkBindImageMemory2,
            [141] = vkGetDeviceGroupPeerMemoryFeatures,
            [142] = vkCmdSetDeviceMask,
            [143] = vkCmdDispatchBase,
            [144] = vkEnumeratePhysicalDeviceGroups,
            [145] = vkGetImageMemoryRequirements2,
            [146] = vkGetBufferMemoryRequirements2,
            [147] = vkGetImageSparseMemoryRequirements2,
            [148] = vkGetPhysicalDeviceFeatures2,
            [149] = vkGetPhysicalDeviceProperties2,
            [150] = vkGetPhysicalDeviceFormatProperties2,
            [151] = vkGetPhysicalDeviceImageFormatProperties2,
            [152] = vkGetPhysicalDeviceQueueFamilyProperties2,
            [153] = vkGetPhysicalDeviceMemoryProperties2,
            [154] = vkGetPhysicalDeviceSparseImageFormatProperties2,
            [155] = vkTrimCommandPool,
            [156] = vkGetDeviceQueue2,
            [157] = vkCreateSamplerYcbcrConversion,
            [158] = vkDestroySamplerYcbcrConversion,
            [159] = vkCreateDescriptorUpdateTemplate,
            [160] = vkDestroyDescriptorUpdateTemplate,
            [161] = vkUpdateDescriptorSetWithTemplate,
            [162] = vkGetPhysicalDeviceExternalBufferProperties,
            [163] = vkGetPhysicalDeviceExternalFenceProperties,
            [164] = vkGetPhysicalDeviceExternalSemaphoreProperties,
            [165] = vkGetDescriptorSetLayoutSupport,
            },
        ["funcpointers"] = {
            [1] = PFN_vkAllocationFunction,
            [2] = PFN_vkReallocationFunction,
            [3] = PFN_vkFreeFunction,
            [4] = PFN_vkInternalAllocationNotification,
            [5] = PFN_vkInternalFreeNotification,
            [6] = PFN_vkVoidFunction,
            },
        ["enums"] = {
            [1] = VkPipelineCacheHeaderVersion,
            [2] = VkResult,
            [3] = VkStructureType,
            [4] = VkSystemAllocationScope,
            [5] = VkInternalAllocationType,
            [6] = VkFormat,
            [7] = VkImageType,
            [8] = VkImageTiling,
            [9] = VkPhysicalDeviceType,
            [10] = VkQueryType,
            [11] = VkSharingMode,
            [12] = VkImageLayout,
            [13] = VkImageViewType,
            [14] = VkComponentSwizzle,
            [15] = VkVertexInputRate,
            [16] = VkPrimitiveTopology,
            [17] = VkPolygonMode,
            [18] = VkFrontFace,
            [19] = VkCompareOp,
            [20] = VkStencilOp,
            [21] = VkLogicOp,
            [22] = VkBlendFactor,
            [23] = VkBlendOp,
            [24] = VkDynamicState,
            [25] = VkFilter,
            [26] = VkSamplerMipmapMode,
            [27] = VkSamplerAddressMode,
            [28] = VkBorderColor,
            [29] = VkDescriptorType,
            [30] = VkAttachmentLoadOp,
            [31] = VkAttachmentStoreOp,
            [32] = VkPipelineBindPoint,
            [33] = VkCommandBufferLevel,
            [34] = VkIndexType,
            [35] = VkSubpassContents,
            [36] = VkObjectType,
            [37] = VkVendorId,
            [38] = VkPointClippingBehavior,
            [39] = VkTessellationDomainOrigin,
            [40] = VkSamplerYcbcrModelConversion,
            [41] = VkSamplerYcbcrRange,
            [42] = VkChromaLocation,
            [43] = VkDescriptorUpdateTemplateType,
            },
        ["bitmasks"] = {
            [1] = VkInstanceCreateFlags,
            [2] = VkFormatFeatureFlags,
            [3] = VkImageUsageFlags,
            [4] = VkImageCreateFlags,
            [5] = VkSampleCountFlags,
            [6] = VkQueueFlags,
            [7] = VkMemoryPropertyFlags,
            [8] = VkMemoryHeapFlags,
            [9] = VkDeviceCreateFlags,
            [10] = VkDeviceQueueCreateFlags,
            [11] = VkPipelineStageFlags,
            [12] = VkMemoryMapFlags,
            [13] = VkImageAspectFlags,
            [14] = VkSparseImageFormatFlags,
            [15] = VkSparseMemoryBindFlags,
            [16] = VkFenceCreateFlags,
            [17] = VkSemaphoreCreateFlags,
            [18] = VkEventCreateFlags,
            [19] = VkQueryPoolCreateFlags,
            [20] = VkQueryPipelineStatisticFlags,
            [21] = VkQueryResultFlags,
            [22] = VkBufferCreateFlags,
            [23] = VkBufferUsageFlags,
            [24] = VkBufferViewCreateFlags,
            [25] = VkImageViewCreateFlags,
            [26] = VkShaderModuleCreateFlags,
            [27] = VkPipelineCacheCreateFlags,
            [28] = VkPipelineCreateFlags,
            [29] = VkPipelineShaderStageCreateFlags,
            [30] = VkShaderStageFlags,
            [31] = VkPipelineVertexInputStateCreateFlags,
            [32] = VkPipelineInputAssemblyStateCreateFlags,
            [33] = VkPipelineTessellationStateCreateFlags,
            [34] = VkPipelineViewportStateCreateFlags,
            [35] = VkPipelineRasterizationStateCreateFlags,
            [36] = VkCullModeFlags,
            [37] = VkPipelineMultisampleStateCreateFlags,
            [38] = VkPipelineDepthStencilStateCreateFlags,
            [39] = VkPipelineColorBlendStateCreateFlags,
            [40] = VkColorComponentFlags,
            [41] = VkPipelineDynamicStateCreateFlags,
            [42] = VkPipelineLayoutCreateFlags,
            [43] = VkSamplerCreateFlags,
            [44] = VkDescriptorSetLayoutCreateFlags,
            [45] = VkDescriptorPoolCreateFlags,
            [46] = VkDescriptorPoolResetFlags,
            [47] = VkFramebufferCreateFlags,
            [48] = VkRenderPassCreateFlags,
            [49] = VkAttachmentDescriptionFlags,
            [50] = VkSubpassDescriptionFlags,
            [51] = VkAccessFlags,
            [52] = VkDependencyFlags,
            [53] = VkCommandPoolCreateFlags,
            [54] = VkCommandPoolResetFlags,
            [55] = VkCommandBufferUsageFlags,
            [56] = VkQueryControlFlags,
            [57] = VkCommandBufferResetFlags,
            [58] = VkStencilFaceFlags,
            [59] = VkSubgroupFeatureFlags,
            [60] = VkPeerMemoryFeatureFlags,
            [61] = VkMemoryAllocateFlags,
            [62] = VkCommandPoolTrimFlags,
            [63] = VkDescriptorUpdateTemplateCreateFlags,
            [64] = VkExternalMemoryHandleTypeFlags,
            [65] = VkExternalMemoryFeatureFlags,
            [66] = VkExternalFenceHandleTypeFlags,
            [67] = VkExternalFenceFeatureFlags,
            [68] = VkFenceImportFlags,
            [69] = VkSemaphoreImportFlags,
            [70] = VkExternalSemaphoreHandleTypeFlags,
            [71] = VkExternalSemaphoreFeatureFlags,
            },
        ["handles"] = {
            [1] = VkInstance,
            [2] = VkPhysicalDevice,
            [3] = VkDevice,
            [4] = VkQueue,
            [5] = VkSemaphore,
            [6] = VkCommandBuffer,
            [7] = VkFence,
            [8] = VkDeviceMemory,
            [9] = VkBuffer,
            [10] = VkImage,
            [11] = VkEvent,
            [12] = VkQueryPool,
            [13] = VkBufferView,
            [14] = VkImageView,
            [15] = VkShaderModule,
            [16] = VkPipelineCache,
            [17] = VkPipelineLayout,
            [18] = VkRenderPass,
            [19] = VkPipeline,
            [20] = VkDescriptorSetLayout,
            [21] = VkSampler,
            [22] = VkDescriptorPool,
            [23] = VkDescriptorSet,
            [24] = VkFramebuffer,
            [25] = VkCommandPool,
            [26] = VkSamplerYcbcrConversion,
            [27] = VkDescriptorUpdateTemplate,
            },
        ["structs"] = {
            [1] = VkInstanceCreateInfo,
            [2] = VkApplicationInfo,
            [3] = VkAllocationCallbacks,
            [4] = VkPhysicalDeviceFeatures,
            [5] = VkFormatProperties,
            [6] = VkImageFormatProperties,
            [7] = VkExtent3D,
            [8] = VkPhysicalDeviceProperties,
            [9] = VkPhysicalDeviceLimits,
            [10] = VkPhysicalDeviceSparseProperties,
            [11] = VkQueueFamilyProperties,
            [12] = VkPhysicalDeviceMemoryProperties,
            [13] = VkMemoryType,
            [14] = VkMemoryHeap,
            [15] = VkDeviceCreateInfo,
            [16] = VkDeviceQueueCreateInfo,
            [17] = VkExtensionProperties,
            [18] = VkLayerProperties,
            [19] = VkSubmitInfo,
            [20] = VkMemoryAllocateInfo,
            [21] = VkMappedMemoryRange,
            [22] = VkMemoryRequirements,
            [23] = VkSparseImageMemoryRequirements,
            [24] = VkSparseImageFormatProperties,
            [25] = VkBindSparseInfo,
            [26] = VkSparseBufferMemoryBindInfo,
            [27] = VkSparseMemoryBind,
            [28] = VkSparseImageOpaqueMemoryBindInfo,
            [29] = VkSparseImageMemoryBindInfo,
            [30] = VkSparseImageMemoryBind,
            [31] = VkImageSubresource,
            [32] = VkOffset3D,
            [33] = VkFenceCreateInfo,
            [34] = VkSemaphoreCreateInfo,
            [35] = VkEventCreateInfo,
            [36] = VkQueryPoolCreateInfo,
            [37] = VkBufferCreateInfo,
            [38] = VkBufferViewCreateInfo,
            [39] = VkImageCreateInfo,
            [40] = VkSubresourceLayout,
            [41] = VkImageViewCreateInfo,
            [42] = VkComponentMapping,
            [43] = VkImageSubresourceRange,
            [44] = VkShaderModuleCreateInfo,
            [45] = VkPipelineCacheCreateInfo,
            [46] = VkGraphicsPipelineCreateInfo,
            [47] = VkPipelineShaderStageCreateInfo,
            [48] = VkSpecializationInfo,
            [49] = VkSpecializationMapEntry,
            [50] = VkPipelineVertexInputStateCreateInfo,
            [51] = VkVertexInputBindingDescription,
            [52] = VkVertexInputAttributeDescription,
            [53] = VkPipelineInputAssemblyStateCreateInfo,
            [54] = VkPipelineTessellationStateCreateInfo,
            [55] = VkPipelineViewportStateCreateInfo,
            [56] = VkViewport,
            [57] = VkRect2D,
            [58] = VkOffset2D,
            [59] = VkExtent2D,
            [60] = VkPipelineRasterizationStateCreateInfo,
            [61] = VkPipelineMultisampleStateCreateInfo,
            [62] = VkPipelineDepthStencilStateCreateInfo,
            [63] = VkStencilOpState,
            [64] = VkPipelineColorBlendStateCreateInfo,
            [65] = VkPipelineColorBlendAttachmentState,
            [66] = VkPipelineDynamicStateCreateInfo,
            [67] = VkComputePipelineCreateInfo,
            [68] = VkPipelineLayoutCreateInfo,
            [69] = VkPushConstantRange,
            [70] = VkSamplerCreateInfo,
            [71] = VkDescriptorSetLayoutCreateInfo,
            [72] = VkDescriptorSetLayoutBinding,
            [73] = VkDescriptorPoolCreateInfo,
            [74] = VkDescriptorPoolSize,
            [75] = VkDescriptorSetAllocateInfo,
            [76] = VkWriteDescriptorSet,
            [77] = VkDescriptorImageInfo,
            [78] = VkDescriptorBufferInfo,
            [79] = VkCopyDescriptorSet,
            [80] = VkFramebufferCreateInfo,
            [81] = VkRenderPassCreateInfo,
            [82] = VkAttachmentDescription,
            [83] = VkSubpassDescription,
            [84] = VkAttachmentReference,
            [85] = VkSubpassDependency,
            [86] = VkCommandPoolCreateInfo,
            [87] = VkCommandBufferAllocateInfo,
            [88] = VkCommandBufferBeginInfo,
            [89] = VkCommandBufferInheritanceInfo,
            [90] = VkBufferCopy,
            [91] = VkImageCopy,
            [92] = VkImageSubresourceLayers,
            [93] = VkImageBlit,
            [94] = VkBufferImageCopy,
            [95] = VkClearDepthStencilValue,
            [96] = VkClearAttachment,
            [97] = VkClearRect,
            [98] = VkImageResolve,
            [99] = VkMemoryBarrier,
            [100] = VkBufferMemoryBarrier,
            [101] = VkImageMemoryBarrier,
            [102] = VkRenderPassBeginInfo,
            [103] = VkDispatchIndirectCommand,
            [104] = VkDrawIndexedIndirectCommand,
            [105] = VkDrawIndirectCommand,
            [106] = VkBaseOutStructure,
            [107] = VkBaseInStructure,
            [108] = VkPhysicalDeviceSubgroupProperties,
            [109] = VkBindBufferMemoryInfo,
            [110] = VkBindImageMemoryInfo,
            [111] = VkPhysicalDevice16BitStorageFeatures,
            [112] = VkMemoryDedicatedRequirements,
            [113] = VkMemoryDedicatedAllocateInfo,
            [114] = VkMemoryAllocateFlagsInfo,
            [115] = VkDeviceGroupRenderPassBeginInfo,
            [116] = VkDeviceGroupCommandBufferBeginInfo,
            [117] = VkDeviceGroupSubmitInfo,
            [118] = VkDeviceGroupBindSparseInfo,
            [119] = VkBindBufferMemoryDeviceGroupInfo,
            [120] = VkBindImageMemoryDeviceGroupInfo,
            [121] = VkPhysicalDeviceGroupProperties,
            [122] = VkDeviceGroupDeviceCreateInfo,
            [123] = VkBufferMemoryRequirementsInfo2,
            [124] = VkImageMemoryRequirementsInfo2,
            [125] = VkImageSparseMemoryRequirementsInfo2,
            [126] = VkMemoryRequirements2,
            [127] = VkSparseImageMemoryRequirements2,
            [128] = VkPhysicalDeviceFeatures2,
            [129] = VkPhysicalDeviceProperties2,
            [130] = VkFormatProperties2,
            [131] = VkImageFormatProperties2,
            [132] = VkPhysicalDeviceImageFormatInfo2,
            [133] = VkQueueFamilyProperties2,
            [134] = VkPhysicalDeviceMemoryProperties2,
            [135] = VkSparseImageFormatProperties2,
            [136] = VkPhysicalDeviceSparseImageFormatInfo2,
            [137] = VkPhysicalDevicePointClippingProperties,
            [138] = VkRenderPassInputAttachmentAspectCreateInfo,
            [139] = VkInputAttachmentAspectReference,
            [140] = VkImageViewUsageCreateInfo,
            [141] = VkPipelineTessellationDomainOriginStateCreateInfo,
            [142] = VkRenderPassMultiviewCreateInfo,
            [143] = VkPhysicalDeviceMultiviewFeatures,
            [144] = VkPhysicalDeviceMultiviewProperties,
            [145] = VkPhysicalDeviceVariablePointersFeatures,
            [146] = VkPhysicalDeviceProtectedMemoryFeatures,
            [147] = VkPhysicalDeviceProtectedMemoryProperties,
            [148] = VkDeviceQueueInfo2,
            [149] = VkProtectedSubmitInfo,
            [150] = VkSamplerYcbcrConversionCreateInfo,
            [151] = VkSamplerYcbcrConversionInfo,
            [152] = VkBindImagePlaneMemoryInfo,
            [153] = VkImagePlaneMemoryRequirementsInfo,
            [154] = VkPhysicalDeviceSamplerYcbcrConversionFeatures,
            [155] = VkSamplerYcbcrConversionImageFormatProperties,
            [156] = VkDescriptorUpdateTemplateCreateInfo,
            [157] = VkDescriptorUpdateTemplateEntry,
            [158] = VkExternalMemoryProperties,
            [159] = VkPhysicalDeviceExternalImageFormatInfo,
            [160] = VkExternalImageFormatProperties,
            [161] = VkPhysicalDeviceExternalBufferInfo,
            [162] = VkExternalBufferProperties,
            [163] = VkPhysicalDeviceIDProperties,
            [164] = VkExternalMemoryImageCreateInfo,
            [165] = VkExternalMemoryBufferCreateInfo,
            [166] = VkExportMemoryAllocateInfo,
            [167] = VkPhysicalDeviceExternalFenceInfo,
            [168] = VkExternalFenceProperties,
            [169] = VkExportFenceCreateInfo,
            [170] = VkExportSemaphoreCreateInfo,
            [171] = VkPhysicalDeviceExternalSemaphoreInfo,
            [172] = VkExternalSemaphoreProperties,
            [173] = VkPhysicalDeviceMaintenance3Properties,
            [174] = VkDescriptorSetLayoutSupport,
            [175] = VkPhysicalDeviceShaderDrawParametersFeatures,
            },
        ["unions"] = {
            [1] = VkClearColorValue,
            [2] = VkClearValue,
            },
        },
    ["extensions"] = {
        [1] = {
            ["number"] = 1,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkSurfaceTransformFlagsKHR,
                [2] = VkCompositeAlphaFlagsKHR,
                },
            ["structs"] = {
                [1] = VkSurfaceCapabilitiesKHR,
                [2] = VkSurfaceFormatKHR,
                },
            ["commands"] = {
                [1] = vkDestroySurfaceKHR,
                [2] = vkGetPhysicalDeviceSurfaceSupportKHR,
                [3] = vkGetPhysicalDeviceSurfaceCapabilitiesKHR,
                [4] = vkGetPhysicalDeviceSurfaceFormatsKHR,
                [5] = vkGetPhysicalDeviceSurfacePresentModesKHR,
                },
            ["name"] = VK_KHR_surface,
            ["enums"] = {
                [1] = VkColorSpaceKHR,
                [2] = VkPresentModeKHR,
                },
            ["type"] = instance,
            ["handles"] = {
                [1] = VkSurfaceKHR,
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [2] = {
            ["number"] = 2,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkSwapchainCreateFlagsKHR,
                [2] = VkDeviceGroupPresentModeFlagsKHR,
                },
            ["structs"] = {
                [1] = VkSwapchainCreateInfoKHR,
                [2] = VkPresentInfoKHR,
                [3] = VkImageSwapchainCreateInfoKHR,
                [4] = VkBindImageMemorySwapchainInfoKHR,
                [5] = VkAcquireNextImageInfoKHR,
                [6] = VkDeviceGroupPresentCapabilitiesKHR,
                [7] = VkDeviceGroupPresentInfoKHR,
                [8] = VkDeviceGroupSwapchainCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateSwapchainKHR,
                [2] = vkDestroySwapchainKHR,
                [3] = vkGetSwapchainImagesKHR,
                [4] = vkAcquireNextImageKHR,
                [5] = vkQueuePresentKHR,
                [6] = vkGetDeviceGroupPresentCapabilitiesKHR,
                [7] = vkGetDeviceGroupSurfacePresentModesKHR,
                [8] = vkGetPhysicalDevicePresentRectanglesKHR,
                [9] = vkAcquireNextImage2KHR,
                },
            ["name"] = VK_KHR_swapchain,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                [1] = VkSwapchainKHR,
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [3] = {
            ["number"] = 3,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkDisplayPlaneAlphaFlagsKHR,
                [2] = VkDisplayModeCreateFlagsKHR,
                [3] = VkDisplaySurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkDisplayPropertiesKHR,
                [2] = VkDisplayModeParametersKHR,
                [3] = VkDisplayModePropertiesKHR,
                [4] = VkDisplayModeCreateInfoKHR,
                [5] = VkDisplayPlaneCapabilitiesKHR,
                [6] = VkDisplayPlanePropertiesKHR,
                [7] = VkDisplaySurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceDisplayPropertiesKHR,
                [2] = vkGetPhysicalDeviceDisplayPlanePropertiesKHR,
                [3] = vkGetDisplayPlaneSupportedDisplaysKHR,
                [4] = vkGetDisplayModePropertiesKHR,
                [5] = vkCreateDisplayModeKHR,
                [6] = vkGetDisplayPlaneCapabilitiesKHR,
                [7] = vkCreateDisplayPlaneSurfaceKHR,
                },
            ["name"] = VK_KHR_display,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                [1] = VkDisplayKHR,
                [2] = VkDisplayModeKHR,
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [4] = {
            ["number"] = 4,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDisplayPresentInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateSharedSwapchainsKHR,
                },
            ["name"] = VK_KHR_display_swapchain,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [5] = {
            ["number"] = 5,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkXlibSurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkXlibSurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateXlibSurfaceKHR,
                [2] = vkGetPhysicalDeviceXlibPresentationSupportKHR,
                },
            ["name"] = VK_KHR_xlib_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [6] = {
            ["number"] = 6,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkXcbSurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkXcbSurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateXcbSurfaceKHR,
                [2] = vkGetPhysicalDeviceXcbPresentationSupportKHR,
                },
            ["name"] = VK_KHR_xcb_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [7] = {
            ["number"] = 7,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkWaylandSurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkWaylandSurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateWaylandSurfaceKHR,
                [2] = vkGetPhysicalDeviceWaylandPresentationSupportKHR,
                },
            ["name"] = VK_KHR_wayland_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [9] = {
            ["number"] = 9,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkAndroidSurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkAndroidSurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateAndroidSurfaceKHR,
                },
            ["name"] = VK_KHR_android_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [10] = {
            ["number"] = 10,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkWin32SurfaceCreateFlagsKHR,
                },
            ["structs"] = {
                [1] = VkWin32SurfaceCreateInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateWin32SurfaceKHR,
                [2] = vkGetPhysicalDeviceWin32PresentationSupportKHR,
                },
            ["name"] = VK_KHR_win32_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [12] = {
            ["number"] = 12,
            ["funcpointers"] = {
                [1] = PFN_vkDebugReportCallbackEXT,
                },
            ["bitmasks"] = {
                [1] = VkDebugReportFlagsEXT,
                },
            ["structs"] = {
                [1] = VkDebugReportCallbackCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCreateDebugReportCallbackEXT,
                [2] = vkDestroyDebugReportCallbackEXT,
                [3] = vkDebugReportMessageEXT,
                },
            ["name"] = VK_EXT_debug_report,
            ["enums"] = {
                [1] = VkDebugReportObjectTypeEXT,
                },
            ["type"] = instance,
            ["handles"] = {
                [1] = VkDebugReportCallbackEXT,
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [13] = {
            ["number"] = 13,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_glsl_shader,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [14] = {
            ["number"] = 14,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_depth_range_unrestricted,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [15] = {
            ["number"] = 15,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_sampler_mirror_clamp_to_edge,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [16] = {
            ["number"] = 16,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_IMG_filter_cubic,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = IMG,
            },
        [19] = {
            ["number"] = 19,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPipelineRasterizationStateRasterizationOrderAMD,
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_rasterization_order,
            ["enums"] = {
                [1] = VkRasterizationOrderAMD,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [21] = {
            ["number"] = 21,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_trinary_minmax,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [22] = {
            ["number"] = 22,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_explicit_vertex_parameter,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [26] = {
            ["number"] = 26,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_gcn_shader,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [27] = {
            ["number"] = 27,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDedicatedAllocationImageCreateInfoNV,
                [2] = VkDedicatedAllocationBufferCreateInfoNV,
                [3] = VkDedicatedAllocationMemoryAllocateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_dedicated_allocation,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [29] = {
            ["number"] = 29,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineRasterizationStateStreamCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceTransformFeedbackFeaturesEXT,
                [2] = VkPhysicalDeviceTransformFeedbackPropertiesEXT,
                [3] = VkPipelineRasterizationStateStreamCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCmdBindTransformFeedbackBuffersEXT,
                [2] = vkCmdBeginTransformFeedbackEXT,
                [3] = vkCmdEndTransformFeedbackEXT,
                [4] = vkCmdBeginQueryIndexedEXT,
                [5] = vkCmdEndQueryIndexedEXT,
                [6] = vkCmdDrawIndirectByteCountEXT,
                },
            ["name"] = VK_EXT_transform_feedback,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [31] = {
            ["number"] = 31,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImageViewHandleInfoNVX,
                },
            ["commands"] = {
                [1] = vkGetImageViewHandleNVX,
                },
            ["name"] = VK_NVX_image_view_handle,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NVX,
            },
        [36] = {
            ["number"] = 36,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_negative_viewport_height,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [37] = {
            ["number"] = 37,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_gpu_shader_half_float,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [38] = {
            ["number"] = 38,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_ballot,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [42] = {
            ["number"] = 42,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkTextureLODGatherFormatPropertiesAMD,
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_texture_gather_bias_lod,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [43] = {
            ["number"] = 43,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkShaderResourceUsageAMD,
                [2] = VkShaderStatisticsInfoAMD,
                },
            ["commands"] = {
                [1] = vkGetShaderInfoAMD,
                },
            ["name"] = VK_AMD_shader_info,
            ["enums"] = {
                [1] = VkShaderInfoTypeAMD,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [47] = {
            ["number"] = 47,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_image_load_store_lod,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [50] = {
            ["number"] = 50,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkStreamDescriptorSurfaceCreateFlagsGGP,
                },
            ["structs"] = {
                [1] = VkStreamDescriptorSurfaceCreateInfoGGP,
                },
            ["commands"] = {
                [1] = vkCreateStreamDescriptorSurfaceGGP,
                },
            ["name"] = VK_GGP_stream_descriptor_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = GGP,
            },
        [51] = {
            ["number"] = 51,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceCornerSampledImageFeaturesNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_corner_sampled_image,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [55] = {
            ["number"] = 55,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_IMG_format_pvrtc,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = IMG,
            },
        [56] = {
            ["number"] = 56,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkExternalMemoryHandleTypeFlagsNV,
                [2] = VkExternalMemoryFeatureFlagsNV,
                },
            ["structs"] = {
                [1] = VkExternalImageFormatPropertiesNV,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceExternalImageFormatPropertiesNV,
                },
            ["name"] = VK_NV_external_memory_capabilities,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [57] = {
            ["number"] = 57,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkExternalMemoryImageCreateInfoNV,
                [2] = VkExportMemoryAllocateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_external_memory,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [58] = {
            ["number"] = 58,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportMemoryWin32HandleInfoNV,
                [2] = VkExportMemoryWin32HandleInfoNV,
                },
            ["commands"] = {
                [1] = vkGetMemoryWin32HandleNV,
                },
            ["name"] = VK_NV_external_memory_win32,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [62] = {
            ["number"] = 62,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkValidationFlagsEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_validation_flags,
            ["enums"] = {
                [1] = VkValidationCheckEXT,
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [63] = {
            ["number"] = 63,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkViSurfaceCreateFlagsNN,
                },
            ["structs"] = {
                [1] = VkViSurfaceCreateInfoNN,
                },
            ["commands"] = {
                [1] = vkCreateViSurfaceNN,
                },
            ["name"] = VK_NN_vi_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NN,
            },
        [65] = {
            ["number"] = 65,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_shader_subgroup_ballot,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [66] = {
            ["number"] = 66,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_shader_subgroup_vote,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [68] = {
            ["number"] = 68,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImageViewASTCDecodeModeEXT,
                [2] = VkPhysicalDeviceASTCDecodeFeaturesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_astc_decode_mode,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [74] = {
            ["number"] = 74,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportMemoryWin32HandleInfoKHR,
                [2] = VkExportMemoryWin32HandleInfoKHR,
                [3] = VkMemoryWin32HandlePropertiesKHR,
                [4] = VkMemoryGetWin32HandleInfoKHR,
                },
            ["commands"] = {
                [1] = vkGetMemoryWin32HandleKHR,
                [2] = vkGetMemoryWin32HandlePropertiesKHR,
                },
            ["name"] = VK_KHR_external_memory_win32,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [75] = {
            ["number"] = 75,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportMemoryFdInfoKHR,
                [2] = VkMemoryFdPropertiesKHR,
                [3] = VkMemoryGetFdInfoKHR,
                },
            ["commands"] = {
                [1] = vkGetMemoryFdKHR,
                [2] = vkGetMemoryFdPropertiesKHR,
                },
            ["name"] = VK_KHR_external_memory_fd,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [76] = {
            ["number"] = 76,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkWin32KeyedMutexAcquireReleaseInfoKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_win32_keyed_mutex,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [79] = {
            ["number"] = 79,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportSemaphoreWin32HandleInfoKHR,
                [2] = VkExportSemaphoreWin32HandleInfoKHR,
                [3] = VkD3D12FenceSubmitInfoKHR,
                [4] = VkSemaphoreGetWin32HandleInfoKHR,
                },
            ["commands"] = {
                [1] = vkImportSemaphoreWin32HandleKHR,
                [2] = vkGetSemaphoreWin32HandleKHR,
                },
            ["name"] = VK_KHR_external_semaphore_win32,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [80] = {
            ["number"] = 80,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportSemaphoreFdInfoKHR,
                [2] = VkSemaphoreGetFdInfoKHR,
                },
            ["commands"] = {
                [1] = vkImportSemaphoreFdKHR,
                [2] = vkGetSemaphoreFdKHR,
                },
            ["name"] = VK_KHR_external_semaphore_fd,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [81] = {
            ["number"] = 81,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDevicePushDescriptorPropertiesKHR,
                },
            ["commands"] = {
                [1] = vkCmdPushDescriptorSetKHR,
                [2] = vkCmdPushDescriptorSetWithTemplateKHR,
                },
            ["name"] = VK_KHR_push_descriptor,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [82] = {
            ["number"] = 82,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkConditionalRenderingFlagsEXT,
                },
            ["structs"] = {
                [1] = VkConditionalRenderingBeginInfoEXT,
                [2] = VkPhysicalDeviceConditionalRenderingFeaturesEXT,
                [3] = VkCommandBufferInheritanceConditionalRenderingInfoEXT,
                },
            ["commands"] = {
                [1] = vkCmdBeginConditionalRenderingEXT,
                [2] = vkCmdEndConditionalRenderingEXT,
                },
            ["name"] = VK_EXT_conditional_rendering,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [83] = {
            ["number"] = 83,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceFloat16Int8FeaturesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_shader_float16_int8,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [85] = {
            ["number"] = 85,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPresentRegionsKHR,
                [2] = VkPresentRegionKHR,
                [3] = VkRectLayerKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_incremental_present,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [87] = {
            ["number"] = 87,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkIndirectCommandsLayoutUsageFlagsNVX,
                [2] = VkObjectEntryUsageFlagsNVX,
                },
            ["structs"] = {
                [1] = VkDeviceGeneratedCommandsFeaturesNVX,
                [2] = VkDeviceGeneratedCommandsLimitsNVX,
                [3] = VkIndirectCommandsTokenNVX,
                [4] = VkIndirectCommandsLayoutTokenNVX,
                [5] = VkIndirectCommandsLayoutCreateInfoNVX,
                [6] = VkCmdProcessCommandsInfoNVX,
                [7] = VkCmdReserveSpaceForCommandsInfoNVX,
                [8] = VkObjectTableCreateInfoNVX,
                [9] = VkObjectTableEntryNVX,
                [10] = VkObjectTablePipelineEntryNVX,
                [11] = VkObjectTableDescriptorSetEntryNVX,
                [12] = VkObjectTableVertexBufferEntryNVX,
                [13] = VkObjectTableIndexBufferEntryNVX,
                [14] = VkObjectTablePushConstantEntryNVX,
                },
            ["commands"] = {
                [1] = vkCmdProcessCommandsNVX,
                [2] = vkCmdReserveSpaceForCommandsNVX,
                [3] = vkCreateIndirectCommandsLayoutNVX,
                [4] = vkDestroyIndirectCommandsLayoutNVX,
                [5] = vkCreateObjectTableNVX,
                [6] = vkDestroyObjectTableNVX,
                [7] = vkRegisterObjectsNVX,
                [8] = vkUnregisterObjectsNVX,
                [9] = vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX,
                },
            ["name"] = VK_NVX_device_generated_commands,
            ["enums"] = {
                [1] = VkIndirectCommandsTokenTypeNVX,
                [2] = VkObjectEntryTypeNVX,
                },
            ["type"] = device,
            ["handles"] = {
                [1] = VkObjectTableNVX,
                [2] = VkIndirectCommandsLayoutNVX,
                },
            ["unions"] = {
                },
            ["tag"] = NVX,
            },
        [88] = {
            ["number"] = 88,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkViewportWScalingNV,
                [2] = VkPipelineViewportWScalingStateCreateInfoNV,
                },
            ["commands"] = {
                [1] = vkCmdSetViewportWScalingNV,
                },
            ["name"] = VK_NV_clip_space_w_scaling,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [89] = {
            ["number"] = 89,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                [1] = vkReleaseDisplayEXT,
                },
            ["name"] = VK_EXT_direct_mode_display,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [90] = {
            ["number"] = 90,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                [1] = vkAcquireXlibDisplayEXT,
                [2] = vkGetRandROutputDisplayEXT,
                },
            ["name"] = VK_EXT_acquire_xlib_display,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [91] = {
            ["number"] = 91,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkSurfaceCounterFlagsEXT,
                },
            ["structs"] = {
                [1] = VkSurfaceCapabilities2EXT,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceSurfaceCapabilities2EXT,
                },
            ["name"] = VK_EXT_display_surface_counter,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [92] = {
            ["number"] = 92,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDisplayPowerInfoEXT,
                [2] = VkDeviceEventInfoEXT,
                [3] = VkDisplayEventInfoEXT,
                [4] = VkSwapchainCounterCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkDisplayPowerControlEXT,
                [2] = vkRegisterDeviceEventEXT,
                [3] = vkRegisterDisplayEventEXT,
                [4] = vkGetSwapchainCounterEXT,
                },
            ["name"] = VK_EXT_display_control,
            ["enums"] = {
                [1] = VkDisplayPowerStateEXT,
                [2] = VkDeviceEventTypeEXT,
                [3] = VkDisplayEventTypeEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [93] = {
            ["number"] = 93,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkRefreshCycleDurationGOOGLE,
                [2] = VkPastPresentationTimingGOOGLE,
                [3] = VkPresentTimesInfoGOOGLE,
                [4] = VkPresentTimeGOOGLE,
                },
            ["commands"] = {
                [1] = vkGetRefreshCycleDurationGOOGLE,
                [2] = vkGetPastPresentationTimingGOOGLE,
                },
            ["name"] = VK_GOOGLE_display_timing,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = GOOGLE,
            },
        [95] = {
            ["number"] = 95,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_sample_mask_override_coverage,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [96] = {
            ["number"] = 96,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_geometry_shader_passthrough,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [97] = {
            ["number"] = 97,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_viewport_array2,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [98] = {
            ["number"] = 98,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX,
                },
            ["commands"] = {
                },
            ["name"] = VK_NVX_multiview_per_view_attributes,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NVX,
            },
        [99] = {
            ["number"] = 99,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineViewportSwizzleStateCreateFlagsNV,
                },
            ["structs"] = {
                [1] = VkViewportSwizzleNV,
                [2] = VkPipelineViewportSwizzleStateCreateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_viewport_swizzle,
            ["enums"] = {
                [1] = VkViewportCoordinateSwizzleNV,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [100] = {
            ["number"] = 100,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineDiscardRectangleStateCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceDiscardRectanglePropertiesEXT,
                [2] = VkPipelineDiscardRectangleStateCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCmdSetDiscardRectangleEXT,
                },
            ["name"] = VK_EXT_discard_rectangles,
            ["enums"] = {
                [1] = VkDiscardRectangleModeEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [102] = {
            ["number"] = 102,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineRasterizationConservativeStateCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceConservativeRasterizationPropertiesEXT,
                [2] = VkPipelineRasterizationConservativeStateCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_conservative_rasterization,
            ["enums"] = {
                [1] = VkConservativeRasterizationModeEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [103] = {
            ["number"] = 103,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineRasterizationDepthClipStateCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceDepthClipEnableFeaturesEXT,
                [2] = VkPipelineRasterizationDepthClipStateCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_depth_clip_enable,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [105] = {
            ["number"] = 105,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_swapchain_colorspace,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [106] = {
            ["number"] = 106,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkHdrMetadataEXT,
                [2] = VkXYColorEXT,
                },
            ["commands"] = {
                [1] = vkSetHdrMetadataEXT,
                },
            ["name"] = VK_EXT_hdr_metadata,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [110] = {
            ["number"] = 110,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkRenderPassCreateInfo2KHR,
                [2] = VkAttachmentDescription2KHR,
                [3] = VkSubpassDescription2KHR,
                [4] = VkAttachmentReference2KHR,
                [5] = VkSubpassDependency2KHR,
                [6] = VkSubpassBeginInfoKHR,
                [7] = VkSubpassEndInfoKHR,
                },
            ["commands"] = {
                [1] = vkCreateRenderPass2KHR,
                [2] = vkCmdBeginRenderPass2KHR,
                [3] = vkCmdNextSubpass2KHR,
                [4] = vkCmdEndRenderPass2KHR,
                },
            ["name"] = VK_KHR_create_renderpass2,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [112] = {
            ["number"] = 112,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkSharedPresentSurfaceCapabilitiesKHR,
                },
            ["commands"] = {
                [1] = vkGetSwapchainStatusKHR,
                },
            ["name"] = VK_KHR_shared_presentable_image,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [115] = {
            ["number"] = 115,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportFenceWin32HandleInfoKHR,
                [2] = VkExportFenceWin32HandleInfoKHR,
                [3] = VkFenceGetWin32HandleInfoKHR,
                },
            ["commands"] = {
                [1] = vkImportFenceWin32HandleKHR,
                [2] = vkGetFenceWin32HandleKHR,
                },
            ["name"] = VK_KHR_external_fence_win32,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [116] = {
            ["number"] = 116,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportFenceFdInfoKHR,
                [2] = VkFenceGetFdInfoKHR,
                },
            ["commands"] = {
                [1] = vkImportFenceFdKHR,
                [2] = vkGetFenceFdKHR,
                },
            ["name"] = VK_KHR_external_fence_fd,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [120] = {
            ["number"] = 120,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceSurfaceInfo2KHR,
                [2] = VkSurfaceCapabilities2KHR,
                [3] = VkSurfaceFormat2KHR,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceSurfaceCapabilities2KHR,
                [2] = vkGetPhysicalDeviceSurfaceFormats2KHR,
                },
            ["name"] = VK_KHR_get_surface_capabilities2,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [122] = {
            ["number"] = 122,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDisplayProperties2KHR,
                [2] = VkDisplayPlaneProperties2KHR,
                [3] = VkDisplayModeProperties2KHR,
                [4] = VkDisplayPlaneInfo2KHR,
                [5] = VkDisplayPlaneCapabilities2KHR,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceDisplayProperties2KHR,
                [2] = vkGetPhysicalDeviceDisplayPlaneProperties2KHR,
                [3] = vkGetDisplayModeProperties2KHR,
                [4] = vkGetDisplayPlaneCapabilities2KHR,
                },
            ["name"] = VK_KHR_get_display_properties2,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [123] = {
            ["number"] = 123,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkIOSSurfaceCreateFlagsMVK,
                },
            ["structs"] = {
                [1] = VkIOSSurfaceCreateInfoMVK,
                },
            ["commands"] = {
                [1] = vkCreateIOSSurfaceMVK,
                },
            ["name"] = VK_MVK_ios_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = MVK,
            },
        [124] = {
            ["number"] = 124,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkMacOSSurfaceCreateFlagsMVK,
                },
            ["structs"] = {
                [1] = VkMacOSSurfaceCreateInfoMVK,
                },
            ["commands"] = {
                [1] = vkCreateMacOSSurfaceMVK,
                },
            ["name"] = VK_MVK_macos_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = MVK,
            },
        [126] = {
            ["number"] = 126,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_external_memory_dma_buf,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [127] = {
            ["number"] = 127,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_queue_family_foreign,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [129] = {
            ["number"] = 129,
            ["funcpointers"] = {
                [1] = PFN_vkDebugUtilsMessengerCallbackEXT,
                },
            ["bitmasks"] = {
                [1] = VkDebugUtilsMessengerCallbackDataFlagsEXT,
                [2] = VkDebugUtilsMessengerCreateFlagsEXT,
                [3] = VkDebugUtilsMessageSeverityFlagsEXT,
                [4] = VkDebugUtilsMessageTypeFlagsEXT,
                },
            ["structs"] = {
                [1] = VkDebugUtilsObjectNameInfoEXT,
                [2] = VkDebugUtilsObjectTagInfoEXT,
                [3] = VkDebugUtilsLabelEXT,
                [4] = VkDebugUtilsMessengerCallbackDataEXT,
                [5] = VkDebugUtilsMessengerCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkSetDebugUtilsObjectNameEXT,
                [2] = vkSetDebugUtilsObjectTagEXT,
                [3] = vkQueueBeginDebugUtilsLabelEXT,
                [4] = vkQueueEndDebugUtilsLabelEXT,
                [5] = vkQueueInsertDebugUtilsLabelEXT,
                [6] = vkCmdBeginDebugUtilsLabelEXT,
                [7] = vkCmdEndDebugUtilsLabelEXT,
                [8] = vkCmdInsertDebugUtilsLabelEXT,
                [9] = vkCreateDebugUtilsMessengerEXT,
                [10] = vkDestroyDebugUtilsMessengerEXT,
                [11] = vkSubmitDebugUtilsMessageEXT,
                },
            ["name"] = VK_EXT_debug_utils,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                [1] = VkDebugUtilsMessengerEXT,
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [130] = {
            ["number"] = 130,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkAndroidHardwareBufferUsageANDROID,
                [2] = VkAndroidHardwareBufferPropertiesANDROID,
                [3] = VkAndroidHardwareBufferFormatPropertiesANDROID,
                [4] = VkImportAndroidHardwareBufferInfoANDROID,
                [5] = VkMemoryGetAndroidHardwareBufferInfoANDROID,
                [6] = VkExternalFormatANDROID,
                },
            ["commands"] = {
                [1] = vkGetAndroidHardwareBufferPropertiesANDROID,
                [2] = vkGetMemoryAndroidHardwareBufferANDROID,
                },
            ["name"] = VK_ANDROID_external_memory_android_hardware_buffer,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = ANDROID,
            },
        [131] = {
            ["number"] = 131,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkSamplerReductionModeCreateInfoEXT,
                [2] = VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_sampler_filter_minmax,
            ["enums"] = {
                [1] = VkSamplerReductionModeEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [133] = {
            ["number"] = 133,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_gpu_shader_int16,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [137] = {
            ["number"] = 137,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_mixed_attachment_samples,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [138] = {
            ["number"] = 138,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_fragment_mask,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [139] = {
            ["number"] = 139,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceInlineUniformBlockFeaturesEXT,
                [2] = VkPhysicalDeviceInlineUniformBlockPropertiesEXT,
                [3] = VkWriteDescriptorSetInlineUniformBlockEXT,
                [4] = VkDescriptorPoolInlineUniformBlockCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_inline_uniform_block,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [141] = {
            ["number"] = 141,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_shader_stencil_export,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [144] = {
            ["number"] = 144,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkSampleLocationEXT,
                [2] = VkSampleLocationsInfoEXT,
                [3] = VkAttachmentSampleLocationsEXT,
                [4] = VkSubpassSampleLocationsEXT,
                [5] = VkRenderPassSampleLocationsBeginInfoEXT,
                [6] = VkPipelineSampleLocationsStateCreateInfoEXT,
                [7] = VkPhysicalDeviceSampleLocationsPropertiesEXT,
                [8] = VkMultisamplePropertiesEXT,
                },
            ["commands"] = {
                [1] = vkCmdSetSampleLocationsEXT,
                [2] = vkGetPhysicalDeviceMultisamplePropertiesEXT,
                },
            ["name"] = VK_EXT_sample_locations,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [148] = {
            ["number"] = 148,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImageFormatListCreateInfoKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_image_format_list,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [149] = {
            ["number"] = 149,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT,
                [2] = VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT,
                [3] = VkPipelineColorBlendAdvancedStateCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_blend_operation_advanced,
            ["enums"] = {
                [1] = VkBlendOverlapEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [150] = {
            ["number"] = 150,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineCoverageToColorStateCreateFlagsNV,
                },
            ["structs"] = {
                [1] = VkPipelineCoverageToColorStateCreateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_fragment_coverage_to_color,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [153] = {
            ["number"] = 153,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineCoverageModulationStateCreateFlagsNV,
                },
            ["structs"] = {
                [1] = VkPipelineCoverageModulationStateCreateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_framebuffer_mixed_samples,
            ["enums"] = {
                [1] = VkCoverageModulationModeNV,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [154] = {
            ["number"] = 154,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_fill_rectangle,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [156] = {
            ["number"] = 156,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_post_depth_coverage,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [159] = {
            ["number"] = 159,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDrmFormatModifierPropertiesListEXT,
                [2] = VkDrmFormatModifierPropertiesEXT,
                [3] = VkPhysicalDeviceImageDrmFormatModifierInfoEXT,
                [4] = VkImageDrmFormatModifierListCreateInfoEXT,
                [5] = VkImageDrmFormatModifierExplicitCreateInfoEXT,
                [6] = VkImageDrmFormatModifierPropertiesEXT,
                },
            ["commands"] = {
                [1] = vkGetImageDrmFormatModifierPropertiesEXT,
                },
            ["name"] = VK_EXT_image_drm_format_modifier,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [161] = {
            ["number"] = 161,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkValidationCacheCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkValidationCacheCreateInfoEXT,
                [2] = VkShaderModuleValidationCacheCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCreateValidationCacheEXT,
                [2] = vkDestroyValidationCacheEXT,
                [3] = vkMergeValidationCachesEXT,
                [4] = vkGetValidationCacheDataEXT,
                },
            ["name"] = VK_EXT_validation_cache,
            ["enums"] = {
                [1] = VkValidationCacheHeaderVersionEXT,
                },
            ["type"] = device,
            ["handles"] = {
                [1] = VkValidationCacheEXT,
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [162] = {
            ["number"] = 162,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkDescriptorBindingFlagsEXT,
                },
            ["structs"] = {
                [1] = VkDescriptorSetLayoutBindingFlagsCreateInfoEXT,
                [2] = VkPhysicalDeviceDescriptorIndexingFeaturesEXT,
                [3] = VkPhysicalDeviceDescriptorIndexingPropertiesEXT,
                [4] = VkDescriptorSetVariableDescriptorCountAllocateInfoEXT,
                [5] = VkDescriptorSetVariableDescriptorCountLayoutSupportEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_descriptor_indexing,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [163] = {
            ["number"] = 163,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_shader_viewport_index_layer,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [165] = {
            ["number"] = 165,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkShadingRatePaletteNV,
                [2] = VkPipelineViewportShadingRateImageStateCreateInfoNV,
                [3] = VkPhysicalDeviceShadingRateImageFeaturesNV,
                [4] = VkPhysicalDeviceShadingRateImagePropertiesNV,
                [5] = VkCoarseSampleLocationNV,
                [6] = VkCoarseSampleOrderCustomNV,
                [7] = VkPipelineViewportCoarseSampleOrderStateCreateInfoNV,
                },
            ["commands"] = {
                [1] = vkCmdBindShadingRateImageNV,
                [2] = vkCmdSetViewportShadingRatePaletteNV,
                [3] = vkCmdSetCoarseSampleOrderNV,
                },
            ["name"] = VK_NV_shading_rate_image,
            ["enums"] = {
                [1] = VkShadingRatePaletteEntryNV,
                [2] = VkCoarseSampleOrderTypeNV,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [166] = {
            ["number"] = 166,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkGeometryFlagsNV,
                [2] = VkGeometryInstanceFlagsNV,
                [3] = VkBuildAccelerationStructureFlagsNV,
                },
            ["structs"] = {
                [1] = VkRayTracingShaderGroupCreateInfoNV,
                [2] = VkRayTracingPipelineCreateInfoNV,
                [3] = VkGeometryTrianglesNV,
                [4] = VkGeometryAABBNV,
                [5] = VkGeometryDataNV,
                [6] = VkGeometryNV,
                [7] = VkAccelerationStructureInfoNV,
                [8] = VkAccelerationStructureCreateInfoNV,
                [9] = VkBindAccelerationStructureMemoryInfoNV,
                [10] = VkWriteDescriptorSetAccelerationStructureNV,
                [11] = VkAccelerationStructureMemoryRequirementsInfoNV,
                [12] = VkPhysicalDeviceRayTracingPropertiesNV,
                },
            ["commands"] = {
                [1] = vkCreateAccelerationStructureNV,
                [2] = vkDestroyAccelerationStructureNV,
                [3] = vkGetAccelerationStructureMemoryRequirementsNV,
                [4] = vkBindAccelerationStructureMemoryNV,
                [5] = vkCmdBuildAccelerationStructureNV,
                [6] = vkCmdCopyAccelerationStructureNV,
                [7] = vkCmdTraceRaysNV,
                [8] = vkCreateRayTracingPipelinesNV,
                [9] = vkGetRayTracingShaderGroupHandlesNV,
                [10] = vkGetAccelerationStructureHandleNV,
                [11] = vkCmdWriteAccelerationStructuresPropertiesNV,
                [12] = vkCompileDeferredNV,
                },
            ["name"] = VK_NV_ray_tracing,
            ["enums"] = {
                [1] = VkRayTracingShaderGroupTypeNV,
                [2] = VkGeometryTypeNV,
                [3] = VkAccelerationStructureTypeNV,
                [4] = VkCopyAccelerationStructureModeNV,
                [5] = VkAccelerationStructureMemoryRequirementsTypeNV,
                },
            ["type"] = device,
            ["handles"] = {
                [1] = VkAccelerationStructureNV,
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [167] = {
            ["number"] = 167,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV,
                [2] = VkPipelineRepresentativeFragmentTestStateCreateInfoNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_representative_fragment_test,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [170] = {
            ["number"] = 170,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                [1] = vkCmdDrawIndirectCountKHR,
                [2] = vkCmdDrawIndexedIndirectCountKHR,
                },
            ["name"] = VK_KHR_draw_indirect_count,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [171] = {
            ["number"] = 171,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceImageViewImageFormatInfoEXT,
                [2] = VkFilterCubicImageViewImageFormatPropertiesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_filter_cubic,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [175] = {
            ["number"] = 175,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDeviceQueueGlobalPriorityCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_global_priority,
            ["enums"] = {
                [1] = VkQueueGlobalPriorityEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [178] = {
            ["number"] = 178,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDevice8BitStorageFeaturesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_8bit_storage,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [179] = {
            ["number"] = 179,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImportMemoryHostPointerInfoEXT,
                [2] = VkMemoryHostPointerPropertiesEXT,
                [3] = VkPhysicalDeviceExternalMemoryHostPropertiesEXT,
                },
            ["commands"] = {
                [1] = vkGetMemoryHostPointerPropertiesEXT,
                },
            ["name"] = VK_EXT_external_memory_host,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [180] = {
            ["number"] = 180,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                [1] = vkCmdWriteBufferMarkerAMD,
                },
            ["name"] = VK_AMD_buffer_marker,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [181] = {
            ["number"] = 181,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceShaderAtomicInt64FeaturesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_shader_atomic_int64,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [185] = {
            ["number"] = 185,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkCalibratedTimestampInfoEXT,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceCalibrateableTimeDomainsEXT,
                [2] = vkGetCalibratedTimestampsEXT,
                },
            ["name"] = VK_EXT_calibrated_timestamps,
            ["enums"] = {
                [1] = VkTimeDomainEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [186] = {
            ["number"] = 186,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceShaderCorePropertiesAMD,
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_shader_core_properties,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [190] = {
            ["number"] = 190,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDeviceMemoryOverallocationCreateInfoAMD,
                },
            ["commands"] = {
                },
            ["name"] = VK_AMD_memory_overallocation_behavior,
            ["enums"] = {
                [1] = VkMemoryOverallocationBehaviorAMD,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [191] = {
            ["number"] = 191,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT,
                [2] = VkVertexInputBindingDivisorDescriptionEXT,
                [3] = VkPipelineVertexInputDivisorStateCreateInfoEXT,
                [4] = VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_vertex_attribute_divisor,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [192] = {
            ["number"] = 192,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPresentFrameTokenGGP,
                },
            ["commands"] = {
                },
            ["name"] = VK_GGP_frame_token,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = GGP,
            },
        [193] = {
            ["number"] = 193,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkPipelineCreationFeedbackFlagsEXT,
                },
            ["structs"] = {
                [1] = VkPipelineCreationFeedbackCreateInfoEXT,
                [2] = VkPipelineCreationFeedbackEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_pipeline_creation_feedback,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [197] = {
            ["number"] = 197,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkConformanceVersionKHR,
                [2] = VkPhysicalDeviceDriverPropertiesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_driver_properties,
            ["enums"] = {
                [1] = VkDriverIdKHR,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [198] = {
            ["number"] = 198,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceFloatControlsPropertiesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_shader_float_controls,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [199] = {
            ["number"] = 199,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_shader_subgroup_partitioned,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [200] = {
            ["number"] = 200,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkResolveModeFlagsKHR,
                },
            ["structs"] = {
                [1] = VkSubpassDescriptionDepthStencilResolveKHR,
                [2] = VkPhysicalDeviceDepthStencilResolvePropertiesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_depth_stencil_resolve,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [201] = {
            ["number"] = 201,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_swapchain_mutable_format,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [202] = {
            ["number"] = 202,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceComputeShaderDerivativesFeaturesNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_compute_shader_derivatives,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [203] = {
            ["number"] = 203,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceMeshShaderFeaturesNV,
                [2] = VkPhysicalDeviceMeshShaderPropertiesNV,
                [3] = VkDrawMeshTasksIndirectCommandNV,
                },
            ["commands"] = {
                [1] = vkCmdDrawMeshTasksNV,
                [2] = vkCmdDrawMeshTasksIndirectNV,
                [3] = vkCmdDrawMeshTasksIndirectCountNV,
                },
            ["name"] = VK_NV_mesh_shader,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [204] = {
            ["number"] = 204,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_fragment_shader_barycentric,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [205] = {
            ["number"] = 205,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceShaderImageFootprintFeaturesNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_shader_image_footprint,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [206] = {
            ["number"] = 206,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPipelineViewportExclusiveScissorStateCreateInfoNV,
                [2] = VkPhysicalDeviceExclusiveScissorFeaturesNV,
                },
            ["commands"] = {
                [1] = vkCmdSetExclusiveScissorNV,
                },
            ["name"] = VK_NV_scissor_exclusive,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [207] = {
            ["number"] = 207,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkQueueFamilyCheckpointPropertiesNV,
                [2] = VkCheckpointDataNV,
                },
            ["commands"] = {
                [1] = vkCmdSetCheckpointNV,
                [2] = vkGetQueueCheckpointDataNV,
                },
            ["name"] = VK_NV_device_diagnostic_checkpoints,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [212] = {
            ["number"] = 212,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceVulkanMemoryModelFeaturesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_vulkan_memory_model,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [213] = {
            ["number"] = 213,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDevicePCIBusInfoPropertiesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_pci_bus_info,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [214] = {
            ["number"] = 214,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkDisplayNativeHdrSurfaceCapabilitiesAMD,
                [2] = VkSwapchainDisplayNativeHdrCreateInfoAMD,
                },
            ["commands"] = {
                [1] = vkSetLocalDimmingAMD,
                },
            ["name"] = VK_AMD_display_native_hdr,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = AMD,
            },
        [215] = {
            ["number"] = 215,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkImagePipeSurfaceCreateFlagsFUCHSIA,
                },
            ["structs"] = {
                [1] = VkImagePipeSurfaceCreateInfoFUCHSIA,
                },
            ["commands"] = {
                [1] = vkCreateImagePipeSurfaceFUCHSIA,
                },
            ["name"] = VK_FUCHSIA_imagepipe_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = FUCHSIA,
            },
        [218] = {
            ["number"] = 218,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkMetalSurfaceCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkMetalSurfaceCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCreateMetalSurfaceEXT,
                },
            ["name"] = VK_EXT_metal_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [219] = {
            ["number"] = 219,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceFragmentDensityMapFeaturesEXT,
                [2] = VkPhysicalDeviceFragmentDensityMapPropertiesEXT,
                [3] = VkRenderPassFragmentDensityMapCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_fragment_density_map,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [222] = {
            ["number"] = 222,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceScalarBlockLayoutFeaturesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_scalar_block_layout,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [224] = {
            ["number"] = 224,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_GOOGLE_hlsl_functionality1,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = GOOGLE,
            },
        [225] = {
            ["number"] = 225,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                },
            ["commands"] = {
                },
            ["name"] = VK_GOOGLE_decorate_string,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = GOOGLE,
            },
        [238] = {
            ["number"] = 238,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceMemoryBudgetPropertiesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_memory_budget,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [239] = {
            ["number"] = 239,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceMemoryPriorityFeaturesEXT,
                [2] = VkMemoryPriorityAllocateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_memory_priority,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [240] = {
            ["number"] = 240,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkSurfaceProtectedCapabilitiesKHR,
                },
            ["commands"] = {
                },
            ["name"] = VK_KHR_surface_protected_capabilities,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = KHR,
            },
        [241] = {
            ["number"] = 241,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV,
                },
            ["commands"] = {
                },
            ["name"] = VK_NV_dedicated_allocation_image_aliasing,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [245] = {
            ["number"] = 245,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceBufferDeviceAddressFeaturesEXT,
                [2] = VkBufferDeviceAddressInfoEXT,
                [3] = VkBufferDeviceAddressCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkGetBufferDeviceAddressEXT,
                },
            ["name"] = VK_EXT_buffer_device_address,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [247] = {
            ["number"] = 247,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkImageStencilUsageCreateInfoEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_separate_stencil_usage,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [248] = {
            ["number"] = 248,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkValidationFeaturesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_validation_features,
            ["enums"] = {
                [1] = VkValidationFeatureEnableEXT,
                [2] = VkValidationFeatureDisableEXT,
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [250] = {
            ["number"] = 250,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkCooperativeMatrixPropertiesNV,
                [2] = VkPhysicalDeviceCooperativeMatrixFeaturesNV,
                [3] = VkPhysicalDeviceCooperativeMatrixPropertiesNV,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceCooperativeMatrixPropertiesNV,
                },
            ["name"] = VK_NV_cooperative_matrix,
            ["enums"] = {
                [1] = VkComponentTypeNV,
                [2] = VkScopeNV,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = NV,
            },
        [253] = {
            ["number"] = 253,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceYcbcrImageArraysFeaturesEXT,
                },
            ["commands"] = {
                },
            ["name"] = VK_EXT_ycbcr_image_arrays,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [256] = {
            ["number"] = 256,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkSurfaceFullScreenExclusiveInfoEXT,
                [2] = VkSurfaceCapabilitiesFullScreenExclusiveEXT,
                [3] = VkSurfaceFullScreenExclusiveWin32InfoEXT,
                },
            ["commands"] = {
                [1] = vkGetPhysicalDeviceSurfacePresentModes2EXT,
                [2] = vkAcquireFullScreenExclusiveModeEXT,
                [3] = vkReleaseFullScreenExclusiveModeEXT,
                [4] = vkGetDeviceGroupSurfacePresentModes2EXT,
                },
            ["name"] = VK_EXT_full_screen_exclusive,
            ["enums"] = {
                [1] = VkFullScreenExclusiveEXT,
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [257] = {
            ["number"] = 257,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                [1] = VkHeadlessSurfaceCreateFlagsEXT,
                },
            ["structs"] = {
                [1] = VkHeadlessSurfaceCreateInfoEXT,
                },
            ["commands"] = {
                [1] = vkCreateHeadlessSurfaceEXT,
                },
            ["name"] = VK_EXT_headless_surface,
            ["enums"] = {
                },
            ["type"] = instance,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        [262] = {
            ["number"] = 262,
            ["funcpointers"] = {
                },
            ["bitmasks"] = {
                },
            ["structs"] = {
                [1] = VkPhysicalDeviceHostQueryResetFeaturesEXT,
                },
            ["commands"] = {
                [1] = vkResetQueryPoolEXT,
                },
            ["name"] = VK_EXT_host_query_reset,
            ["enums"] = {
                },
            ["type"] = device,
            ["handles"] = {
                },
            ["unions"] = {
                },
            ["tag"] = EXT,
            },
        },
    ["types"] = {
        ["funcpointers"] = {
            ["PFN_vkDebugUtilsMessengerCallbackEXT"] = {
                ["returnType"] = VkBool32,
                ["params"] = {
                    [1] = {
                        ["name"] = messageSeverity,
                        ["type"] = VkDebugUtilsMessageSeverityFlagBitsEXT,
                        },
                    [2] = {
                        ["name"] = messageTypes    const,
                        ["type"] = VkDebugUtilsMessageTypeFlagsEXT,
                        },
                    [3] = {
                        ["type"] = VkDebugUtilsMessengerCallbackDataEXT,
                        ["name"] = pCallbackData,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    },
                },
            ["PFN_vkAllocationFunction"] = {
                ["returnType"] = void*,
                ["params"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["name"] = size,
                        ["type"] = size_t,
                        },
                    [3] = {
                        ["name"] = alignment,
                        ["type"] = size_t,
                        },
                    [4] = {
                        ["name"] = allocationScope,
                        ["type"] = VkSystemAllocationScope,
                        },
                    },
                },
            ["PFN_vkInternalAllocationNotification"] = {
                ["returnType"] = void,
                ["params"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["name"] = size,
                        ["type"] = size_t,
                        },
                    [3] = {
                        ["name"] = allocationType,
                        ["type"] = VkInternalAllocationType,
                        },
                    [4] = {
                        ["name"] = allocationScope,
                        ["type"] = VkSystemAllocationScope,
                        },
                    },
                },
            ["PFN_vkDebugReportCallbackEXT"] = {
                ["returnType"] = VkBool32,
                ["params"] = {
                    [1] = {
                        ["name"] = flags,
                        ["type"] = VkDebugReportFlagsEXT,
                        },
                    [2] = {
                        ["name"] = objectType,
                        ["type"] = VkDebugReportObjectTypeEXT,
                        },
                    [3] = {
                        ["name"] = object,
                        ["type"] = uint64_t,
                        },
                    [4] = {
                        ["name"] = location,
                        ["type"] = size_t,
                        },
                    [5] = {
                        ["name"] = messageCode    const,
                        ["type"] = int32_t,
                        },
                    [6] = {
                        ["type"] = char,
                        ["name"] = pLayerPrefix    const,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["type"] = char,
                        ["name"] = pMessage,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    },
                },
            ["PFN_vkFreeFunction"] = {
                ["returnType"] = void,
                ["params"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pMemory,
                        ["pointer"] = true,
                        },
                    },
                },
            ["PFN_vkReallocationFunction"] = {
                ["returnType"] = void*,
                ["params"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pOriginal,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = size,
                        ["type"] = size_t,
                        },
                    [4] = {
                        ["name"] = alignment,
                        ["type"] = size_t,
                        },
                    [5] = {
                        ["name"] = allocationScope,
                        ["type"] = VkSystemAllocationScope,
                        },
                    },
                },
            ["PFN_vkVoidFunction"] = {
                ["returnType"] = void,
                ["params"] = {
                    },
                },
            ["PFN_vkInternalFreeNotification"] = {
                ["returnType"] = void,
                ["params"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["name"] = size,
                        ["type"] = size_t,
                        },
                    [3] = {
                        ["name"] = allocationType,
                        ["type"] = VkInternalAllocationType,
                        },
                    [4] = {
                        ["name"] = allocationScope,
                        ["type"] = VkSystemAllocationScope,
                        },
                    },
                },
            },
        ["info"] = {
            ["VkComponentTypeNV"] = {
                ["reference"] = VK_NV_cooperative_matrix,
                ["type"] = enums,
                },
            ["VkExternalFenceFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkViewportWScalingNV"] = {
                ["reference"] = VK_NV_clip_space_w_scaling,
                ["type"] = structs,
                },
            ["VkMetalSurfaceCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_metal_surface,
                ["type"] = bitmasks,
                },
            ["VkMemoryDedicatedAllocateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDeviceGroupPresentCapabilitiesKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkMetalSurfaceCreateInfoEXT"] = {
                ["reference"] = VK_EXT_metal_surface,
                ["type"] = structs,
                },
            ["VkFence"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkDynamicState"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkRayTracingPipelineCreateInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkBufferDeviceAddressCreateInfoEXT"] = {
                ["reference"] = VK_EXT_buffer_device_address,
                ["type"] = structs,
                },
            ["VkDeviceCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkQueryResultFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDisplayModeCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = bitmasks,
                },
            ["VkMemoryMapFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkShaderModuleCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineColorBlendStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineDynamicStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkWriteDescriptorSet"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkGeometryAABBNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkBufferViewCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkExternalBufferProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSparseImageMemoryBindInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkGeometryTrianglesNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkCmdReserveSpaceForCommandsInfoNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkPipelineTessellationStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkBufferView"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkSurfaceTransformFlagsKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = bitmasks,
                },
            ["VkGeometryNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkSharedPresentSurfaceCapabilitiesKHR"] = {
                ["reference"] = VK_KHR_shared_presentable_image,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDescriptorIndexingPropertiesEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = structs,
                },
            ["VkDeviceQueueGlobalPriorityCreateInfoEXT"] = {
                ["reference"] = VK_EXT_global_priority,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceSamplerYcbcrConversionFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineRepresentativeFragmentTestStateCreateInfoNV"] = {
                ["reference"] = VK_NV_representative_fragment_test,
                ["type"] = structs,
                },
            ["VkCommandPoolTrimFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkIndirectCommandsLayoutCreateInfoNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkWriteDescriptorSetInlineUniformBlockEXT"] = {
                ["reference"] = VK_EXT_inline_uniform_block,
                ["type"] = structs,
                },
            ["VkDescriptorUpdateTemplate"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkLayerProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalSemaphoreProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFenceCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceImageDrmFormatModifierInfoEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkOffset3D"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDeviceGeneratedCommandsFeaturesNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkDescriptorPoolInlineUniformBlockCreateInfoEXT"] = {
                ["reference"] = VK_EXT_inline_uniform_block,
                ["type"] = structs,
                },
            ["VkDeviceEventInfoEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = structs,
                },
            ["VkSubpassDependency2KHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkCommandBufferLevel"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkAttachmentDescription2KHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkDescriptorUpdateTemplateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["PFN_vkReallocationFunction"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkVertexInputRate"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkSubpassContents"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkMultisamplePropertiesEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["PFN_vkAllocationFunction"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkAccelerationStructureTypeNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = enums,
                },
            ["VkDebugUtilsObjectTagInfoEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = structs,
                },
            ["VkSparseImageMemoryRequirements2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineViewportWScalingStateCreateInfoNV"] = {
                ["reference"] = VK_NV_clip_space_w_scaling,
                ["type"] = structs,
                },
            ["VkPipelineDiscardRectangleStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_discard_rectangles,
                ["type"] = structs,
                },
            ["VkDisplaySurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkPipelineColorBlendAttachmentState"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalSemaphoreFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDisplayPlaneCapabilitiesKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkInputAttachmentAspectReference"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDisplayPlaneInfo2KHR"] = {
                ["reference"] = VK_KHR_get_display_properties2,
                ["type"] = structs,
                },
            ["VkImageSparseMemoryRequirementsInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalMemoryProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalFenceProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorSetLayoutCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationDepthClipStateCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_depth_clip_enable,
                ["type"] = bitmasks,
                },
            ["VkBaseInStructure"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalFormatANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkDeviceGroupSwapchainCreateInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkCommandPool"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkDedicatedAllocationImageCreateInfoNV"] = {
                ["reference"] = VK_NV_dedicated_allocation,
                ["type"] = structs,
                },
            ["VkMemoryAllocateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineLayoutCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectEntryUsageFlagsNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = bitmasks,
                },
            ["VkSamplerYcbcrConversionImageFormatProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSurfaceFormat2KHR"] = {
                ["reference"] = VK_KHR_get_surface_capabilities2,
                ["type"] = structs,
                },
            ["VkBindSparseInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkValidationCacheHeaderVersionEXT"] = {
                ["reference"] = VK_EXT_validation_cache,
                ["type"] = enums,
                },
            ["VkAttachmentStoreOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkExternalMemoryFeatureFlagsNV"] = {
                ["reference"] = VK_NV_external_memory_capabilities,
                ["type"] = bitmasks,
                },
            ["VkApplicationInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPresentFrameTokenGGP"] = {
                ["reference"] = VK_GGP_frame_token,
                ["type"] = structs,
                },
            ["VkSamplerYcbcrRange"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkExportMemoryAllocateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkBindBufferMemoryInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"] = {
                ["reference"] = VK_NVX_multiview_per_view_attributes,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFeatures2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDebugMarkerMarkerInfoEXT"] = {
                ["reference"] = unreferenced,
                ["type"] = structs,
                },
            ["VkSubpassBeginInfoKHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkImageResolve"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkConformanceVersionKHR"] = {
                ["reference"] = VK_KHR_driver_properties,
                ["type"] = structs,
                },
            ["VkExternalMemoryImageCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkShaderResourceUsageAMD"] = {
                ["reference"] = VK_AMD_shader_info,
                ["type"] = structs,
                },
            ["VkAccelerationStructureMemoryRequirementsInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkDebugUtilsMessengerEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = handles,
                },
            ["VkBuildAccelerationStructureFlagsNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = bitmasks,
                },
            ["VkPolygonMode"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDeviceGroupCommandBufferBeginInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSubmitInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryHeap"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSemaphoreCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineTessellationStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkShaderModuleValidationCacheCreateInfoEXT"] = {
                ["reference"] = VK_EXT_validation_cache,
                ["type"] = structs,
                },
            ["VkXcbSurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_xcb_surface,
                ["type"] = structs,
                },
            ["VkSharingMode"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDebugMarkerObjectTagInfoEXT"] = {
                ["reference"] = unreferenced,
                ["type"] = structs,
                },
            ["VkQueryType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkFormatProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSubpassDependency"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkIOSSurfaceCreateFlagsMVK"] = {
                ["reference"] = VK_MVK_ios_surface,
                ["type"] = bitmasks,
                },
            ["VkDescriptorBindingFlagsEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = bitmasks,
                },
            ["VkSubpassEndInfoKHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkMemoryOverallocationBehaviorAMD"] = {
                ["reference"] = VK_AMD_memory_overallocation_behavior,
                ["type"] = enums,
                },
            ["VkRefreshCycleDurationGOOGLE"] = {
                ["reference"] = VK_GOOGLE_display_timing,
                ["type"] = structs,
                },
            ["VkDebugMarkerObjectNameInfoEXT"] = {
                ["reference"] = unreferenced,
                ["type"] = structs,
                },
            ["VkQueue"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkImageAspectFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkAllocationCallbacks"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSwapchainKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = handles,
                },
            ["VkRenderPassFragmentDensityMapCreateInfoEXT"] = {
                ["reference"] = VK_EXT_fragment_density_map,
                ["type"] = structs,
                },
            ["VkDeviceGroupPresentModeFlagsKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = bitmasks,
                },
            ["VkPipelineInputAssemblyStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineRasterizationConservativeStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_conservative_rasterization,
                ["type"] = structs,
                },
            ["VkCoarseSampleOrderCustomNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkDisplayPowerStateEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = enums,
                },
            ["VkImageMemoryRequirementsInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAccessFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkExtent3D"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImageView"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkPushConstantRange"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDeviceQueueCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMacOSSurfaceCreateFlagsMVK"] = {
                ["reference"] = VK_MVK_macos_surface,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceExternalMemoryHostPropertiesEXT"] = {
                ["reference"] = VK_EXT_external_memory_host,
                ["type"] = structs,
                },
            ["VkFenceImportFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkClearColorValue"] = {
                ["reference"] = core,
                ["type"] = unions,
                },
            ["VkPhysicalDeviceSurfaceInfo2KHR"] = {
                ["reference"] = VK_KHR_get_surface_capabilities2,
                ["type"] = structs,
                },
            ["VkFormat"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkBufferCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkCommandBufferAllocateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineStageFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkXcbSurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_xcb_surface,
                ["type"] = bitmasks,
                },
            ["VkSparseImageFormatFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkImportFenceFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_fence_fd,
                ["type"] = structs,
                },
            ["VkExternalImageFormatPropertiesNV"] = {
                ["reference"] = VK_NV_external_memory_capabilities,
                ["type"] = structs,
                },
            ["VkCommandPoolResetFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceExternalSemaphoreInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSamplerReductionModeEXT"] = {
                ["reference"] = VK_EXT_sampler_filter_minmax,
                ["type"] = enums,
                },
            ["VkRenderPass"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkChromaLocation"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkValidationFeatureEnableEXT"] = {
                ["reference"] = VK_EXT_validation_features,
                ["type"] = enums,
                },
            ["VkSwapchainCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = bitmasks,
                },
            ["VkLogicOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkBindImageMemoryInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectTableNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = handles,
                },
            ["VkSparseImageOpaqueMemoryBindInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryRequirements"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationDepthClipStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_depth_clip_enable,
                ["type"] = structs,
                },
            ["VkDeviceCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPresentModeKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = enums,
                },
            ["VkImageUsageFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineTessellationDomainOriginStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFilterCubicImageViewImageFormatPropertiesEXT"] = {
                ["reference"] = VK_EXT_filter_cubic,
                ["type"] = structs,
                },
            ["VkPhysicalDevice"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkImportFenceWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_fence_win32,
                ["type"] = structs,
                },
            ["VkCullModeFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageDrmFormatModifierExplicitCreateInfoEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkImageCopy"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAndroidSurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_android_surface,
                ["type"] = structs,
                },
            ["VkSparseBufferMemoryBindInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImportMemoryWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_memory_win32,
                ["type"] = structs,
                },
            ["VkSemaphoreCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorPoolCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["PFN_vkInternalAllocationNotification"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkSampleLocationEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkDescriptorSetLayoutCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkSwapchainCreateInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceMultiviewProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkShaderInfoTypeAMD"] = {
                ["reference"] = VK_AMD_shader_info,
                ["type"] = enums,
                },
            ["VkRenderPassSampleLocationsBeginInfoEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkStencilOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkFilter"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceASTCDecodeFeaturesEXT"] = {
                ["reference"] = VK_EXT_astc_decode_mode,
                ["type"] = structs,
                },
            ["VkPipelineShaderStageCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDisplayModePropertiesKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkOffset2D"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectTablePipelineEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkSpecializationInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkViewportSwizzleNV"] = {
                ["reference"] = VK_NV_viewport_swizzle,
                ["type"] = structs,
                },
            ["VkVendorId"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkExternalMemoryFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkRenderPassInputAttachmentAspectCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineShaderStageCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDescriptorUpdateTemplateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineCoverageModulationStateCreateFlagsNV"] = {
                ["reference"] = VK_NV_framebuffer_mixed_samples,
                ["type"] = bitmasks,
                },
            ["VkImage"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkSurfaceCapabilities2KHR"] = {
                ["reference"] = VK_KHR_get_surface_capabilities2,
                ["type"] = structs,
                },
            ["VkSampleCountFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkMemoryHeapFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkVertexInputAttributeDescription"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalMemoryBufferCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectTableCreateInfoNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkImageSubresourceLayers"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectEntryTypeNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = enums,
                },
            ["VkBufferImageCopy"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineLayoutCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkShaderModule"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkMemoryPriorityAllocateInfoEXT"] = {
                ["reference"] = VK_EXT_memory_priority,
                ["type"] = structs,
                },
            ["VkDispatchIndirectCommand"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkRayTracingShaderGroupTypeNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = enums,
                },
            ["VkMemoryAllocateFlagsInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineBindPoint"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkAttachmentDescriptionFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageFormatListCreateInfoKHR"] = {
                ["reference"] = VK_KHR_image_format_list,
                ["type"] = structs,
                },
            ["VkExportMemoryWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_memory_win32,
                ["type"] = structs,
                },
            ["VkImagePlaneMemoryRequirementsInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkIndirectCommandsLayoutUsageFlagsNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = bitmasks,
                },
            ["VkStreamDescriptorSurfaceCreateFlagsGGP"] = {
                ["reference"] = VK_GGP_stream_descriptor_surface,
                ["type"] = bitmasks,
                },
            ["VkCommandPoolCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFramebufferCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryGetWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_memory_win32,
                ["type"] = structs,
                },
            ["VkConditionalRenderingFlagsEXT"] = {
                ["reference"] = VK_EXT_conditional_rendering,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceScalarBlockLayoutFeaturesEXT"] = {
                ["reference"] = VK_EXT_scalar_block_layout,
                ["type"] = structs,
                },
            ["VkImportMemoryFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_memory_fd,
                ["type"] = structs,
                },
            ["VkDebugUtilsObjectNameInfoEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDepthClipEnableFeaturesEXT"] = {
                ["reference"] = VK_EXT_depth_clip_enable,
                ["type"] = structs,
                },
            ["VkPipelineMultisampleStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceCooperativeMatrixFeaturesNV"] = {
                ["reference"] = VK_NV_cooperative_matrix,
                ["type"] = structs,
                },
            ["VkPipelineDepthStencilStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSemaphoreGetWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_win32,
                ["type"] = structs,
                },
            ["VkSurfaceCounterFlagsEXT"] = {
                ["reference"] = VK_EXT_display_surface_counter,
                ["type"] = bitmasks,
                },
            ["VkDevice"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkPhysicalDeviceTransformFeedbackFeaturesEXT"] = {
                ["reference"] = VK_EXT_transform_feedback,
                ["type"] = structs,
                },
            ["VkGeometryFlagsNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = bitmasks,
                },
            ["VkSamplerCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineViewportExclusiveScissorStateCreateInfoNV"] = {
                ["reference"] = VK_NV_scissor_exclusive,
                ["type"] = structs,
                },
            ["VkMemoryFdPropertiesKHR"] = {
                ["reference"] = VK_KHR_external_memory_fd,
                ["type"] = structs,
                },
            ["VkAccelerationStructureCreateInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceVulkanMemoryModelFeaturesKHR"] = {
                ["reference"] = VK_KHR_vulkan_memory_model,
                ["type"] = structs,
                },
            ["VkImageViewASTCDecodeModeEXT"] = {
                ["reference"] = VK_EXT_astc_decode_mode,
                ["type"] = structs,
                },
            ["VkD3D12FenceSubmitInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_win32,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceSparseImageFormatInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkBufferCopy"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImageViewType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceExternalBufferInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDepthStencilResolvePropertiesKHR"] = {
                ["reference"] = VK_KHR_depth_stencil_resolve,
                ["type"] = structs,
                },
            ["VkQueueFamilyProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAttachmentDescription"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFramebuffer"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkSpecializationMapEntry"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAttachmentReference2KHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkSemaphoreGetFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_fd,
                ["type"] = structs,
                },
            ["VkImageTiling"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceInlineUniformBlockFeaturesEXT"] = {
                ["reference"] = VK_EXT_inline_uniform_block,
                ["type"] = structs,
                },
            ["VkMemoryGetFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_memory_fd,
                ["type"] = structs,
                },
            ["VkResult"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineInputAssemblyStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExportSemaphoreWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_win32,
                ["type"] = structs,
                },
            ["VkPipelineDynamicStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImportSemaphoreWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_win32,
                ["type"] = structs,
                },
            ["VkRenderPassBeginInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkTessellationDomainOrigin"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkCoarseSampleLocationNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkDedicatedAllocationMemoryAllocateInfoNV"] = {
                ["reference"] = VK_NV_dedicated_allocation,
                ["type"] = structs,
                },
            ["VkDisplayNativeHdrSurfaceCapabilitiesAMD"] = {
                ["reference"] = VK_AMD_display_native_hdr,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT"] = {
                ["reference"] = VK_EXT_blend_operation_advanced,
                ["type"] = structs,
                },
            ["VkStructureType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkMemoryRequirements2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationConservativeStateCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_conservative_rasterization,
                ["type"] = bitmasks,
                },
            ["VkCopyAccelerationStructureModeNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = enums,
                },
            ["VkDebugReportCallbackEXT"] = {
                ["reference"] = VK_EXT_debug_report,
                ["type"] = handles,
                },
            ["VkDrawIndexedIndirectCommand"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMacOSSurfaceCreateInfoMVK"] = {
                ["reference"] = VK_MVK_macos_surface,
                ["type"] = structs,
                },
            ["VkPipelineColorBlendStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceVariablePointersFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceExternalFenceInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCommandBufferBeginInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCommandBufferInheritanceInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryPropertyFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkQueryPoolCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDisplaySurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = bitmasks,
                },
            ["VkSparseMemoryBind"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMemoryProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPastPresentationTimingGOOGLE"] = {
                ["reference"] = VK_GOOGLE_display_timing,
                ["type"] = structs,
                },
            ["VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkCompositeAlphaFlagsKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"] = {
                ["reference"] = VK_EXT_buffer_device_address,
                ["type"] = structs,
                },
            ["VkXYColorEXT"] = {
                ["reference"] = VK_EXT_hdr_metadata,
                ["type"] = structs,
                },
            ["VkValidationFlagsEXT"] = {
                ["reference"] = VK_EXT_validation_flags,
                ["type"] = structs,
                },
            ["VkExternalSemaphoreHandleTypeFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkRenderPassCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkBindBufferMemoryDeviceGroupInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectTablePushConstantEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkValidationFeaturesEXT"] = {
                ["reference"] = VK_EXT_validation_features,
                ["type"] = structs,
                },
            ["VkPipelineCacheHeaderVersion"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDisplayPresentInfoKHR"] = {
                ["reference"] = VK_KHR_display_swapchain,
                ["type"] = structs,
                },
            ["VkSamplerAddressMode"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDescriptorSetLayout"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkClearDepthStencilValue"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImportSemaphoreFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_semaphore_fd,
                ["type"] = structs,
                },
            ["VkQueryPipelineStatisticFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkObjectTableEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineSampleLocationsStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkPipelineCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkSamplerMipmapMode"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkSamplerYcbcrConversionInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkNativeBufferANDROID"] = {
                ["reference"] = unreferenced,
                ["type"] = structs,
                },
            ["VkShaderModuleCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkBindAccelerationStructureMemoryInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkGeometryInstanceFlagsNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = bitmasks,
                },
            ["VkFormatProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationStateRasterizationOrderAMD"] = {
                ["reference"] = VK_AMD_rasterization_order,
                ["type"] = structs,
                },
            ["VkShaderStatisticsInfoAMD"] = {
                ["reference"] = VK_AMD_shader_info,
                ["type"] = structs,
                },
            ["VkStreamDescriptorSurfaceCreateInfoGGP"] = {
                ["reference"] = VK_GGP_stream_descriptor_surface,
                ["type"] = structs,
                },
            ["VkDescriptorPoolCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["PFN_vkFreeFunction"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkHeadlessSurfaceCreateInfoEXT"] = {
                ["reference"] = VK_EXT_headless_surface,
                ["type"] = structs,
                },
            ["VkImageViewCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkSurfaceCapabilitiesFullScreenExclusiveEXT"] = {
                ["reference"] = VK_EXT_full_screen_exclusive,
                ["type"] = structs,
                },
            ["VkSurfaceFullScreenExclusiveWin32InfoEXT"] = {
                ["reference"] = VK_EXT_full_screen_exclusive,
                ["type"] = structs,
                },
            ["VkSurfaceFullScreenExclusiveInfoEXT"] = {
                ["reference"] = VK_EXT_full_screen_exclusive,
                ["type"] = structs,
                },
            ["VkBufferViewCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExtensionProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkHdrMetadataEXT"] = {
                ["reference"] = VK_EXT_hdr_metadata,
                ["type"] = structs,
                },
            ["VkImportMemoryWin32HandleInfoNV"] = {
                ["reference"] = VK_NV_external_memory_win32,
                ["type"] = structs,
                },
            ["VkImageViewHandleInfoNVX"] = {
                ["reference"] = VK_NVX_image_view_handle,
                ["type"] = structs,
                },
            ["VkComponentMapping"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFenceCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageMemoryBarrier"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCopyDescriptorSet"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAndroidHardwareBufferUsageANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkClearAttachment"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceCooperativeMatrixPropertiesNV"] = {
                ["reference"] = VK_NV_cooperative_matrix,
                ["type"] = structs,
                },
            ["VkPipelineViewportSwizzleStateCreateFlagsNV"] = {
                ["reference"] = VK_NV_viewport_swizzle,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceImageViewImageFormatInfoEXT"] = {
                ["reference"] = VK_EXT_filter_cubic,
                ["type"] = structs,
                },
            ["VkBufferDeviceAddressInfoEXT"] = {
                ["reference"] = VK_EXT_buffer_device_address,
                ["type"] = structs,
                },
            ["VkDescriptorUpdateTemplateType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDrawMeshTasksIndirectCommandNV"] = {
                ["reference"] = VK_NV_mesh_shader,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMemoryPriorityFeaturesEXT"] = {
                ["reference"] = VK_EXT_memory_priority,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceShaderCorePropertiesAMD"] = {
                ["reference"] = VK_AMD_shader_core_properties,
                ["type"] = structs,
                },
            ["VkExternalMemoryHandleTypeFlagsNV"] = {
                ["reference"] = VK_NV_external_memory_capabilities,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceMemoryBudgetPropertiesEXT"] = {
                ["reference"] = VK_EXT_memory_budget,
                ["type"] = structs,
                },
            ["VkSurfaceProtectedCapabilitiesKHR"] = {
                ["reference"] = VK_KHR_surface_protected_capabilities,
                ["type"] = structs,
                },
            ["VkMemoryDedicatedRequirements"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkQueueFamilyCheckpointPropertiesNV"] = {
                ["reference"] = VK_NV_device_diagnostic_checkpoints,
                ["type"] = structs,
                },
            ["VkDisplayModeKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = handles,
                },
            ["VkImageFormatProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSampler"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT"] = {
                ["reference"] = VK_EXT_blend_operation_advanced,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFragmentDensityMapFeaturesEXT"] = {
                ["reference"] = VK_EXT_fragment_density_map,
                ["type"] = structs,
                },
            ["VkDeviceMemoryOverallocationCreateInfoAMD"] = {
                ["reference"] = VK_AMD_memory_overallocation_behavior,
                ["type"] = structs,
                },
            ["VkPipelineCoverageToColorStateCreateInfoNV"] = {
                ["reference"] = VK_NV_fragment_coverage_to_color,
                ["type"] = structs,
                },
            ["VkSurfaceFormatKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = structs,
                },
            ["VkAndroidHardwareBufferPropertiesANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkRenderPassMultiviewCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkClearRect"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAndroidHardwareBufferFormatPropertiesANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkDrmFormatModifierPropertiesEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkPhysicalDevicePCIBusInfoPropertiesEXT"] = {
                ["reference"] = VK_EXT_pci_bus_info,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceRayTracingPropertiesNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationStateStreamCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_transform_feedback,
                ["type"] = bitmasks,
                },
            ["VkWriteDescriptorSetAccelerationStructureNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkAccelerationStructureInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkGeometryDataNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkComputePipelineCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkIndirectCommandsLayoutNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = handles,
                },
            ["VkImageBlit"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkRayTracingShaderGroupCreateInfoNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMeshShaderPropertiesNV"] = {
                ["reference"] = VK_NV_mesh_shader,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMeshShaderFeaturesNV"] = {
                ["reference"] = VK_NV_mesh_shader,
                ["type"] = structs,
                },
            ["VkDescriptorImageInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorSetAllocateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDeviceMemory"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkPhysicalDeviceShadingRateImagePropertiesNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkImageFormatProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceShadingRateImageFeaturesNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkPipelineViewportShadingRateImageStateCreateInfoNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkShadingRatePaletteNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = structs,
                },
            ["VkPipelineViewportStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV"] = {
                ["reference"] = VK_NV_dedicated_allocation_image_aliasing,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceShaderImageFootprintFeaturesNV"] = {
                ["reference"] = VK_NV_shader_image_footprint,
                ["type"] = structs,
                },
            ["VkSubgroupFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDisplayPowerInfoEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = structs,
                },
            ["VkPresentRegionsKHR"] = {
                ["reference"] = VK_KHR_incremental_present,
                ["type"] = structs,
                },
            ["VkSamplerYcbcrModelConversion"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"] = {
                ["reference"] = VK_NV_fragment_shader_barycentric,
                ["type"] = structs,
                },
            ["VkExportMemoryWin32HandleInfoNV"] = {
                ["reference"] = VK_NV_external_memory_win32,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceComputeShaderDerivativesFeaturesNV"] = {
                ["reference"] = VK_NV_compute_shader_derivatives,
                ["type"] = structs,
                },
            ["VkEventCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCompareOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceExclusiveScissorFeaturesNV"] = {
                ["reference"] = VK_NV_scissor_exclusive,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT"] = {
                ["reference"] = VK_EXT_sampler_filter_minmax,
                ["type"] = structs,
                },
            ["VkDescriptorPoolSize"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineDepthStencilStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkBindImageMemorySwapchainInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkDeviceGeneratedCommandsLimitsNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkPipelineRasterizationStateStreamCreateInfoEXT"] = {
                ["reference"] = VK_EXT_transform_feedback,
                ["type"] = structs,
                },
            ["VkSubresourceLayout"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceTransformFeedbackPropertiesEXT"] = {
                ["reference"] = VK_EXT_transform_feedback,
                ["type"] = structs,
                },
            ["VkSubpassDescriptionDepthStencilResolveKHR"] = {
                ["reference"] = VK_KHR_depth_stencil_resolve,
                ["type"] = structs,
                },
            ["VkWin32SurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_win32_surface,
                ["type"] = bitmasks,
                },
            ["VkCheckpointDataNV"] = {
                ["reference"] = VK_NV_device_diagnostic_checkpoints,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFragmentDensityMapPropertiesEXT"] = {
                ["reference"] = VK_EXT_fragment_density_map,
                ["type"] = structs,
                },
            ["VkDebugUtilsLabelEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT"] = {
                ["reference"] = VK_EXT_vertex_attribute_divisor,
                ["type"] = structs,
                },
            ["VkPrimitiveTopology"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceConditionalRenderingFeaturesEXT"] = {
                ["reference"] = VK_EXT_conditional_rendering,
                ["type"] = structs,
                },
            ["VkProtectedSubmitInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCommandBufferInheritanceConditionalRenderingInfoEXT"] = {
                ["reference"] = VK_EXT_conditional_rendering,
                ["type"] = structs,
                },
            ["VkImageDrmFormatModifierListCreateInfoEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkSparseMemoryBindFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageSubresourceRange"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkQueueFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageDrmFormatModifierPropertiesEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkXlibSurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_xlib_surface,
                ["type"] = bitmasks,
                },
            ["VkCooperativeMatrixPropertiesNV"] = {
                ["reference"] = VK_NV_cooperative_matrix,
                ["type"] = structs,
                },
            ["VkBufferMemoryBarrier"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImportAndroidHardwareBufferInfoANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkDrmFormatModifierPropertiesListEXT"] = {
                ["reference"] = VK_EXT_image_drm_format_modifier,
                ["type"] = structs,
                },
            ["VkMemoryBarrier"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkTimeDomainEXT"] = {
                ["reference"] = VK_EXT_calibrated_timestamps,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"] = {
                ["reference"] = VK_EXT_vertex_attribute_divisor,
                ["type"] = structs,
                },
            ["VkSparseImageMemoryRequirements"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkVertexInputBindingDivisorDescriptionEXT"] = {
                ["reference"] = VK_EXT_vertex_attribute_divisor,
                ["type"] = structs,
                },
            ["VkDeviceGroupDeviceCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkRenderPassCreateInfo2KHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkStencilFaceFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineMultisampleStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = structs,
                },
            ["VkDescriptorUpdateTemplateEntry"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkBorderColor"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkQueryPoolCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = structs,
                },
            ["VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDescriptorIndexingFeaturesEXT"] = {
                ["reference"] = VK_EXT_descriptor_indexing,
                ["type"] = structs,
                },
            ["VkBlendOverlapEXT"] = {
                ["reference"] = VK_EXT_blend_operation_advanced,
                ["type"] = enums,
                },
            ["VkCalibratedTimestampInfoEXT"] = {
                ["reference"] = VK_EXT_calibrated_timestamps,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceConservativeRasterizationPropertiesEXT"] = {
                ["reference"] = VK_EXT_conservative_rasterization,
                ["type"] = structs,
                },
            ["VkViSurfaceCreateFlagsNN"] = {
                ["reference"] = VK_NN_vi_surface,
                ["type"] = bitmasks,
                },
            ["VkQueueFamilyProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryHostPointerPropertiesEXT"] = {
                ["reference"] = VK_EXT_external_memory_host,
                ["type"] = structs,
                },
            ["VkSemaphoreImportFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImagePipeSurfaceCreateFlagsFUCHSIA"] = {
                ["reference"] = VK_FUCHSIA_imagepipe_surface,
                ["type"] = bitmasks,
                },
            ["VkImportMemoryHostPointerInfoEXT"] = {
                ["reference"] = VK_EXT_external_memory_host,
                ["type"] = structs,
                },
            ["VkDebugUtilsMessengerCallbackDataEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = structs,
                },
            ["VkDebugUtilsMessengerCreateInfoEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceHostQueryResetFeaturesEXT"] = {
                ["reference"] = VK_EXT_host_query_reset,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFloatControlsPropertiesKHR"] = {
                ["reference"] = VK_KHR_shader_float_controls,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceFloat16Int8FeaturesKHR"] = {
                ["reference"] = VK_KHR_shader_float16_int8,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceShaderDrawParametersFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorSetLayoutSupport"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceInlineUniformBlockPropertiesEXT"] = {
                ["reference"] = VK_EXT_inline_uniform_block,
                ["type"] = structs,
                },
            ["VkValidationCacheCreateInfoEXT"] = {
                ["reference"] = VK_EXT_validation_cache,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceExternalImageFormatInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPresentTimesInfoGOOGLE"] = {
                ["reference"] = VK_GOOGLE_display_timing,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMaintenance3Properties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineColorBlendAdvancedStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_blend_operation_advanced,
                ["type"] = structs,
                },
            ["VkCommandBuffer"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkPhysicalDeviceSparseProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSamplerReductionModeCreateInfoEXT"] = {
                ["reference"] = VK_EXT_sampler_filter_minmax,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceSampleLocationsPropertiesEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkSubpassSampleLocationsEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkBuffer"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkRenderPassCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkViewport"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkClearValue"] = {
                ["reference"] = core,
                ["type"] = unions,
                },
            ["VkExportFenceCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSampleLocationsInfoEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkImageStencilUsageCreateInfoEXT"] = {
                ["reference"] = VK_EXT_separate_stencil_usage,
                ["type"] = structs,
                },
            ["VkDeviceQueueInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceProtectedMemoryProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["PFN_vkDebugUtilsMessengerCallbackEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = funcpointers,
                },
            ["VkMemoryWin32HandlePropertiesKHR"] = {
                ["reference"] = VK_KHR_external_memory_win32,
                ["type"] = structs,
                },
            ["VkDisplayPlaneAlphaFlagsKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceProtectedMemoryFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDevice8BitStorageFeaturesKHR"] = {
                ["reference"] = VK_KHR_8bit_storage,
                ["type"] = structs,
                },
            ["VkConditionalRenderingBeginInfoEXT"] = {
                ["reference"] = VK_EXT_conditional_rendering,
                ["type"] = structs,
                },
            ["VkTextureLODGatherFormatPropertiesAMD"] = {
                ["reference"] = VK_AMD_texture_gather_bias_lod,
                ["type"] = structs,
                },
            ["VkViewportCoordinateSwizzleNV"] = {
                ["reference"] = VK_NV_viewport_swizzle,
                ["type"] = enums,
                },
            ["VkBlendFactor"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkDrawIndirectCommand"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSparseImageMemoryBind"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkSystemAllocationScope"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkSamplerYcbcrConversionCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDebugUtilsMessageTypeFlagsEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = bitmasks,
                },
            ["VkImageViewUsageCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDevicePointClippingProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkGraphicsPipelineCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV"] = {
                ["reference"] = VK_NV_representative_fragment_test,
                ["type"] = structs,
                },
            ["VkPipelineCoverageToColorStateCreateFlagsNV"] = {
                ["reference"] = VK_NV_fragment_coverage_to_color,
                ["type"] = bitmasks,
                },
            ["VkEventCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDescriptorPool"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkSamplerCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPeerMemoryFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkSwapchainDisplayNativeHdrCreateInfoAMD"] = {
                ["reference"] = VK_AMD_display_native_hdr,
                ["type"] = structs,
                },
            ["VkExportMemoryAllocateInfoNV"] = {
                ["reference"] = VK_NV_external_memory,
                ["type"] = structs,
                },
            ["VkBindImagePlaneMemoryInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineCreationFeedbackCreateInfoEXT"] = {
                ["reference"] = VK_EXT_pipeline_creation_feedback,
                ["type"] = structs,
                },
            ["VkBufferMemoryRequirementsInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkQueueGlobalPriorityEXT"] = {
                ["reference"] = VK_EXT_global_priority,
                ["type"] = enums,
                },
            ["VkDisplayPlanePropertiesKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceSubgroupProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAndroidSurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_android_surface,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDevice16BitStorageFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDisplayPlaneCapabilities2KHR"] = {
                ["reference"] = VK_KHR_get_display_properties2,
                ["type"] = structs,
                },
            ["VkDeviceGroupRenderPassBeginInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkImageViewCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDisplayKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = handles,
                },
            ["VkDisplayModeProperties2KHR"] = {
                ["reference"] = VK_KHR_get_display_properties2,
                ["type"] = structs,
                },
            ["VkCommandPoolCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineVertexInputStateCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDisplayProperties2KHR"] = {
                ["reference"] = VK_KHR_get_display_properties2,
                ["type"] = structs,
                },
            ["VkMemoryType"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAccelerationStructureMemoryRequirementsTypeNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = enums,
                },
            ["VkSubpassDescription2KHR"] = {
                ["reference"] = VK_KHR_create_renderpass2,
                ["type"] = structs,
                },
            ["VkEvent"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkExternalImageFormatProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkQueryControlFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDeviceDiscardRectanglePropertiesEXT"] = {
                ["reference"] = VK_EXT_discard_rectangles,
                ["type"] = structs,
                },
            ["VkPipelineViewportSwizzleStateCreateInfoNV"] = {
                ["reference"] = VK_NV_viewport_swizzle,
                ["type"] = structs,
                },
            ["VkImageSubresource"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFullScreenExclusiveEXT"] = {
                ["reference"] = VK_EXT_full_screen_exclusive,
                ["type"] = enums,
                },
            ["VkDeviceGroupSubmitInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkValidationCheckEXT"] = {
                ["reference"] = VK_EXT_validation_flags,
                ["type"] = enums,
                },
            ["VkScopeNV"] = {
                ["reference"] = VK_NV_cooperative_matrix,
                ["type"] = enums,
                },
            ["VkImagePipeSurfaceCreateInfoFUCHSIA"] = {
                ["reference"] = VK_FUCHSIA_imagepipe_surface,
                ["type"] = structs,
                },
            ["VkPipelineCache"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkGeometryTypeNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = enums,
                },
            ["VkSwapchainCounterCreateInfoEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = structs,
                },
            ["VkDeviceGroupBindSparseInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPresentTimeGOOGLE"] = {
                ["reference"] = VK_GOOGLE_display_timing,
                ["type"] = structs,
                },
            ["VkPipelineCoverageModulationStateCreateInfoNV"] = {
                ["reference"] = VK_NV_framebuffer_mixed_samples,
                ["type"] = structs,
                },
            ["VkDebugUtilsMessageSeverityFlagsEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = bitmasks,
                },
            ["VkPipelineCreationFeedbackEXT"] = {
                ["reference"] = VK_EXT_pipeline_creation_feedback,
                ["type"] = structs,
                },
            ["VkCoarseSampleOrderTypeNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = enums,
                },
            ["VkIndirectCommandsTokenTypeNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = enums,
                },
            ["VkStencilOpState"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorSetLayoutBinding"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDebugReportFlagsEXT"] = {
                ["reference"] = VK_EXT_debug_report,
                ["type"] = bitmasks,
                },
            ["VkResolveModeFlagsKHR"] = {
                ["reference"] = VK_KHR_depth_stencil_resolve,
                ["type"] = bitmasks,
                },
            ["VkSamplerYcbcrConversion"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkDebugUtilsMessengerCallbackDataFlagsEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = bitmasks,
                },
            ["VkDisplayPlaneProperties2KHR"] = {
                ["reference"] = VK_KHR_get_display_properties2,
                ["type"] = structs,
                },
            ["VkInstance"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkConservativeRasterizationModeEXT"] = {
                ["reference"] = VK_EXT_conservative_rasterization,
                ["type"] = enums,
                },
            ["VkInstanceCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDedicatedAllocationBufferCreateInfoNV"] = {
                ["reference"] = VK_NV_dedicated_allocation,
                ["type"] = structs,
                },
            ["VkCommandBufferResetFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDeviceGroupPresentInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkAttachmentLoadOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineCacheCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkAcquireNextImageInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkShaderStageFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkImageSwapchainCreateInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkDeviceEventTypeEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = enums,
                },
            ["VkAttachmentSampleLocationsEXT"] = {
                ["reference"] = VK_EXT_sample_locations,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceGroupProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineDiscardRectangleStateCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_discard_rectangles,
                ["type"] = bitmasks,
                },
            ["VkSurfaceCapabilities2EXT"] = {
                ["reference"] = VK_EXT_display_surface_counter,
                ["type"] = structs,
                },
            ["VkFramebufferCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkBindImageMemoryDeviceGroupInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceMultiviewFeatures"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkFenceGetFdInfoKHR"] = {
                ["reference"] = VK_KHR_external_fence_fd,
                ["type"] = structs,
                },
            ["VkFenceGetWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_fence_win32,
                ["type"] = structs,
                },
            ["VkColorSpaceKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = enums,
                },
            ["VkBufferUsageFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkSparseImageFormatProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkMemoryAllocateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkObjectTableIndexBufferEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkDisplayModeParametersKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkBlendOp"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkSemaphore"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkExportSemaphoreCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkIndexType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineCreationFeedbackFlagsEXT"] = {
                ["reference"] = VK_EXT_pipeline_creation_feedback,
                ["type"] = bitmasks,
                },
            ["VkPointClippingBehavior"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkSubpassDescriptionFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDisplayPropertiesKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkAccelerationStructureNV"] = {
                ["reference"] = VK_NV_ray_tracing,
                ["type"] = handles,
                },
            ["VkQueryPool"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkExtent2D"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkComponentSwizzle"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceIDProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkColorComponentFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkInternalAllocationType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkRectLayerKHR"] = {
                ["reference"] = VK_KHR_incremental_present,
                ["type"] = structs,
                },
            ["VkSubpassDescription"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPresentRegionKHR"] = {
                ["reference"] = VK_KHR_incremental_present,
                ["type"] = structs,
                },
            ["VkRect2D"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkExternalMemoryHandleTypeFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPhysicalDevicePushDescriptorPropertiesKHR"] = {
                ["reference"] = VK_KHR_push_descriptor,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceDriverPropertiesKHR"] = {
                ["reference"] = VK_KHR_driver_properties,
                ["type"] = structs,
                },
            ["VkSurfaceKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = handles,
                },
            ["VkSparseImageFormatProperties2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDiscardRectangleModeEXT"] = {
                ["reference"] = VK_EXT_discard_rectangles,
                ["type"] = enums,
                },
            ["VkObjectTableVertexBufferEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkCoverageModulationModeNV"] = {
                ["reference"] = VK_NV_framebuffer_mixed_samples,
                ["type"] = enums,
                },
            ["VkObjectTableDescriptorSetEntryNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkDescriptorType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineVertexInputStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkWaylandSurfaceCreateFlagsKHR"] = {
                ["reference"] = VK_KHR_wayland_surface,
                ["type"] = bitmasks,
                },
            ["VkCmdProcessCommandsInfoNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkValidationFeatureDisableEXT"] = {
                ["reference"] = VK_EXT_validation_features,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceMemoryProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkCommandBufferUsageFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkExternalFenceHandleTypeFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDebugUtilsMessengerCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_debug_utils,
                ["type"] = bitmasks,
                },
            ["VkDisplayEventTypeEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = enums,
                },
            ["VkDescriptorSet"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkIndirectCommandsLayoutTokenNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkIndirectCommandsTokenNVX"] = {
                ["reference"] = VK_NVX_device_generated_commands,
                ["type"] = structs,
                },
            ["VkDebugReportCallbackCreateInfoEXT"] = {
                ["reference"] = VK_EXT_debug_report,
                ["type"] = structs,
                },
            ["VkImageLayout"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkValidationCacheEXT"] = {
                ["reference"] = VK_EXT_validation_cache,
                ["type"] = handles,
                },
            ["VkExternalMemoryImageCreateInfoNV"] = {
                ["reference"] = VK_NV_external_memory,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceLimits"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkWin32KeyedMutexAcquireReleaseInfoNV"] = {
                ["reference"] = unreferenced,
                ["type"] = structs,
                },
            ["VkPresentInfoKHR"] = {
                ["reference"] = VK_KHR_swapchain,
                ["type"] = structs,
                },
            ["VkXlibSurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_xlib_surface,
                ["type"] = structs,
                },
            ["VkWin32SurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_win32_surface,
                ["type"] = structs,
                },
            ["VkWaylandSurfaceCreateInfoKHR"] = {
                ["reference"] = VK_KHR_wayland_surface,
                ["type"] = structs,
                },
            ["VkViSurfaceCreateInfoNN"] = {
                ["reference"] = VK_NN_vi_surface,
                ["type"] = structs,
                },
            ["VkSurfaceCapabilitiesKHR"] = {
                ["reference"] = VK_KHR_surface,
                ["type"] = structs,
                },
            ["VkDisplayModeCreateInfoKHR"] = {
                ["reference"] = VK_KHR_display,
                ["type"] = structs,
                },
            ["VkMappedMemoryRange"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorBufferInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDriverIdKHR"] = {
                ["reference"] = VK_KHR_driver_properties,
                ["type"] = enums,
                },
            ["VkBaseOutStructure"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDescriptorPoolResetFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkMemoryGetAndroidHardwareBufferInfoANDROID"] = {
                ["reference"] = VK_ANDROID_external_memory_android_hardware_buffer,
                ["type"] = structs,
                },
            ["VkDisplayEventInfoEXT"] = {
                ["reference"] = VK_EXT_display_control,
                ["type"] = structs,
                },
            ["VkPipeline"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkFormatFeatureFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkVertexInputBindingDescription"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["PFN_vkDebugReportCallbackEXT"] = {
                ["reference"] = VK_EXT_debug_report,
                ["type"] = funcpointers,
                },
            ["VkPhysicalDeviceCornerSampledImageFeaturesNV"] = {
                ["reference"] = VK_NV_corner_sampled_image,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceImageFormatInfo2"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkAttachmentReference"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkDependencyFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkPipelineCacheCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["PFN_vkVoidFunction"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkPhysicalDeviceShaderAtomicInt64FeaturesKHR"] = {
                ["reference"] = VK_KHR_shader_atomic_int64,
                ["type"] = structs,
                },
            ["VkObjectType"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkPipelineLayout"] = {
                ["reference"] = core,
                ["type"] = handles,
                },
            ["VkShadingRatePaletteEntryNV"] = {
                ["reference"] = VK_NV_shading_rate_image,
                ["type"] = enums,
                },
            ["VkPhysicalDeviceProperties"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkWin32KeyedMutexAcquireReleaseInfoKHR"] = {
                ["reference"] = VK_KHR_win32_keyed_mutex,
                ["type"] = structs,
                },
            ["VkPhysicalDeviceYcbcrImageArraysFeaturesEXT"] = {
                ["reference"] = VK_EXT_ycbcr_image_arrays,
                ["type"] = structs,
                },
            ["VkValidationCacheCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_validation_cache,
                ["type"] = bitmasks,
                },
            ["VkFrontFace"] = {
                ["reference"] = core,
                ["type"] = enums,
                },
            ["VkBufferCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["PFN_vkInternalFreeNotification"] = {
                ["reference"] = core,
                ["type"] = funcpointers,
                },
            ["VkPipelineVertexInputDivisorStateCreateInfoEXT"] = {
                ["reference"] = VK_EXT_vertex_attribute_divisor,
                ["type"] = structs,
                },
            ["VkDeviceQueueCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkExportFenceWin32HandleInfoKHR"] = {
                ["reference"] = VK_KHR_external_fence_win32,
                ["type"] = structs,
                },
            ["VkInstanceCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkPipelineViewportStateCreateInfo"] = {
                ["reference"] = core,
                ["type"] = structs,
                },
            ["VkHeadlessSurfaceCreateFlagsEXT"] = {
                ["reference"] = VK_EXT_headless_surface,
                ["type"] = bitmasks,
                },
            ["VkRasterizationOrderAMD"] = {
                ["reference"] = VK_AMD_rasterization_order,
                ["type"] = enums,
                },
            ["VkIOSSurfaceCreateInfoMVK"] = {
                ["reference"] = VK_MVK_ios_surface,
                ["type"] = structs,
                },
            ["VkImageCreateFlags"] = {
                ["reference"] = core,
                ["type"] = bitmasks,
                },
            ["VkDebugReportObjectTypeEXT"] = {
                ["reference"] = VK_EXT_debug_report,
                ["type"] = enums,
                },
            },
        ["enums"] = {
            ["VkPrimitiveTopology"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_LIST,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,
                        ["value"] = 10,
                        },
                    },
                },
            ["VkComponentTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COMPONENT_TYPE_FLOAT16_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMPONENT_TYPE_FLOAT32_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COMPONENT_TYPE_FLOAT64_NV,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COMPONENT_TYPE_SINT8_NV,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_COMPONENT_TYPE_SINT16_NV,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_COMPONENT_TYPE_SINT32_NV,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_COMPONENT_TYPE_SINT64_NV,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_COMPONENT_TYPE_UINT8_NV,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_COMPONENT_TYPE_UINT16_NV,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_COMPONENT_TYPE_UINT32_NV,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_COMPONENT_TYPE_UINT64_NV,
                        ["value"] = 10,
                        },
                    },
                },
            ["VkMemoryOverallocationBehaviorAMD"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkFrontFace"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_FRONT_FACE_COUNTER_CLOCKWISE,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_FRONT_FACE_CLOCKWISE,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkConservativeRasterizationModeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkDynamicState"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DYNAMIC_STATE_VIEWPORT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DYNAMIC_STATE_SCISSOR,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DYNAMIC_STATE_LINE_WIDTH,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DYNAMIC_STATE_DEPTH_BIAS,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_DYNAMIC_STATE_BLEND_CONSTANTS,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_DYNAMIC_STATE_DEPTH_BOUNDS,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_DYNAMIC_STATE_STENCIL_WRITE_MASK,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_DYNAMIC_STATE_STENCIL_REFERENCE,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["value"] = 1000088000,
                        ["name"] = VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV,
                        ["extension"] = VK_NV_clip_space_w_scaling,
                        },
                    [11] = {
                        ["value"] = 1000100000,
                        ["name"] = VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT,
                        ["extension"] = VK_EXT_discard_rectangles,
                        },
                    [12] = {
                        ["value"] = 1000144000,
                        ["name"] = VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [13] = {
                        ["value"] = 1000165004,
                        ["name"] = VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [14] = {
                        ["value"] = 1000165006,
                        ["name"] = VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [15] = {
                        ["value"] = 1000206001,
                        ["name"] = VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV,
                        ["extension"] = VK_NV_scissor_exclusive,
                        },
                    },
                },
            ["VkTimeDomainEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_TIME_DOMAIN_DEVICE_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT,
                        ["value"] = 3,
                        },
                    },
                },
            ["VkSamplerMipmapMode"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SAMPLER_MIPMAP_MODE_NEAREST,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SAMPLER_MIPMAP_MODE_LINEAR,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkShaderInfoTypeAMD"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SHADER_INFO_TYPE_STATISTICS_AMD,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SHADER_INFO_TYPE_BINARY_AMD,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkDeviceEventTypeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,
                        ["value"] = 0,
                        },
                    },
                },
            ["VkStencilOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_STENCIL_OP_KEEP,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_STENCIL_OP_ZERO,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_STENCIL_OP_REPLACE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_STENCIL_OP_INCREMENT_AND_CLAMP,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_STENCIL_OP_DECREMENT_AND_CLAMP,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_STENCIL_OP_INVERT,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_STENCIL_OP_INCREMENT_AND_WRAP,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_STENCIL_OP_DECREMENT_AND_WRAP,
                        ["value"] = 7,
                        },
                    },
                },
            ["VkFilter"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_FILTER_NEAREST,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_FILTER_LINEAR,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["value"] = 1000016000,
                        ["name"] = VK_FILTER_CUBIC_IMG,
                        ["extension"] = VK_IMG_filter_cubic,
                        },
                    },
                },
            ["VkBorderColor"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_BORDER_COLOR_INT_TRANSPARENT_BLACK,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_BORDER_COLOR_INT_OPAQUE_BLACK,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_BORDER_COLOR_INT_OPAQUE_WHITE,
                        ["value"] = 5,
                        },
                    },
                },
            ["VkImageTiling"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_IMAGE_TILING_OPTIMAL,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_IMAGE_TILING_LINEAR,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["value"] = 1000159000,
                        ["name"] = VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    },
                },
            ["VkComponentSwizzle"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_IDENTITY,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_ZERO,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_ONE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_R,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_G,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_B,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_COMPONENT_SWIZZLE_A,
                        ["value"] = 6,
                        },
                    },
                },
            ["VkColorSpaceKHR"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["value"] = 1000105001,
                        ["name"] = VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [3] = {
                        ["value"] = 1000105002,
                        ["name"] = VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [4] = {
                        ["value"] = 1000105003,
                        ["name"] = VK_COLOR_SPACE_DCI_P3_LINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [5] = {
                        ["value"] = 1000105004,
                        ["name"] = VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [6] = {
                        ["value"] = 1000105005,
                        ["name"] = VK_COLOR_SPACE_BT709_LINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [7] = {
                        ["value"] = 1000105006,
                        ["name"] = VK_COLOR_SPACE_BT709_NONLINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [8] = {
                        ["value"] = 1000105007,
                        ["name"] = VK_COLOR_SPACE_BT2020_LINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [9] = {
                        ["value"] = 1000105008,
                        ["name"] = VK_COLOR_SPACE_HDR10_ST2084_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [10] = {
                        ["value"] = 1000105009,
                        ["name"] = VK_COLOR_SPACE_DOLBYVISION_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [11] = {
                        ["value"] = 1000105010,
                        ["name"] = VK_COLOR_SPACE_HDR10_HLG_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [12] = {
                        ["value"] = 1000105011,
                        ["name"] = VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [13] = {
                        ["value"] = 1000105012,
                        ["name"] = VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [14] = {
                        ["value"] = 1000105013,
                        ["name"] = VK_COLOR_SPACE_PASS_THROUGH_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [15] = {
                        ["value"] = 1000105014,
                        ["name"] = VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT,
                        ["extension"] = VK_EXT_swapchain_colorspace,
                        },
                    [16] = {
                        ["value"] = 1000214000,
                        ["name"] = VK_COLOR_SPACE_DISPLAY_NATIVE_AMD,
                        ["extension"] = VK_AMD_display_native_hdr,
                        },
                    },
                },
            ["VkBlendOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_BLEND_OP_ADD,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_BLEND_OP_SUBTRACT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_BLEND_OP_REVERSE_SUBTRACT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_BLEND_OP_MIN,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_BLEND_OP_MAX,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["value"] = 1000149000,
                        ["name"] = VK_BLEND_OP_ZERO_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [7] = {
                        ["value"] = 1000149001,
                        ["name"] = VK_BLEND_OP_SRC_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [8] = {
                        ["value"] = 1000149002,
                        ["name"] = VK_BLEND_OP_DST_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [9] = {
                        ["value"] = 1000149003,
                        ["name"] = VK_BLEND_OP_SRC_OVER_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [10] = {
                        ["value"] = 1000149004,
                        ["name"] = VK_BLEND_OP_DST_OVER_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [11] = {
                        ["value"] = 1000149005,
                        ["name"] = VK_BLEND_OP_SRC_IN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [12] = {
                        ["value"] = 1000149006,
                        ["name"] = VK_BLEND_OP_DST_IN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [13] = {
                        ["value"] = 1000149007,
                        ["name"] = VK_BLEND_OP_SRC_OUT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [14] = {
                        ["value"] = 1000149008,
                        ["name"] = VK_BLEND_OP_DST_OUT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [15] = {
                        ["value"] = 1000149009,
                        ["name"] = VK_BLEND_OP_SRC_ATOP_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [16] = {
                        ["value"] = 1000149010,
                        ["name"] = VK_BLEND_OP_DST_ATOP_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [17] = {
                        ["value"] = 1000149011,
                        ["name"] = VK_BLEND_OP_XOR_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [18] = {
                        ["value"] = 1000149012,
                        ["name"] = VK_BLEND_OP_MULTIPLY_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [19] = {
                        ["value"] = 1000149013,
                        ["name"] = VK_BLEND_OP_SCREEN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [20] = {
                        ["value"] = 1000149014,
                        ["name"] = VK_BLEND_OP_OVERLAY_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [21] = {
                        ["value"] = 1000149015,
                        ["name"] = VK_BLEND_OP_DARKEN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [22] = {
                        ["value"] = 1000149016,
                        ["name"] = VK_BLEND_OP_LIGHTEN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [23] = {
                        ["value"] = 1000149017,
                        ["name"] = VK_BLEND_OP_COLORDODGE_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [24] = {
                        ["value"] = 1000149018,
                        ["name"] = VK_BLEND_OP_COLORBURN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [25] = {
                        ["value"] = 1000149019,
                        ["name"] = VK_BLEND_OP_HARDLIGHT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [26] = {
                        ["value"] = 1000149020,
                        ["name"] = VK_BLEND_OP_SOFTLIGHT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [27] = {
                        ["value"] = 1000149021,
                        ["name"] = VK_BLEND_OP_DIFFERENCE_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [28] = {
                        ["value"] = 1000149022,
                        ["name"] = VK_BLEND_OP_EXCLUSION_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [29] = {
                        ["value"] = 1000149023,
                        ["name"] = VK_BLEND_OP_INVERT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [30] = {
                        ["value"] = 1000149024,
                        ["name"] = VK_BLEND_OP_INVERT_RGB_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [31] = {
                        ["value"] = 1000149025,
                        ["name"] = VK_BLEND_OP_LINEARDODGE_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [32] = {
                        ["value"] = 1000149026,
                        ["name"] = VK_BLEND_OP_LINEARBURN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [33] = {
                        ["value"] = 1000149027,
                        ["name"] = VK_BLEND_OP_VIVIDLIGHT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [34] = {
                        ["value"] = 1000149028,
                        ["name"] = VK_BLEND_OP_LINEARLIGHT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [35] = {
                        ["value"] = 1000149029,
                        ["name"] = VK_BLEND_OP_PINLIGHT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [36] = {
                        ["value"] = 1000149030,
                        ["name"] = VK_BLEND_OP_HARDMIX_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [37] = {
                        ["value"] = 1000149031,
                        ["name"] = VK_BLEND_OP_HSL_HUE_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [38] = {
                        ["value"] = 1000149032,
                        ["name"] = VK_BLEND_OP_HSL_SATURATION_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [39] = {
                        ["value"] = 1000149033,
                        ["name"] = VK_BLEND_OP_HSL_COLOR_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [40] = {
                        ["value"] = 1000149034,
                        ["name"] = VK_BLEND_OP_HSL_LUMINOSITY_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [41] = {
                        ["value"] = 1000149035,
                        ["name"] = VK_BLEND_OP_PLUS_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [42] = {
                        ["value"] = 1000149036,
                        ["name"] = VK_BLEND_OP_PLUS_CLAMPED_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [43] = {
                        ["value"] = 1000149037,
                        ["name"] = VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [44] = {
                        ["value"] = 1000149038,
                        ["name"] = VK_BLEND_OP_PLUS_DARKER_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [45] = {
                        ["value"] = 1000149039,
                        ["name"] = VK_BLEND_OP_MINUS_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [46] = {
                        ["value"] = 1000149040,
                        ["name"] = VK_BLEND_OP_MINUS_CLAMPED_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [47] = {
                        ["value"] = 1000149041,
                        ["name"] = VK_BLEND_OP_CONTRAST_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [48] = {
                        ["value"] = 1000149042,
                        ["name"] = VK_BLEND_OP_INVERT_OVG_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [49] = {
                        ["value"] = 1000149043,
                        ["name"] = VK_BLEND_OP_RED_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [50] = {
                        ["value"] = 1000149044,
                        ["name"] = VK_BLEND_OP_GREEN_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [51] = {
                        ["value"] = 1000149045,
                        ["name"] = VK_BLEND_OP_BLUE_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    },
                },
            ["VkResult"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SUCCESS,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_NOT_READY,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_TIMEOUT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_EVENT_SET,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_EVENT_RESET,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_INCOMPLETE,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_ERROR_OUT_OF_HOST_MEMORY,
                        ["value"] = -1,
                        },
                    [8] = {
                        ["name"] = VK_ERROR_OUT_OF_DEVICE_MEMORY,
                        ["value"] = -2,
                        },
                    [9] = {
                        ["name"] = VK_ERROR_INITIALIZATION_FAILED,
                        ["value"] = -3,
                        },
                    [10] = {
                        ["name"] = VK_ERROR_DEVICE_LOST,
                        ["value"] = -4,
                        },
                    [11] = {
                        ["name"] = VK_ERROR_MEMORY_MAP_FAILED,
                        ["value"] = -5,
                        },
                    [12] = {
                        ["name"] = VK_ERROR_LAYER_NOT_PRESENT,
                        ["value"] = -6,
                        },
                    [13] = {
                        ["name"] = VK_ERROR_EXTENSION_NOT_PRESENT,
                        ["value"] = -7,
                        },
                    [14] = {
                        ["name"] = VK_ERROR_FEATURE_NOT_PRESENT,
                        ["value"] = -8,
                        },
                    [15] = {
                        ["name"] = VK_ERROR_INCOMPATIBLE_DRIVER,
                        ["value"] = -9,
                        },
                    [16] = {
                        ["name"] = VK_ERROR_TOO_MANY_OBJECTS,
                        ["value"] = -10,
                        },
                    [17] = {
                        ["name"] = VK_ERROR_FORMAT_NOT_SUPPORTED,
                        ["value"] = -11,
                        },
                    [18] = {
                        ["name"] = VK_ERROR_FRAGMENTED_POOL,
                        ["value"] = -12,
                        },
                    [19] = {
                        ["name"] = VK_ERROR_OUT_OF_POOL_MEMORY,
                        ["value"] = 1000070000,
                        },
                    [20] = {
                        ["name"] = VK_ERROR_INVALID_EXTERNAL_HANDLE,
                        ["value"] = 1000073003,
                        },
                    [21] = {
                        ["value"] = 1000001000,
                        ["name"] = VK_ERROR_SURFACE_LOST_KHR,
                        ["extension"] = VK_KHR_surface,
                        },
                    [22] = {
                        ["value"] = 1000001001,
                        ["name"] = VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
                        ["extension"] = VK_KHR_surface,
                        },
                    [23] = {
                        ["value"] = 1000002003,
                        ["name"] = VK_SUBOPTIMAL_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [24] = {
                        ["value"] = 1000002004,
                        ["name"] = VK_ERROR_OUT_OF_DATE_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [25] = {
                        ["value"] = 1000004001,
                        ["name"] = VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
                        ["extension"] = VK_KHR_display_swapchain,
                        },
                    [26] = {
                        ["value"] = 1000012001,
                        ["name"] = VK_ERROR_VALIDATION_FAILED_EXT,
                        ["extension"] = VK_EXT_debug_report,
                        },
                    [27] = {
                        ["value"] = 1000013000,
                        ["name"] = VK_ERROR_INVALID_SHADER_NV,
                        ["extension"] = VK_NV_glsl_shader,
                        },
                    [28] = {
                        ["value"] = 1000159000,
                        ["name"] = VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [29] = {
                        ["value"] = 1000162000,
                        ["name"] = VK_ERROR_FRAGMENTATION_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [30] = {
                        ["value"] = 1000175001,
                        ["name"] = VK_ERROR_NOT_PERMITTED_EXT,
                        ["extension"] = VK_EXT_global_priority,
                        },
                    [31] = {
                        ["value"] = 1000245000,
                        ["name"] = VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    [32] = {
                        ["value"] = 1000256000,
                        ["name"] = VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT,
                        ["extension"] = VK_EXT_full_screen_exclusive,
                        },
                    },
                },
            ["VkVendorId"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VENDOR_ID_VIV,
                        ["value"] = 0x10001,
                        },
                    [2] = {
                        ["name"] = VK_VENDOR_ID_VSI,
                        ["value"] = 0x10002,
                        },
                    [3] = {
                        ["name"] = VK_VENDOR_ID_KAZAN,
                        ["value"] = 0x10003,
                        },
                    },
                },
            ["VkPhysicalDeviceType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_PHYSICAL_DEVICE_TYPE_OTHER,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_PHYSICAL_DEVICE_TYPE_CPU,
                        ["value"] = 4,
                        },
                    },
                },
            ["VkValidationCacheHeaderVersionEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkIndexType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_INDEX_TYPE_UINT16,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_INDEX_TYPE_UINT32,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_INDEX_TYPE_NONE_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkAttachmentStoreOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_ATTACHMENT_STORE_OP_STORE,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_ATTACHMENT_STORE_OP_DONT_CARE,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkDescriptorUpdateTemplateType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET,
                        ["value"] = 0,
                        },
                    },
                },
            ["VkStructureType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_STRUCTURE_TYPE_APPLICATION_INFO,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_STRUCTURE_TYPE_SUBMIT_INFO,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
                        ["value"] = 15,
                        },
                    [17] = {
                        ["name"] = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
                        ["value"] = 16,
                        },
                    [18] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
                        ["value"] = 17,
                        },
                    [19] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
                        ["value"] = 18,
                        },
                    [20] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
                        ["value"] = 19,
                        },
                    [21] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
                        ["value"] = 20,
                        },
                    [22] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
                        ["value"] = 21,
                        },
                    [23] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
                        ["value"] = 22,
                        },
                    [24] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
                        ["value"] = 23,
                        },
                    [25] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
                        ["value"] = 24,
                        },
                    [26] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
                        ["value"] = 25,
                        },
                    [27] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
                        ["value"] = 26,
                        },
                    [28] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
                        ["value"] = 27,
                        },
                    [29] = {
                        ["name"] = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
                        ["value"] = 28,
                        },
                    [30] = {
                        ["name"] = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
                        ["value"] = 29,
                        },
                    [31] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
                        ["value"] = 30,
                        },
                    [32] = {
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
                        ["value"] = 31,
                        },
                    [33] = {
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
                        ["value"] = 32,
                        },
                    [34] = {
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
                        ["value"] = 33,
                        },
                    [35] = {
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
                        ["value"] = 34,
                        },
                    [36] = {
                        ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
                        ["value"] = 35,
                        },
                    [37] = {
                        ["name"] = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
                        ["value"] = 36,
                        },
                    [38] = {
                        ["name"] = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
                        ["value"] = 37,
                        },
                    [39] = {
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
                        ["value"] = 38,
                        },
                    [40] = {
                        ["name"] = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
                        ["value"] = 39,
                        },
                    [41] = {
                        ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
                        ["value"] = 40,
                        },
                    [42] = {
                        ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
                        ["value"] = 41,
                        },
                    [43] = {
                        ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
                        ["value"] = 42,
                        },
                    [44] = {
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
                        ["value"] = 43,
                        },
                    [45] = {
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
                        ["value"] = 44,
                        },
                    [46] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
                        ["value"] = 45,
                        },
                    [47] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
                        ["value"] = 46,
                        },
                    [48] = {
                        ["name"] = VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,
                        ["value"] = 47,
                        },
                    [49] = {
                        ["name"] = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,
                        ["value"] = 48,
                        },
                    [50] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,
                        ["value"] = 1000095000,
                        },
                    [51] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
                        ["value"] = 1000158000,
                        },
                    [52] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
                        ["value"] = 1000158001,
                        },
                    [53] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
                        ["value"] = 1000084000,
                        },
                    [54] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
                        ["value"] = 1000128000,
                        },
                    [55] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
                        ["value"] = 1000128001,
                        },
                    [56] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
                        ["value"] = 1000061000,
                        },
                    [57] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
                        ["value"] = 1000061003,
                        },
                    [58] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
                        ["value"] = 1000061004,
                        },
                    [59] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
                        ["value"] = 1000061005,
                        },
                    [60] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
                        ["value"] = 1000061006,
                        },
                    [61] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
                        ["value"] = 1000061013,
                        },
                    [62] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
                        ["value"] = 1000061014,
                        },
                    [63] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
                        ["value"] = 1000071000,
                        },
                    [64] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
                        ["value"] = 1000071001,
                        },
                    [65] = {
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
                        ["value"] = 1000147000,
                        },
                    [66] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
                        ["value"] = 1000147001,
                        },
                    [67] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
                        ["value"] = 1000147002,
                        },
                    [68] = {
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
                        ["value"] = 1000147003,
                        },
                    [69] = {
                        ["name"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
                        ["value"] = 1000147004,
                        },
                    [70] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
                        ["value"] = 1000060000,
                        },
                    [71] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,
                        ["value"] = 1000060001,
                        },
                    [72] = {
                        ["name"] = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
                        ["value"] = 1000060002,
                        },
                    [73] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
                        ["value"] = 1000060003,
                        },
                    [74] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
                        ["value"] = 1000060004,
                        },
                    [75] = {
                        ["name"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,
                        ["value"] = 1000060005,
                        },
                    [76] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
                        ["value"] = 1000060006,
                        },
                    [77] = {
                        ["name"] = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
                        ["value"] = 1000060007,
                        },
                    [78] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
                        ["value"] = 1000060008,
                        },
                    [79] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
                        ["value"] = 1000118000,
                        },
                    [80] = {
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
                        ["value"] = 1000118001,
                        },
                    [81] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
                        ["value"] = 1000118002,
                        },
                    [82] = {
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
                        ["value"] = 1000118003,
                        },
                    [83] = {
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
                        ["value"] = 1000054000,
                        },
                    [84] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
                        ["value"] = 1000054001,
                        },
                    [85] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
                        ["value"] = 1000054002,
                        },
                    [86] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
                        ["value"] = 1000121000,
                        },
                    [87] = {
                        ["name"] = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,
                        ["value"] = 1000146000,
                        },
                    [88] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,
                        ["value"] = 1000146001,
                        },
                    [89] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,
                        ["value"] = 1000146002,
                        },
                    [90] = {
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,
                        ["value"] = 1000146003,
                        },
                    [91] = {
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
                        ["value"] = 1000157000,
                        },
                    [92] = {
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
                        ["value"] = 1000157001,
                        },
                    [93] = {
                        ["name"] = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
                        ["value"] = 1000157002,
                        },
                    [94] = {
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
                        ["value"] = 1000157003,
                        },
                    [95] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
                        ["value"] = 1000157004,
                        },
                    [96] = {
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
                        ["value"] = 1000157005,
                        },
                    [97] = {
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
                        ["value"] = 1000086000,
                        },
                    [98] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
                        ["value"] = 1000072000,
                        },
                    [99] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
                        ["value"] = 1000072001,
                        },
                    [100] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
                        ["value"] = 1000072002,
                        },
                    [101] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
                        ["value"] = 1000072003,
                        },
                    [102] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
                        ["value"] = 1000072004,
                        },
                    [103] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
                        ["value"] = 1000073000,
                        },
                    [104] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
                        ["value"] = 1000073001,
                        },
                    [105] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
                        ["value"] = 1000073002,
                        },
                    [106] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
                        ["value"] = 1000113000,
                        },
                    [107] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
                        ["value"] = 1000113001,
                        },
                    [108] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
                        ["value"] = 1000114000,
                        },
                    [109] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
                        ["value"] = 1000078000,
                        },
                    [110] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
                        ["value"] = 1000077000,
                        },
                    [111] = {
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
                        ["value"] = 1000077001,
                        },
                    [112] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
                        ["value"] = 1000169000,
                        },
                    [113] = {
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
                        ["value"] = 1000169001,
                        },
                    [114] = {
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
                        ["value"] = 1000064000,
                        },
                    [115] = {
                        ["value"] = 1000002000,
                        ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [116] = {
                        ["value"] = 1000002001,
                        ["name"] = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [117] = {
                        ["value"] = 1000002007,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [118] = {
                        ["value"] = 1000002008,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [119] = {
                        ["value"] = 1000002009,
                        ["name"] = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [120] = {
                        ["value"] = 1000002010,
                        ["name"] = VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [121] = {
                        ["value"] = 1000002011,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [122] = {
                        ["value"] = 1000002012,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [123] = {
                        ["value"] = 1000003000,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_display,
                        },
                    [124] = {
                        ["value"] = 1000003001,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_display,
                        },
                    [125] = {
                        ["value"] = 1000004000,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,
                        ["extension"] = VK_KHR_display_swapchain,
                        },
                    [126] = {
                        ["value"] = 1000005000,
                        ["name"] = VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_xlib_surface,
                        },
                    [127] = {
                        ["value"] = 1000006000,
                        ["name"] = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_xcb_surface,
                        },
                    [128] = {
                        ["value"] = 1000007000,
                        ["name"] = VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_wayland_surface,
                        },
                    [129] = {
                        ["value"] = 1000009000,
                        ["name"] = VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_android_surface,
                        },
                    [130] = {
                        ["value"] = 1000010000,
                        ["name"] = VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_win32_surface,
                        },
                    [131] = {
                        ["value"] = 1000012000,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_debug_report,
                        },
                    [132] = {
                        ["value"] = 1000019000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,
                        ["extension"] = VK_AMD_rasterization_order,
                        },
                    [133] = {
                        ["value"] = 1000027000,
                        ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_dedicated_allocation,
                        },
                    [134] = {
                        ["value"] = 1000027001,
                        ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,
                        ["extension"] = VK_NV_dedicated_allocation,
                        },
                    [135] = {
                        ["value"] = 1000027002,
                        ["name"] = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,
                        ["extension"] = VK_NV_dedicated_allocation,
                        },
                    [136] = {
                        ["value"] = 1000029000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [137] = {
                        ["value"] = 1000029001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [138] = {
                        ["value"] = 1000029002,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [139] = {
                        ["value"] = 1000031000,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,
                        ["extension"] = VK_NVX_image_view_handle,
                        },
                    [140] = {
                        ["value"] = 1000042000,
                        ["name"] = VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,
                        ["extension"] = VK_AMD_texture_gather_bias_lod,
                        },
                    [141] = {
                        ["value"] = 1000050000,
                        ["name"] = VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP,
                        ["extension"] = VK_GGP_stream_descriptor_surface,
                        },
                    [142] = {
                        ["value"] = 1000051000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,
                        ["extension"] = VK_NV_corner_sampled_image,
                        },
                    [143] = {
                        ["value"] = 1000057000,
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_external_memory,
                        },
                    [144] = {
                        ["value"] = 1000057001,
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,
                        ["extension"] = VK_NV_external_memory,
                        },
                    [145] = {
                        ["value"] = 1000058000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV,
                        ["extension"] = VK_NV_external_memory_win32,
                        },
                    [146] = {
                        ["value"] = 1000058001,
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV,
                        ["extension"] = VK_NV_external_memory_win32,
                        },
                    [147] = {
                        ["value"] = 1000062000,
                        ["name"] = VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,
                        ["extension"] = VK_EXT_validation_flags,
                        },
                    [148] = {
                        ["value"] = 1000063000,
                        ["name"] = VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN,
                        ["extension"] = VK_NN_vi_surface,
                        },
                    [149] = {
                        ["value"] = 1000068000,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,
                        ["extension"] = VK_EXT_astc_decode_mode,
                        },
                    [150] = {
                        ["value"] = 1000068001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,
                        ["extension"] = VK_EXT_astc_decode_mode,
                        },
                    [151] = {
                        ["value"] = 1000074000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_memory_win32,
                        },
                    [152] = {
                        ["value"] = 1000074001,
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_memory_win32,
                        },
                    [153] = {
                        ["value"] = 1000074002,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_external_memory_win32,
                        },
                    [154] = {
                        ["value"] = 1000074003,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_memory_win32,
                        },
                    [155] = {
                        ["value"] = 1000075000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_memory_fd,
                        },
                    [156] = {
                        ["value"] = 1000075001,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_external_memory_fd,
                        },
                    [157] = {
                        ["value"] = 1000075002,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_memory_fd,
                        },
                    [158] = {
                        ["value"] = 1000076000,
                        ["name"] = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR,
                        ["extension"] = VK_KHR_win32_keyed_mutex,
                        },
                    [159] = {
                        ["value"] = 1000079000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_win32,
                        },
                    [160] = {
                        ["value"] = 1000079001,
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_win32,
                        },
                    [161] = {
                        ["value"] = 1000079002,
                        ["name"] = VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_win32,
                        },
                    [162] = {
                        ["value"] = 1000079003,
                        ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_win32,
                        },
                    [163] = {
                        ["value"] = 1000080000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_fd,
                        },
                    [164] = {
                        ["value"] = 1000080001,
                        ["name"] = VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_semaphore_fd,
                        },
                    [165] = {
                        ["value"] = 1000081000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_push_descriptor,
                        },
                    [166] = {
                        ["value"] = 1000082000,
                        ["name"] = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [167] = {
                        ["value"] = 1000082001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [168] = {
                        ["value"] = 1000082002,
                        ["name"] = VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [169] = {
                        ["value"] = 1000083000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR,
                        ["extension"] = VK_KHR_shader_float16_int8,
                        },
                    [170] = {
                        ["value"] = 1000085000,
                        ["name"] = VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,
                        ["extension"] = VK_KHR_incremental_present,
                        },
                    [171] = {
                        ["value"] = 1000087000,
                        ["name"] = VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [172] = {
                        ["value"] = 1000087001,
                        ["name"] = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [173] = {
                        ["value"] = 1000087002,
                        ["name"] = VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [174] = {
                        ["value"] = 1000087003,
                        ["name"] = VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [175] = {
                        ["value"] = 1000087004,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [176] = {
                        ["value"] = 1000087005,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [177] = {
                        ["value"] = 1000088000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_clip_space_w_scaling,
                        },
                    [178] = {
                        ["value"] = 1000091000,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,
                        ["extension"] = VK_EXT_display_surface_counter,
                        },
                    [179] = {
                        ["value"] = 1000092000,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,
                        ["extension"] = VK_EXT_display_control,
                        },
                    [180] = {
                        ["value"] = 1000092001,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,
                        ["extension"] = VK_EXT_display_control,
                        },
                    [181] = {
                        ["value"] = 1000092002,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,
                        ["extension"] = VK_EXT_display_control,
                        },
                    [182] = {
                        ["value"] = 1000092003,
                        ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_display_control,
                        },
                    [183] = {
                        ["value"] = 1000093000,
                        ["name"] = VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,
                        ["extension"] = VK_GOOGLE_display_timing,
                        },
                    [184] = {
                        ["value"] = 1000098000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,
                        ["extension"] = VK_NVX_multiview_per_view_attributes,
                        },
                    [185] = {
                        ["value"] = 1000099000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_viewport_swizzle,
                        },
                    [186] = {
                        ["value"] = 1000100000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_discard_rectangles,
                        },
                    [187] = {
                        ["value"] = 1000100001,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_discard_rectangles,
                        },
                    [188] = {
                        ["value"] = 1000102000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_conservative_rasterization,
                        },
                    [189] = {
                        ["value"] = 1000102001,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_conservative_rasterization,
                        },
                    [190] = {
                        ["value"] = 1000103000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,
                        ["extension"] = VK_EXT_depth_clip_enable,
                        },
                    [191] = {
                        ["value"] = 1000103001,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_depth_clip_enable,
                        },
                    [192] = {
                        ["value"] = 1000106000,
                        ["name"] = VK_STRUCTURE_TYPE_HDR_METADATA_EXT,
                        ["extension"] = VK_EXT_hdr_metadata,
                        },
                    [193] = {
                        ["value"] = 1000110000,
                        ["name"] = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [194] = {
                        ["value"] = 1000110001,
                        ["name"] = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [195] = {
                        ["value"] = 1000110002,
                        ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [196] = {
                        ["value"] = 1000110003,
                        ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [197] = {
                        ["value"] = 1000110004,
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [198] = {
                        ["value"] = 1000110005,
                        ["name"] = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [199] = {
                        ["value"] = 1000110006,
                        ["name"] = VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR,
                        ["extension"] = VK_KHR_create_renderpass2,
                        },
                    [200] = {
                        ["value"] = 1000112000,
                        ["name"] = VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,
                        ["extension"] = VK_KHR_shared_presentable_image,
                        },
                    [201] = {
                        ["value"] = 1000115000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_fence_win32,
                        },
                    [202] = {
                        ["value"] = 1000115001,
                        ["name"] = VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_fence_win32,
                        },
                    [203] = {
                        ["value"] = 1000115002,
                        ["name"] = VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR,
                        ["extension"] = VK_KHR_external_fence_win32,
                        },
                    [204] = {
                        ["value"] = 1000116000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_fence_fd,
                        },
                    [205] = {
                        ["value"] = 1000116001,
                        ["name"] = VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,
                        ["extension"] = VK_KHR_external_fence_fd,
                        },
                    [206] = {
                        ["value"] = 1000120000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,
                        ["extension"] = VK_KHR_get_surface_capabilities2,
                        },
                    [207] = {
                        ["value"] = 1000120001,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,
                        ["extension"] = VK_KHR_get_surface_capabilities2,
                        },
                    [208] = {
                        ["value"] = 1000120002,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,
                        ["extension"] = VK_KHR_get_surface_capabilities2,
                        },
                    [209] = {
                        ["value"] = 1000122000,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,
                        ["extension"] = VK_KHR_get_display_properties2,
                        },
                    [210] = {
                        ["value"] = 1000122001,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,
                        ["extension"] = VK_KHR_get_display_properties2,
                        },
                    [211] = {
                        ["value"] = 1000122002,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,
                        ["extension"] = VK_KHR_get_display_properties2,
                        },
                    [212] = {
                        ["value"] = 1000122003,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,
                        ["extension"] = VK_KHR_get_display_properties2,
                        },
                    [213] = {
                        ["value"] = 1000122004,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,
                        ["extension"] = VK_KHR_get_display_properties2,
                        },
                    [214] = {
                        ["value"] = 1000123000,
                        ["name"] = VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK,
                        ["extension"] = VK_MVK_ios_surface,
                        },
                    [215] = {
                        ["value"] = 1000124000,
                        ["name"] = VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK,
                        ["extension"] = VK_MVK_macos_surface,
                        },
                    [216] = {
                        ["value"] = 1000129000,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [217] = {
                        ["value"] = 1000129001,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [218] = {
                        ["value"] = 1000129002,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [219] = {
                        ["value"] = 1000129003,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [220] = {
                        ["value"] = 1000129004,
                        ["name"] = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [221] = {
                        ["value"] = 1000130000,
                        ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [222] = {
                        ["value"] = 1000130001,
                        ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [223] = {
                        ["value"] = 1000130002,
                        ["name"] = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [224] = {
                        ["value"] = 1000130003,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [225] = {
                        ["value"] = 1000130004,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [226] = {
                        ["value"] = 1000130005,
                        ["name"] = VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [227] = {
                        ["value"] = 1000131000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_sampler_filter_minmax,
                        },
                    [228] = {
                        ["value"] = 1000131001,
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_sampler_filter_minmax,
                        },
                    [229] = {
                        ["value"] = 1000139000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT,
                        ["extension"] = VK_EXT_inline_uniform_block,
                        },
                    [230] = {
                        ["value"] = 1000139001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_inline_uniform_block,
                        },
                    [231] = {
                        ["value"] = 1000139002,
                        ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT,
                        ["extension"] = VK_EXT_inline_uniform_block,
                        },
                    [232] = {
                        ["value"] = 1000139003,
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_inline_uniform_block,
                        },
                    [233] = {
                        ["value"] = 1000144000,
                        ["name"] = VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [234] = {
                        ["value"] = 1000144001,
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [235] = {
                        ["value"] = 1000144002,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [236] = {
                        ["value"] = 1000144003,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [237] = {
                        ["value"] = 1000144004,
                        ["name"] = VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [238] = {
                        ["value"] = 1000148000,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR,
                        ["extension"] = VK_KHR_image_format_list,
                        },
                    [239] = {
                        ["value"] = 1000149000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [240] = {
                        ["value"] = 1000149001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [241] = {
                        ["value"] = 1000149002,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [242] = {
                        ["value"] = 1000150000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_fragment_coverage_to_color,
                        },
                    [243] = {
                        ["value"] = 1000153000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_framebuffer_mixed_samples,
                        },
                    [244] = {
                        ["value"] = 1000159000,
                        ["name"] = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [245] = {
                        ["value"] = 1000159001,
                        ["name"] = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [246] = {
                        ["value"] = 1000159002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [247] = {
                        ["value"] = 1000159003,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [248] = {
                        ["value"] = 1000159004,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [249] = {
                        ["value"] = 1000159005,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [250] = {
                        ["value"] = 1000161000,
                        ["name"] = VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_validation_cache,
                        },
                    [251] = {
                        ["value"] = 1000161001,
                        ["name"] = VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_validation_cache,
                        },
                    [252] = {
                        ["value"] = 1000162000,
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [253] = {
                        ["value"] = 1000162001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [254] = {
                        ["value"] = 1000162002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [255] = {
                        ["value"] = 1000162003,
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [256] = {
                        ["value"] = 1000162004,
                        ["name"] = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    [257] = {
                        ["value"] = 1000165000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [258] = {
                        ["value"] = 1000165001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [259] = {
                        ["value"] = 1000165002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [260] = {
                        ["value"] = 1000165005,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [261] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [262] = {
                        ["value"] = 1000166001,
                        ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [263] = {
                        ["value"] = 1000166003,
                        ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [264] = {
                        ["value"] = 1000166004,
                        ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [265] = {
                        ["value"] = 1000166005,
                        ["name"] = VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [266] = {
                        ["value"] = 1000166006,
                        ["name"] = VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [267] = {
                        ["value"] = 1000166007,
                        ["name"] = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [268] = {
                        ["value"] = 1000166008,
                        ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [269] = {
                        ["value"] = 1000166009,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [270] = {
                        ["value"] = 1000166011,
                        ["name"] = VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [271] = {
                        ["value"] = 1000166012,
                        ["name"] = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [272] = {
                        ["value"] = 1000167000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,
                        ["extension"] = VK_NV_representative_fragment_test,
                        },
                    [273] = {
                        ["value"] = 1000167001,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_representative_fragment_test,
                        },
                    [274] = {
                        ["value"] = 1000171000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,
                        ["extension"] = VK_EXT_filter_cubic,
                        },
                    [275] = {
                        ["value"] = 1000171001,
                        ["name"] = VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_filter_cubic,
                        },
                    [276] = {
                        ["value"] = 1000175000,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_global_priority,
                        },
                    [277] = {
                        ["value"] = 1000178000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR,
                        ["extension"] = VK_KHR_8bit_storage,
                        },
                    [278] = {
                        ["value"] = 1000179000,
                        ["name"] = VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,
                        ["extension"] = VK_EXT_external_memory_host,
                        },
                    [279] = {
                        ["value"] = 1000179001,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_external_memory_host,
                        },
                    [280] = {
                        ["value"] = 1000179002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_external_memory_host,
                        },
                    [281] = {
                        ["value"] = 1000181000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR,
                        ["extension"] = VK_KHR_shader_atomic_int64,
                        },
                    [282] = {
                        ["value"] = 1000185000,
                        ["name"] = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,
                        ["extension"] = VK_EXT_calibrated_timestamps,
                        },
                    [283] = {
                        ["value"] = 1000186000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,
                        ["extension"] = VK_AMD_shader_core_properties,
                        },
                    [284] = {
                        ["value"] = 1000190000,
                        ["name"] = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,
                        ["extension"] = VK_AMD_memory_overallocation_behavior,
                        },
                    [285] = {
                        ["value"] = 1000191000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_vertex_attribute_divisor,
                        },
                    [286] = {
                        ["value"] = 1000191001,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_vertex_attribute_divisor,
                        },
                    [287] = {
                        ["value"] = 1000191002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,
                        ["extension"] = VK_EXT_vertex_attribute_divisor,
                        },
                    [288] = {
                        ["value"] = 1000192000,
                        ["name"] = VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP,
                        ["extension"] = VK_GGP_frame_token,
                        },
                    [289] = {
                        ["value"] = 1000193000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_pipeline_creation_feedback,
                        },
                    [290] = {
                        ["value"] = 1000197000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_driver_properties,
                        },
                    [291] = {
                        ["value"] = 1000198000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_shader_float_controls,
                        },
                    [292] = {
                        ["value"] = 1000200000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR,
                        ["extension"] = VK_KHR_depth_stencil_resolve,
                        },
                    [293] = {
                        ["value"] = 1000200001,
                        ["name"] = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR,
                        ["extension"] = VK_KHR_depth_stencil_resolve,
                        },
                    [294] = {
                        ["value"] = 1000202000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,
                        ["extension"] = VK_NV_compute_shader_derivatives,
                        },
                    [295] = {
                        ["value"] = 1000203000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    [296] = {
                        ["value"] = 1000203001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    [297] = {
                        ["value"] = 1000204000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV,
                        ["extension"] = VK_NV_fragment_shader_barycentric,
                        },
                    [298] = {
                        ["value"] = 1000205000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,
                        ["extension"] = VK_NV_shader_image_footprint,
                        },
                    [299] = {
                        ["value"] = 1000206000,
                        ["name"] = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,
                        ["extension"] = VK_NV_scissor_exclusive,
                        },
                    [300] = {
                        ["value"] = 1000206002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,
                        ["extension"] = VK_NV_scissor_exclusive,
                        },
                    [301] = {
                        ["value"] = 1000207000,
                        ["name"] = VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,
                        ["extension"] = VK_NV_device_diagnostic_checkpoints,
                        },
                    [302] = {
                        ["value"] = 1000207001,
                        ["name"] = VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,
                        ["extension"] = VK_NV_device_diagnostic_checkpoints,
                        },
                    [303] = {
                        ["value"] = 1000212000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR,
                        ["extension"] = VK_KHR_vulkan_memory_model,
                        },
                    [304] = {
                        ["value"] = 1000213000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_pci_bus_info,
                        },
                    [305] = {
                        ["value"] = 1000214000,
                        ["name"] = VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,
                        ["extension"] = VK_AMD_display_native_hdr,
                        },
                    [306] = {
                        ["value"] = 1000214001,
                        ["name"] = VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,
                        ["extension"] = VK_AMD_display_native_hdr,
                        },
                    [307] = {
                        ["value"] = 1000215000,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA,
                        ["extension"] = VK_FUCHSIA_imagepipe_surface,
                        },
                    [308] = {
                        ["value"] = 1000218000,
                        ["name"] = VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_metal_surface,
                        },
                    [309] = {
                        ["value"] = 1000219000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    [310] = {
                        ["value"] = 1000219001,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    [311] = {
                        ["value"] = 1000219002,
                        ["name"] = VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    [312] = {
                        ["value"] = 1000222000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT,
                        ["extension"] = VK_EXT_scalar_block_layout,
                        },
                    [313] = {
                        ["value"] = 1000238000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,
                        ["extension"] = VK_EXT_memory_budget,
                        },
                    [314] = {
                        ["value"] = 1000239000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,
                        ["extension"] = VK_EXT_memory_priority,
                        },
                    [315] = {
                        ["value"] = 1000239001,
                        ["name"] = VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,
                        ["extension"] = VK_EXT_memory_priority,
                        },
                    [316] = {
                        ["value"] = 1000240000,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,
                        ["extension"] = VK_KHR_surface_protected_capabilities,
                        },
                    [317] = {
                        ["value"] = 1000241000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,
                        ["extension"] = VK_NV_dedicated_allocation_image_aliasing,
                        },
                    [318] = {
                        ["value"] = 1000245000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    [319] = {
                        ["value"] = 1000245001,
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    [320] = {
                        ["value"] = 1000245002,
                        ["name"] = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    [321] = {
                        ["value"] = 1000247000,
                        ["name"] = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_separate_stencil_usage,
                        },
                    [322] = {
                        ["value"] = 1000248000,
                        ["name"] = VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,
                        ["extension"] = VK_EXT_validation_features,
                        },
                    [323] = {
                        ["value"] = 1000250000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,
                        ["extension"] = VK_NV_cooperative_matrix,
                        },
                    [324] = {
                        ["value"] = 1000250001,
                        ["name"] = VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,
                        ["extension"] = VK_NV_cooperative_matrix,
                        },
                    [325] = {
                        ["value"] = 1000250002,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,
                        ["extension"] = VK_NV_cooperative_matrix,
                        },
                    [326] = {
                        ["value"] = 1000253000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,
                        ["extension"] = VK_EXT_ycbcr_image_arrays,
                        },
                    [327] = {
                        ["value"] = 1000256000,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT,
                        ["extension"] = VK_EXT_full_screen_exclusive,
                        },
                    [328] = {
                        ["value"] = 1000256002,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT,
                        ["extension"] = VK_EXT_full_screen_exclusive,
                        },
                    [329] = {
                        ["value"] = 1000256001,
                        ["name"] = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT,
                        ["extension"] = VK_EXT_full_screen_exclusive,
                        },
                    [330] = {
                        ["value"] = 1000257000,
                        ["name"] = VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,
                        ["extension"] = VK_EXT_headless_surface,
                        },
                    [331] = {
                        ["value"] = 1000262000,
                        ["name"] = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT,
                        ["extension"] = VK_EXT_host_query_reset,
                        },
                    },
                },
            ["VkFormat"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_FORMAT_UNDEFINED,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_FORMAT_R4G4_UNORM_PACK8,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_FORMAT_R4G4B4A4_UNORM_PACK16,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_FORMAT_B4G4R4A4_UNORM_PACK16,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_FORMAT_R5G6B5_UNORM_PACK16,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_FORMAT_B5G6R5_UNORM_PACK16,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_FORMAT_R5G5B5A1_UNORM_PACK16,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_FORMAT_B5G5R5A1_UNORM_PACK16,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_FORMAT_A1R5G5B5_UNORM_PACK16,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_FORMAT_R8_UNORM,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_FORMAT_R8_SNORM,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_FORMAT_R8_USCALED,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_FORMAT_R8_SSCALED,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_FORMAT_R8_UINT,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_FORMAT_R8_SINT,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_FORMAT_R8_SRGB,
                        ["value"] = 15,
                        },
                    [17] = {
                        ["name"] = VK_FORMAT_R8G8_UNORM,
                        ["value"] = 16,
                        },
                    [18] = {
                        ["name"] = VK_FORMAT_R8G8_SNORM,
                        ["value"] = 17,
                        },
                    [19] = {
                        ["name"] = VK_FORMAT_R8G8_USCALED,
                        ["value"] = 18,
                        },
                    [20] = {
                        ["name"] = VK_FORMAT_R8G8_SSCALED,
                        ["value"] = 19,
                        },
                    [21] = {
                        ["name"] = VK_FORMAT_R8G8_UINT,
                        ["value"] = 20,
                        },
                    [22] = {
                        ["name"] = VK_FORMAT_R8G8_SINT,
                        ["value"] = 21,
                        },
                    [23] = {
                        ["name"] = VK_FORMAT_R8G8_SRGB,
                        ["value"] = 22,
                        },
                    [24] = {
                        ["name"] = VK_FORMAT_R8G8B8_UNORM,
                        ["value"] = 23,
                        },
                    [25] = {
                        ["name"] = VK_FORMAT_R8G8B8_SNORM,
                        ["value"] = 24,
                        },
                    [26] = {
                        ["name"] = VK_FORMAT_R8G8B8_USCALED,
                        ["value"] = 25,
                        },
                    [27] = {
                        ["name"] = VK_FORMAT_R8G8B8_SSCALED,
                        ["value"] = 26,
                        },
                    [28] = {
                        ["name"] = VK_FORMAT_R8G8B8_UINT,
                        ["value"] = 27,
                        },
                    [29] = {
                        ["name"] = VK_FORMAT_R8G8B8_SINT,
                        ["value"] = 28,
                        },
                    [30] = {
                        ["name"] = VK_FORMAT_R8G8B8_SRGB,
                        ["value"] = 29,
                        },
                    [31] = {
                        ["name"] = VK_FORMAT_B8G8R8_UNORM,
                        ["value"] = 30,
                        },
                    [32] = {
                        ["name"] = VK_FORMAT_B8G8R8_SNORM,
                        ["value"] = 31,
                        },
                    [33] = {
                        ["name"] = VK_FORMAT_B8G8R8_USCALED,
                        ["value"] = 32,
                        },
                    [34] = {
                        ["name"] = VK_FORMAT_B8G8R8_SSCALED,
                        ["value"] = 33,
                        },
                    [35] = {
                        ["name"] = VK_FORMAT_B8G8R8_UINT,
                        ["value"] = 34,
                        },
                    [36] = {
                        ["name"] = VK_FORMAT_B8G8R8_SINT,
                        ["value"] = 35,
                        },
                    [37] = {
                        ["name"] = VK_FORMAT_B8G8R8_SRGB,
                        ["value"] = 36,
                        },
                    [38] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_UNORM,
                        ["value"] = 37,
                        },
                    [39] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_SNORM,
                        ["value"] = 38,
                        },
                    [40] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_USCALED,
                        ["value"] = 39,
                        },
                    [41] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_SSCALED,
                        ["value"] = 40,
                        },
                    [42] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_UINT,
                        ["value"] = 41,
                        },
                    [43] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_SINT,
                        ["value"] = 42,
                        },
                    [44] = {
                        ["name"] = VK_FORMAT_R8G8B8A8_SRGB,
                        ["value"] = 43,
                        },
                    [45] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_UNORM,
                        ["value"] = 44,
                        },
                    [46] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_SNORM,
                        ["value"] = 45,
                        },
                    [47] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_USCALED,
                        ["value"] = 46,
                        },
                    [48] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_SSCALED,
                        ["value"] = 47,
                        },
                    [49] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_UINT,
                        ["value"] = 48,
                        },
                    [50] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_SINT,
                        ["value"] = 49,
                        },
                    [51] = {
                        ["name"] = VK_FORMAT_B8G8R8A8_SRGB,
                        ["value"] = 50,
                        },
                    [52] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_UNORM_PACK32,
                        ["value"] = 51,
                        },
                    [53] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_SNORM_PACK32,
                        ["value"] = 52,
                        },
                    [54] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_USCALED_PACK32,
                        ["value"] = 53,
                        },
                    [55] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_SSCALED_PACK32,
                        ["value"] = 54,
                        },
                    [56] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_UINT_PACK32,
                        ["value"] = 55,
                        },
                    [57] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_SINT_PACK32,
                        ["value"] = 56,
                        },
                    [58] = {
                        ["name"] = VK_FORMAT_A8B8G8R8_SRGB_PACK32,
                        ["value"] = 57,
                        },
                    [59] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_UNORM_PACK32,
                        ["value"] = 58,
                        },
                    [60] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_SNORM_PACK32,
                        ["value"] = 59,
                        },
                    [61] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_USCALED_PACK32,
                        ["value"] = 60,
                        },
                    [62] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_SSCALED_PACK32,
                        ["value"] = 61,
                        },
                    [63] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_UINT_PACK32,
                        ["value"] = 62,
                        },
                    [64] = {
                        ["name"] = VK_FORMAT_A2R10G10B10_SINT_PACK32,
                        ["value"] = 63,
                        },
                    [65] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_UNORM_PACK32,
                        ["value"] = 64,
                        },
                    [66] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_SNORM_PACK32,
                        ["value"] = 65,
                        },
                    [67] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_USCALED_PACK32,
                        ["value"] = 66,
                        },
                    [68] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_SSCALED_PACK32,
                        ["value"] = 67,
                        },
                    [69] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_UINT_PACK32,
                        ["value"] = 68,
                        },
                    [70] = {
                        ["name"] = VK_FORMAT_A2B10G10R10_SINT_PACK32,
                        ["value"] = 69,
                        },
                    [71] = {
                        ["name"] = VK_FORMAT_R16_UNORM,
                        ["value"] = 70,
                        },
                    [72] = {
                        ["name"] = VK_FORMAT_R16_SNORM,
                        ["value"] = 71,
                        },
                    [73] = {
                        ["name"] = VK_FORMAT_R16_USCALED,
                        ["value"] = 72,
                        },
                    [74] = {
                        ["name"] = VK_FORMAT_R16_SSCALED,
                        ["value"] = 73,
                        },
                    [75] = {
                        ["name"] = VK_FORMAT_R16_UINT,
                        ["value"] = 74,
                        },
                    [76] = {
                        ["name"] = VK_FORMAT_R16_SINT,
                        ["value"] = 75,
                        },
                    [77] = {
                        ["name"] = VK_FORMAT_R16_SFLOAT,
                        ["value"] = 76,
                        },
                    [78] = {
                        ["name"] = VK_FORMAT_R16G16_UNORM,
                        ["value"] = 77,
                        },
                    [79] = {
                        ["name"] = VK_FORMAT_R16G16_SNORM,
                        ["value"] = 78,
                        },
                    [80] = {
                        ["name"] = VK_FORMAT_R16G16_USCALED,
                        ["value"] = 79,
                        },
                    [81] = {
                        ["name"] = VK_FORMAT_R16G16_SSCALED,
                        ["value"] = 80,
                        },
                    [82] = {
                        ["name"] = VK_FORMAT_R16G16_UINT,
                        ["value"] = 81,
                        },
                    [83] = {
                        ["name"] = VK_FORMAT_R16G16_SINT,
                        ["value"] = 82,
                        },
                    [84] = {
                        ["name"] = VK_FORMAT_R16G16_SFLOAT,
                        ["value"] = 83,
                        },
                    [85] = {
                        ["name"] = VK_FORMAT_R16G16B16_UNORM,
                        ["value"] = 84,
                        },
                    [86] = {
                        ["name"] = VK_FORMAT_R16G16B16_SNORM,
                        ["value"] = 85,
                        },
                    [87] = {
                        ["name"] = VK_FORMAT_R16G16B16_USCALED,
                        ["value"] = 86,
                        },
                    [88] = {
                        ["name"] = VK_FORMAT_R16G16B16_SSCALED,
                        ["value"] = 87,
                        },
                    [89] = {
                        ["name"] = VK_FORMAT_R16G16B16_UINT,
                        ["value"] = 88,
                        },
                    [90] = {
                        ["name"] = VK_FORMAT_R16G16B16_SINT,
                        ["value"] = 89,
                        },
                    [91] = {
                        ["name"] = VK_FORMAT_R16G16B16_SFLOAT,
                        ["value"] = 90,
                        },
                    [92] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_UNORM,
                        ["value"] = 91,
                        },
                    [93] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_SNORM,
                        ["value"] = 92,
                        },
                    [94] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_USCALED,
                        ["value"] = 93,
                        },
                    [95] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_SSCALED,
                        ["value"] = 94,
                        },
                    [96] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_UINT,
                        ["value"] = 95,
                        },
                    [97] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_SINT,
                        ["value"] = 96,
                        },
                    [98] = {
                        ["name"] = VK_FORMAT_R16G16B16A16_SFLOAT,
                        ["value"] = 97,
                        },
                    [99] = {
                        ["name"] = VK_FORMAT_R32_UINT,
                        ["value"] = 98,
                        },
                    [100] = {
                        ["name"] = VK_FORMAT_R32_SINT,
                        ["value"] = 99,
                        },
                    [101] = {
                        ["name"] = VK_FORMAT_R32_SFLOAT,
                        ["value"] = 100,
                        },
                    [102] = {
                        ["name"] = VK_FORMAT_R32G32_UINT,
                        ["value"] = 101,
                        },
                    [103] = {
                        ["name"] = VK_FORMAT_R32G32_SINT,
                        ["value"] = 102,
                        },
                    [104] = {
                        ["name"] = VK_FORMAT_R32G32_SFLOAT,
                        ["value"] = 103,
                        },
                    [105] = {
                        ["name"] = VK_FORMAT_R32G32B32_UINT,
                        ["value"] = 104,
                        },
                    [106] = {
                        ["name"] = VK_FORMAT_R32G32B32_SINT,
                        ["value"] = 105,
                        },
                    [107] = {
                        ["name"] = VK_FORMAT_R32G32B32_SFLOAT,
                        ["value"] = 106,
                        },
                    [108] = {
                        ["name"] = VK_FORMAT_R32G32B32A32_UINT,
                        ["value"] = 107,
                        },
                    [109] = {
                        ["name"] = VK_FORMAT_R32G32B32A32_SINT,
                        ["value"] = 108,
                        },
                    [110] = {
                        ["name"] = VK_FORMAT_R32G32B32A32_SFLOAT,
                        ["value"] = 109,
                        },
                    [111] = {
                        ["name"] = VK_FORMAT_R64_UINT,
                        ["value"] = 110,
                        },
                    [112] = {
                        ["name"] = VK_FORMAT_R64_SINT,
                        ["value"] = 111,
                        },
                    [113] = {
                        ["name"] = VK_FORMAT_R64_SFLOAT,
                        ["value"] = 112,
                        },
                    [114] = {
                        ["name"] = VK_FORMAT_R64G64_UINT,
                        ["value"] = 113,
                        },
                    [115] = {
                        ["name"] = VK_FORMAT_R64G64_SINT,
                        ["value"] = 114,
                        },
                    [116] = {
                        ["name"] = VK_FORMAT_R64G64_SFLOAT,
                        ["value"] = 115,
                        },
                    [117] = {
                        ["name"] = VK_FORMAT_R64G64B64_UINT,
                        ["value"] = 116,
                        },
                    [118] = {
                        ["name"] = VK_FORMAT_R64G64B64_SINT,
                        ["value"] = 117,
                        },
                    [119] = {
                        ["name"] = VK_FORMAT_R64G64B64_SFLOAT,
                        ["value"] = 118,
                        },
                    [120] = {
                        ["name"] = VK_FORMAT_R64G64B64A64_UINT,
                        ["value"] = 119,
                        },
                    [121] = {
                        ["name"] = VK_FORMAT_R64G64B64A64_SINT,
                        ["value"] = 120,
                        },
                    [122] = {
                        ["name"] = VK_FORMAT_R64G64B64A64_SFLOAT,
                        ["value"] = 121,
                        },
                    [123] = {
                        ["name"] = VK_FORMAT_B10G11R11_UFLOAT_PACK32,
                        ["value"] = 122,
                        },
                    [124] = {
                        ["name"] = VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
                        ["value"] = 123,
                        },
                    [125] = {
                        ["name"] = VK_FORMAT_D16_UNORM,
                        ["value"] = 124,
                        },
                    [126] = {
                        ["name"] = VK_FORMAT_X8_D24_UNORM_PACK32,
                        ["value"] = 125,
                        },
                    [127] = {
                        ["name"] = VK_FORMAT_D32_SFLOAT,
                        ["value"] = 126,
                        },
                    [128] = {
                        ["name"] = VK_FORMAT_S8_UINT,
                        ["value"] = 127,
                        },
                    [129] = {
                        ["name"] = VK_FORMAT_D16_UNORM_S8_UINT,
                        ["value"] = 128,
                        },
                    [130] = {
                        ["name"] = VK_FORMAT_D24_UNORM_S8_UINT,
                        ["value"] = 129,
                        },
                    [131] = {
                        ["name"] = VK_FORMAT_D32_SFLOAT_S8_UINT,
                        ["value"] = 130,
                        },
                    [132] = {
                        ["name"] = VK_FORMAT_BC1_RGB_UNORM_BLOCK,
                        ["value"] = 131,
                        },
                    [133] = {
                        ["name"] = VK_FORMAT_BC1_RGB_SRGB_BLOCK,
                        ["value"] = 132,
                        },
                    [134] = {
                        ["name"] = VK_FORMAT_BC1_RGBA_UNORM_BLOCK,
                        ["value"] = 133,
                        },
                    [135] = {
                        ["name"] = VK_FORMAT_BC1_RGBA_SRGB_BLOCK,
                        ["value"] = 134,
                        },
                    [136] = {
                        ["name"] = VK_FORMAT_BC2_UNORM_BLOCK,
                        ["value"] = 135,
                        },
                    [137] = {
                        ["name"] = VK_FORMAT_BC2_SRGB_BLOCK,
                        ["value"] = 136,
                        },
                    [138] = {
                        ["name"] = VK_FORMAT_BC3_UNORM_BLOCK,
                        ["value"] = 137,
                        },
                    [139] = {
                        ["name"] = VK_FORMAT_BC3_SRGB_BLOCK,
                        ["value"] = 138,
                        },
                    [140] = {
                        ["name"] = VK_FORMAT_BC4_UNORM_BLOCK,
                        ["value"] = 139,
                        },
                    [141] = {
                        ["name"] = VK_FORMAT_BC4_SNORM_BLOCK,
                        ["value"] = 140,
                        },
                    [142] = {
                        ["name"] = VK_FORMAT_BC5_UNORM_BLOCK,
                        ["value"] = 141,
                        },
                    [143] = {
                        ["name"] = VK_FORMAT_BC5_SNORM_BLOCK,
                        ["value"] = 142,
                        },
                    [144] = {
                        ["name"] = VK_FORMAT_BC6H_UFLOAT_BLOCK,
                        ["value"] = 143,
                        },
                    [145] = {
                        ["name"] = VK_FORMAT_BC6H_SFLOAT_BLOCK,
                        ["value"] = 144,
                        },
                    [146] = {
                        ["name"] = VK_FORMAT_BC7_UNORM_BLOCK,
                        ["value"] = 145,
                        },
                    [147] = {
                        ["name"] = VK_FORMAT_BC7_SRGB_BLOCK,
                        ["value"] = 146,
                        },
                    [148] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,
                        ["value"] = 147,
                        },
                    [149] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,
                        ["value"] = 148,
                        },
                    [150] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,
                        ["value"] = 149,
                        },
                    [151] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,
                        ["value"] = 150,
                        },
                    [152] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,
                        ["value"] = 151,
                        },
                    [153] = {
                        ["name"] = VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,
                        ["value"] = 152,
                        },
                    [154] = {
                        ["name"] = VK_FORMAT_EAC_R11_UNORM_BLOCK,
                        ["value"] = 153,
                        },
                    [155] = {
                        ["name"] = VK_FORMAT_EAC_R11_SNORM_BLOCK,
                        ["value"] = 154,
                        },
                    [156] = {
                        ["name"] = VK_FORMAT_EAC_R11G11_UNORM_BLOCK,
                        ["value"] = 155,
                        },
                    [157] = {
                        ["name"] = VK_FORMAT_EAC_R11G11_SNORM_BLOCK,
                        ["value"] = 156,
                        },
                    [158] = {
                        ["name"] = VK_FORMAT_ASTC_4x4_UNORM_BLOCK,
                        ["value"] = 157,
                        },
                    [159] = {
                        ["name"] = VK_FORMAT_ASTC_4x4_SRGB_BLOCK,
                        ["value"] = 158,
                        },
                    [160] = {
                        ["name"] = VK_FORMAT_ASTC_5x4_UNORM_BLOCK,
                        ["value"] = 159,
                        },
                    [161] = {
                        ["name"] = VK_FORMAT_ASTC_5x4_SRGB_BLOCK,
                        ["value"] = 160,
                        },
                    [162] = {
                        ["name"] = VK_FORMAT_ASTC_5x5_UNORM_BLOCK,
                        ["value"] = 161,
                        },
                    [163] = {
                        ["name"] = VK_FORMAT_ASTC_5x5_SRGB_BLOCK,
                        ["value"] = 162,
                        },
                    [164] = {
                        ["name"] = VK_FORMAT_ASTC_6x5_UNORM_BLOCK,
                        ["value"] = 163,
                        },
                    [165] = {
                        ["name"] = VK_FORMAT_ASTC_6x5_SRGB_BLOCK,
                        ["value"] = 164,
                        },
                    [166] = {
                        ["name"] = VK_FORMAT_ASTC_6x6_UNORM_BLOCK,
                        ["value"] = 165,
                        },
                    [167] = {
                        ["name"] = VK_FORMAT_ASTC_6x6_SRGB_BLOCK,
                        ["value"] = 166,
                        },
                    [168] = {
                        ["name"] = VK_FORMAT_ASTC_8x5_UNORM_BLOCK,
                        ["value"] = 167,
                        },
                    [169] = {
                        ["name"] = VK_FORMAT_ASTC_8x5_SRGB_BLOCK,
                        ["value"] = 168,
                        },
                    [170] = {
                        ["name"] = VK_FORMAT_ASTC_8x6_UNORM_BLOCK,
                        ["value"] = 169,
                        },
                    [171] = {
                        ["name"] = VK_FORMAT_ASTC_8x6_SRGB_BLOCK,
                        ["value"] = 170,
                        },
                    [172] = {
                        ["name"] = VK_FORMAT_ASTC_8x8_UNORM_BLOCK,
                        ["value"] = 171,
                        },
                    [173] = {
                        ["name"] = VK_FORMAT_ASTC_8x8_SRGB_BLOCK,
                        ["value"] = 172,
                        },
                    [174] = {
                        ["name"] = VK_FORMAT_ASTC_10x5_UNORM_BLOCK,
                        ["value"] = 173,
                        },
                    [175] = {
                        ["name"] = VK_FORMAT_ASTC_10x5_SRGB_BLOCK,
                        ["value"] = 174,
                        },
                    [176] = {
                        ["name"] = VK_FORMAT_ASTC_10x6_UNORM_BLOCK,
                        ["value"] = 175,
                        },
                    [177] = {
                        ["name"] = VK_FORMAT_ASTC_10x6_SRGB_BLOCK,
                        ["value"] = 176,
                        },
                    [178] = {
                        ["name"] = VK_FORMAT_ASTC_10x8_UNORM_BLOCK,
                        ["value"] = 177,
                        },
                    [179] = {
                        ["name"] = VK_FORMAT_ASTC_10x8_SRGB_BLOCK,
                        ["value"] = 178,
                        },
                    [180] = {
                        ["name"] = VK_FORMAT_ASTC_10x10_UNORM_BLOCK,
                        ["value"] = 179,
                        },
                    [181] = {
                        ["name"] = VK_FORMAT_ASTC_10x10_SRGB_BLOCK,
                        ["value"] = 180,
                        },
                    [182] = {
                        ["name"] = VK_FORMAT_ASTC_12x10_UNORM_BLOCK,
                        ["value"] = 181,
                        },
                    [183] = {
                        ["name"] = VK_FORMAT_ASTC_12x10_SRGB_BLOCK,
                        ["value"] = 182,
                        },
                    [184] = {
                        ["name"] = VK_FORMAT_ASTC_12x12_UNORM_BLOCK,
                        ["value"] = 183,
                        },
                    [185] = {
                        ["name"] = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,
                        ["value"] = 184,
                        },
                    [186] = {
                        ["name"] = VK_FORMAT_G8B8G8R8_422_UNORM,
                        ["value"] = 1000157000,
                        },
                    [187] = {
                        ["name"] = VK_FORMAT_B8G8R8G8_422_UNORM,
                        ["value"] = 1000157001,
                        },
                    [188] = {
                        ["name"] = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM,
                        ["value"] = 1000157002,
                        },
                    [189] = {
                        ["name"] = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM,
                        ["value"] = 1000157003,
                        },
                    [190] = {
                        ["name"] = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM,
                        ["value"] = 1000157004,
                        },
                    [191] = {
                        ["name"] = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM,
                        ["value"] = 1000157005,
                        },
                    [192] = {
                        ["name"] = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM,
                        ["value"] = 1000157006,
                        },
                    [193] = {
                        ["name"] = VK_FORMAT_R10X6_UNORM_PACK16,
                        ["value"] = 1000157007,
                        },
                    [194] = {
                        ["name"] = VK_FORMAT_R10X6G10X6_UNORM_2PACK16,
                        ["value"] = 1000157008,
                        },
                    [195] = {
                        ["name"] = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
                        ["value"] = 1000157009,
                        },
                    [196] = {
                        ["name"] = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
                        ["value"] = 1000157010,
                        },
                    [197] = {
                        ["name"] = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
                        ["value"] = 1000157011,
                        },
                    [198] = {
                        ["name"] = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
                        ["value"] = 1000157012,
                        },
                    [199] = {
                        ["name"] = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
                        ["value"] = 1000157013,
                        },
                    [200] = {
                        ["name"] = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
                        ["value"] = 1000157014,
                        },
                    [201] = {
                        ["name"] = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
                        ["value"] = 1000157015,
                        },
                    [202] = {
                        ["name"] = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
                        ["value"] = 1000157016,
                        },
                    [203] = {
                        ["name"] = VK_FORMAT_R12X4_UNORM_PACK16,
                        ["value"] = 1000157017,
                        },
                    [204] = {
                        ["name"] = VK_FORMAT_R12X4G12X4_UNORM_2PACK16,
                        ["value"] = 1000157018,
                        },
                    [205] = {
                        ["name"] = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
                        ["value"] = 1000157019,
                        },
                    [206] = {
                        ["name"] = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
                        ["value"] = 1000157020,
                        },
                    [207] = {
                        ["name"] = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
                        ["value"] = 1000157021,
                        },
                    [208] = {
                        ["name"] = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
                        ["value"] = 1000157022,
                        },
                    [209] = {
                        ["name"] = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
                        ["value"] = 1000157023,
                        },
                    [210] = {
                        ["name"] = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
                        ["value"] = 1000157024,
                        },
                    [211] = {
                        ["name"] = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
                        ["value"] = 1000157025,
                        },
                    [212] = {
                        ["name"] = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
                        ["value"] = 1000157026,
                        },
                    [213] = {
                        ["name"] = VK_FORMAT_G16B16G16R16_422_UNORM,
                        ["value"] = 1000157027,
                        },
                    [214] = {
                        ["name"] = VK_FORMAT_B16G16R16G16_422_UNORM,
                        ["value"] = 1000157028,
                        },
                    [215] = {
                        ["name"] = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM,
                        ["value"] = 1000157029,
                        },
                    [216] = {
                        ["name"] = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM,
                        ["value"] = 1000157030,
                        },
                    [217] = {
                        ["name"] = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM,
                        ["value"] = 1000157031,
                        },
                    [218] = {
                        ["name"] = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM,
                        ["value"] = 1000157032,
                        },
                    [219] = {
                        ["name"] = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM,
                        ["value"] = 1000157033,
                        },
                    [220] = {
                        ["value"] = 1000055000,
                        ["name"] = VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [221] = {
                        ["value"] = 1000055001,
                        ["name"] = VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [222] = {
                        ["value"] = 1000055002,
                        ["name"] = VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [223] = {
                        ["value"] = 1000055003,
                        ["name"] = VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [224] = {
                        ["value"] = 1000055004,
                        ["name"] = VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [225] = {
                        ["value"] = 1000055005,
                        ["name"] = VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [226] = {
                        ["value"] = 1000055006,
                        ["name"] = VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    [227] = {
                        ["value"] = 1000055007,
                        ["name"] = VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,
                        ["extension"] = VK_IMG_format_pvrtc,
                        },
                    },
                },
            ["VkCoverageModulationModeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COVERAGE_MODULATION_MODE_NONE_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COVERAGE_MODULATION_MODE_RGB_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COVERAGE_MODULATION_MODE_ALPHA_NV,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COVERAGE_MODULATION_MODE_RGBA_NV,
                        ["value"] = 3,
                        },
                    },
                },
            ["VkCopyAccelerationStructureModeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkDescriptorType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_SAMPLER,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["value"] = 1000139000,
                        ["name"] = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT,
                        ["extension"] = VK_EXT_inline_uniform_block,
                        },
                    [13] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkPointClippingBehavior"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkImageType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_IMAGE_TYPE_1D,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_IMAGE_TYPE_2D,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_IMAGE_TYPE_3D,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkScopeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SCOPE_DEVICE_NV,
                        ["value"] = 1,
                        },
                    [2] = {
                        ["name"] = VK_SCOPE_WORKGROUP_NV,
                        ["value"] = 2,
                        },
                    [3] = {
                        ["name"] = VK_SCOPE_SUBGROUP_NV,
                        ["value"] = 3,
                        },
                    [4] = {
                        ["name"] = VK_SCOPE_QUEUE_FAMILY_NV,
                        ["value"] = 5,
                        },
                    },
                },
            ["VkViewportCoordinateSwizzleNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV,
                        ["value"] = 7,
                        },
                    },
                },
            ["VkBlendFactor"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_BLEND_FACTOR_ZERO,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_BLEND_FACTOR_ONE,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_BLEND_FACTOR_SRC_COLOR,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_BLEND_FACTOR_DST_COLOR,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_BLEND_FACTOR_SRC_ALPHA,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_BLEND_FACTOR_DST_ALPHA,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_BLEND_FACTOR_CONSTANT_COLOR,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_BLEND_FACTOR_CONSTANT_ALPHA,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_BLEND_FACTOR_SRC1_COLOR,
                        ["value"] = 15,
                        },
                    [17] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,
                        ["value"] = 16,
                        },
                    [18] = {
                        ["name"] = VK_BLEND_FACTOR_SRC1_ALPHA,
                        ["value"] = 17,
                        },
                    [19] = {
                        ["name"] = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,
                        ["value"] = 18,
                        },
                    },
                },
            ["VkSamplerReductionModeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SAMPLER_REDUCTION_MODE_MIN_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SAMPLER_REDUCTION_MODE_MAX_EXT,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkInternalAllocationType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,
                        ["value"] = 0,
                        },
                    },
                },
            ["VkChromaLocation"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_CHROMA_LOCATION_COSITED_EVEN,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_CHROMA_LOCATION_MIDPOINT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkImageLayout"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_IMAGE_LAYOUT_UNDEFINED,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_IMAGE_LAYOUT_GENERAL,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_IMAGE_LAYOUT_PREINITIALIZED,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL,
                        ["value"] = 1000118000,
                        },
                    [11] = {
                        ["name"] = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL,
                        ["value"] = 1000118001,
                        },
                    [12] = {
                        ["value"] = 1000002002,
                        ["name"] = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [13] = {
                        ["value"] = 1000112000,
                        ["name"] = VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR,
                        ["extension"] = VK_KHR_shared_presentable_image,
                        },
                    [14] = {
                        ["value"] = 1000165003,
                        ["name"] = VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [15] = {
                        ["value"] = 1000219000,
                        ["name"] = VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                },
            ["VkValidationFeatureEnableEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkRayTracingShaderGroupTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkPipelineBindPoint"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_PIPELINE_BIND_POINT_GRAPHICS,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PIPELINE_BIND_POINT_COMPUTE,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_PIPELINE_BIND_POINT_RAY_TRACING_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkDriverIdKHR"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DRIVER_ID_AMD_PROPRIETARY_KHR,
                        ["value"] = 1,
                        },
                    [2] = {
                        ["name"] = VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR,
                        ["value"] = 2,
                        },
                    [3] = {
                        ["name"] = VK_DRIVER_ID_MESA_RADV_KHR,
                        ["value"] = 3,
                        },
                    [4] = {
                        ["name"] = VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR,
                        ["value"] = 4,
                        },
                    [5] = {
                        ["name"] = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR,
                        ["value"] = 5,
                        },
                    [6] = {
                        ["name"] = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR,
                        ["value"] = 6,
                        },
                    [7] = {
                        ["name"] = VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR,
                        ["value"] = 7,
                        },
                    [8] = {
                        ["name"] = VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR,
                        ["value"] = 8,
                        },
                    [9] = {
                        ["name"] = VK_DRIVER_ID_ARM_PROPRIETARY_KHR,
                        ["value"] = 9,
                        },
                    [10] = {
                        ["name"] = VK_DRIVER_ID_GOOGLE_PASTEL_KHR,
                        ["value"] = 10,
                        },
                    [11] = {
                        ["name"] = VK_DRIVER_ID_GGP_PROPRIETARY_KHR,
                        ["value"] = 11,
                        },
                    },
                },
            ["VkQueueGlobalPriorityEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT,
                        ["value"] = 128,
                        },
                    [2] = {
                        ["name"] = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT,
                        ["value"] = 256,
                        },
                    [3] = {
                        ["name"] = VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT,
                        ["value"] = 512,
                        },
                    [4] = {
                        ["name"] = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT,
                        ["value"] = 1024,
                        },
                    },
                },
            ["VkCoarseSampleOrderTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV,
                        ["value"] = 3,
                        },
                    },
                },
            ["VkShadingRatePaletteEntryNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV,
                        ["value"] = 11,
                        },
                    },
                },
            ["VkRasterizationOrderAMD"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_RASTERIZATION_ORDER_STRICT_AMD,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_RASTERIZATION_ORDER_RELAXED_AMD,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkBlendOverlapEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_BLEND_OVERLAP_UNCORRELATED_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_BLEND_OVERLAP_DISJOINT_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_BLEND_OVERLAP_CONJOINT_EXT,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkSamplerYcbcrRange"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SAMPLER_YCBCR_RANGE_ITU_FULL,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkObjectEntryTypeNVX"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX,
                        ["value"] = 4,
                        },
                    },
                },
            ["VkTessellationDomainOrigin"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkCommandBufferLevel"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COMMAND_BUFFER_LEVEL_PRIMARY,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMMAND_BUFFER_LEVEL_SECONDARY,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkDisplayEventTypeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,
                        ["value"] = 0,
                        },
                    },
                },
            ["VkIndirectCommandsTokenTypeNVX"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX,
                        ["value"] = 7,
                        },
                    },
                },
            ["VkDisplayPowerStateEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DISPLAY_POWER_STATE_OFF_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DISPLAY_POWER_STATE_SUSPEND_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DISPLAY_POWER_STATE_ON_EXT,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkValidationFeatureDisableEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_ALL_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT,
                        ["value"] = 6,
                        },
                    },
                },
            ["VkSamplerYcbcrModelConversion"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020,
                        ["value"] = 4,
                        },
                    },
                },
            ["VkAccelerationStructureMemoryRequirementsTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkAttachmentLoadOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_ATTACHMENT_LOAD_OP_LOAD,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_ATTACHMENT_LOAD_OP_CLEAR,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_ATTACHMENT_LOAD_OP_DONT_CARE,
                        ["value"] = 2,
                        },
                    },
                },
            ["VkValidationCheckEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VALIDATION_CHECK_ALL_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_VALIDATION_CHECK_SHADERS_EXT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkVertexInputRate"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_VERTEX_INPUT_RATE_VERTEX,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_VERTEX_INPUT_RATE_INSTANCE,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkSubpassContents"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SUBPASS_CONTENTS_INLINE,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkSystemAllocationScope"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_OBJECT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_CACHE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_DEVICE,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,
                        ["value"] = 4,
                        },
                    },
                },
            ["VkImageViewType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_1D,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_2D,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_3D,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_CUBE,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_1D_ARRAY,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_2D_ARRAY,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,
                        ["value"] = 6,
                        },
                    },
                },
            ["VkPipelineCacheHeaderVersion"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkFullScreenExclusiveEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT,
                        ["value"] = 3,
                        },
                    },
                },
            ["VkSharingMode"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SHARING_MODE_EXCLUSIVE,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SHARING_MODE_CONCURRENT,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkLogicOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_LOGIC_OP_CLEAR,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_LOGIC_OP_AND,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_LOGIC_OP_AND_REVERSE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_LOGIC_OP_COPY,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_LOGIC_OP_AND_INVERTED,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_LOGIC_OP_NO_OP,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_LOGIC_OP_XOR,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_LOGIC_OP_OR,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_LOGIC_OP_NOR,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_LOGIC_OP_EQUIVALENT,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_LOGIC_OP_INVERT,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_LOGIC_OP_OR_REVERSE,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_LOGIC_OP_COPY_INVERTED,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_LOGIC_OP_OR_INVERTED,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_LOGIC_OP_NAND,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_LOGIC_OP_SET,
                        ["value"] = 15,
                        },
                    },
                },
            ["VkDebugReportObjectTypeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,
                        ["value"] = 15,
                        },
                    [17] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,
                        ["value"] = 16,
                        },
                    [18] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,
                        ["value"] = 17,
                        },
                    [19] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,
                        ["value"] = 18,
                        },
                    [20] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,
                        ["value"] = 19,
                        },
                    [21] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,
                        ["value"] = 20,
                        },
                    [22] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,
                        ["value"] = 21,
                        },
                    [23] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,
                        ["value"] = 22,
                        },
                    [24] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,
                        ["value"] = 23,
                        },
                    [25] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,
                        ["value"] = 24,
                        },
                    [26] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,
                        ["value"] = 25,
                        },
                    [27] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,
                        ["value"] = 26,
                        },
                    [28] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,
                        ["value"] = 27,
                        },
                    [29] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,
                        ["value"] = 28,
                        },
                    [30] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,
                        ["value"] = 29,
                        },
                    [31] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,
                        ["value"] = 30,
                        },
                    [32] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT,
                        ["value"] = 31,
                        },
                    [33] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT,
                        ["value"] = 32,
                        },
                    [34] = {
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT,
                        ["value"] = 33,
                        },
                    [35] = {
                        ["value"] = 1000012000,
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT,
                        ["extension"] = VK_EXT_debug_report,
                        },
                    [36] = {
                        ["value"] = 1000012000,
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT,
                        ["extension"] = VK_EXT_debug_report,
                        },
                    [37] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkPresentModeKHR"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_PRESENT_MODE_IMMEDIATE_KHR,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PRESENT_MODE_MAILBOX_KHR,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_PRESENT_MODE_FIFO_KHR,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_PRESENT_MODE_FIFO_RELAXED_KHR,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["value"] = 1000112000,
                        ["name"] = VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR,
                        ["extension"] = VK_KHR_shared_presentable_image,
                        },
                    [6] = {
                        ["value"] = 1000112001,
                        ["name"] = VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR,
                        ["extension"] = VK_KHR_shared_presentable_image,
                        },
                    },
                },
            ["VkQueryType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_QUERY_TYPE_OCCLUSION,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_QUERY_TYPE_PIPELINE_STATISTICS,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_QUERY_TYPE_TIMESTAMP,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["value"] = 1000029004,
                        ["name"] = VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [5] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkGeometryTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_GEOMETRY_TYPE_TRIANGLES_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_GEOMETRY_TYPE_AABBS_NV,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkSamplerAddressMode"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_SAMPLER_ADDRESS_MODE_REPEAT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,
                        ["value"] = 3,
                        },
                    },
                },
            ["VkAccelerationStructureTypeNV"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV,
                        ["value"] = 1,
                        },
                    },
                },
            ["VkPolygonMode"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_POLYGON_MODE_FILL,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_POLYGON_MODE_LINE,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_POLYGON_MODE_POINT,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["value"] = 1000154000,
                        ["name"] = VK_POLYGON_MODE_FILL_RECTANGLE_NV,
                        ["extension"] = VK_NV_fill_rectangle,
                        },
                    },
                },
            ["VkObjectType"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_OBJECT_TYPE_UNKNOWN,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_OBJECT_TYPE_INSTANCE,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_OBJECT_TYPE_PHYSICAL_DEVICE,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_OBJECT_TYPE_DEVICE,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_OBJECT_TYPE_QUEUE,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_OBJECT_TYPE_SEMAPHORE,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_OBJECT_TYPE_COMMAND_BUFFER,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_OBJECT_TYPE_FENCE,
                        ["value"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_OBJECT_TYPE_DEVICE_MEMORY,
                        ["value"] = 8,
                        },
                    [10] = {
                        ["name"] = VK_OBJECT_TYPE_BUFFER,
                        ["value"] = 9,
                        },
                    [11] = {
                        ["name"] = VK_OBJECT_TYPE_IMAGE,
                        ["value"] = 10,
                        },
                    [12] = {
                        ["name"] = VK_OBJECT_TYPE_EVENT,
                        ["value"] = 11,
                        },
                    [13] = {
                        ["name"] = VK_OBJECT_TYPE_QUERY_POOL,
                        ["value"] = 12,
                        },
                    [14] = {
                        ["name"] = VK_OBJECT_TYPE_BUFFER_VIEW,
                        ["value"] = 13,
                        },
                    [15] = {
                        ["name"] = VK_OBJECT_TYPE_IMAGE_VIEW,
                        ["value"] = 14,
                        },
                    [16] = {
                        ["name"] = VK_OBJECT_TYPE_SHADER_MODULE,
                        ["value"] = 15,
                        },
                    [17] = {
                        ["name"] = VK_OBJECT_TYPE_PIPELINE_CACHE,
                        ["value"] = 16,
                        },
                    [18] = {
                        ["name"] = VK_OBJECT_TYPE_PIPELINE_LAYOUT,
                        ["value"] = 17,
                        },
                    [19] = {
                        ["name"] = VK_OBJECT_TYPE_RENDER_PASS,
                        ["value"] = 18,
                        },
                    [20] = {
                        ["name"] = VK_OBJECT_TYPE_PIPELINE,
                        ["value"] = 19,
                        },
                    [21] = {
                        ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,
                        ["value"] = 20,
                        },
                    [22] = {
                        ["name"] = VK_OBJECT_TYPE_SAMPLER,
                        ["value"] = 21,
                        },
                    [23] = {
                        ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_POOL,
                        ["value"] = 22,
                        },
                    [24] = {
                        ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_SET,
                        ["value"] = 23,
                        },
                    [25] = {
                        ["name"] = VK_OBJECT_TYPE_FRAMEBUFFER,
                        ["value"] = 24,
                        },
                    [26] = {
                        ["name"] = VK_OBJECT_TYPE_COMMAND_POOL,
                        ["value"] = 25,
                        },
                    [27] = {
                        ["name"] = VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION,
                        ["value"] = 1000157000,
                        },
                    [28] = {
                        ["name"] = VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE,
                        ["value"] = 1000086000,
                        },
                    [29] = {
                        ["value"] = 1000001000,
                        ["name"] = VK_OBJECT_TYPE_SURFACE_KHR,
                        ["extension"] = VK_KHR_surface,
                        },
                    [30] = {
                        ["value"] = 1000002000,
                        ["name"] = VK_OBJECT_TYPE_SWAPCHAIN_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [31] = {
                        ["value"] = 1000003000,
                        ["name"] = VK_OBJECT_TYPE_DISPLAY_KHR,
                        ["extension"] = VK_KHR_display,
                        },
                    [32] = {
                        ["value"] = 1000003001,
                        ["name"] = VK_OBJECT_TYPE_DISPLAY_MODE_KHR,
                        ["extension"] = VK_KHR_display,
                        },
                    [33] = {
                        ["value"] = 1000012000,
                        ["name"] = VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT,
                        ["extension"] = VK_EXT_debug_report,
                        },
                    [34] = {
                        ["value"] = 1000087000,
                        ["name"] = VK_OBJECT_TYPE_OBJECT_TABLE_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [35] = {
                        ["value"] = 1000087001,
                        ["name"] = VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [36] = {
                        ["value"] = 1000129000,
                        ["name"] = VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT,
                        ["extension"] = VK_EXT_debug_utils,
                        },
                    [37] = {
                        ["value"] = 1000161000,
                        ["name"] = VK_OBJECT_TYPE_VALIDATION_CACHE_EXT,
                        ["extension"] = VK_EXT_validation_cache,
                        },
                    [38] = {
                        ["value"] = 1000166000,
                        ["name"] = VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                },
            ["VkCompareOp"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_COMPARE_OP_NEVER,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMPARE_OP_LESS,
                        ["value"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COMPARE_OP_EQUAL,
                        ["value"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COMPARE_OP_LESS_OR_EQUAL,
                        ["value"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_COMPARE_OP_GREATER,
                        ["value"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_COMPARE_OP_NOT_EQUAL,
                        ["value"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_COMPARE_OP_GREATER_OR_EQUAL,
                        ["value"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_COMPARE_OP_ALWAYS,
                        ["value"] = 7,
                        },
                    },
                },
            ["VkDiscardRectangleModeEXT"] = {
                ["values"] = {
                    [1] = {
                        ["name"] = VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT,
                        ["value"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT,
                        ["value"] = 1,
                        },
                    },
                },
            },
        ["bitmasks"] = {
            ["VkDescriptorPoolCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT,
                        ["comment"] = Descriptor sets may be freed individually,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalFenceFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDebugReportFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DEBUG_REPORT_INFORMATION_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DEBUG_REPORT_WARNING_BIT_EXT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DEBUG_REPORT_ERROR_BIT_EXT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_DEBUG_REPORT_DEBUG_BIT_EXT,
                        ["bitpos"] = 4,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkQueryPipelineStatisticFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT,
                        ["comment"] = Optional,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT,
                        ["comment"] = Optional,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT,
                        ["comment"] = Optional,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT,
                        ["comment"] = Optional,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT,
                        ["comment"] = Optional,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    [11] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT,
                        ["comment"] = Optional,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkQueueFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_QUEUE_GRAPHICS_BIT,
                        ["comment"] = Queue supports graphics operations,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_QUEUE_COMPUTE_BIT,
                        ["comment"] = Queue supports compute operations,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_QUEUE_TRANSFER_BIT,
                        ["comment"] = Queue supports transfer operations,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_QUEUE_SPARSE_BINDING_BIT,
                        ["comment"] = Queue supports sparse resource memory management operations,
                        },
                    [5] = {
                        ["name"] = VK_QUEUE_PROTECTED_BIT,
                        ["bitpos"] = 4,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDescriptorSetLayoutCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR,
                        ["extension"] = VK_KHR_push_descriptor,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT,
                        ["extension"] = VK_EXT_descriptor_indexing,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPeerMemoryFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT,
                        ["comment"] = Can read with vkCmdCopy commands,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT,
                        ["comment"] = Can write with vkCmdCopy commands,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT,
                        ["comment"] = Can read with any access type/command,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT,
                        ["comment"] = Can write with and access type/command,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkFramebufferCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkCommandBufferResetFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT,
                        ["comment"] = Release resources owned by the buffer,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkImageAspectFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_IMAGE_ASPECT_COLOR_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_IMAGE_ASPECT_DEPTH_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_IMAGE_ASPECT_STENCIL_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_IMAGE_ASPECT_METADATA_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_IMAGE_ASPECT_PLANE_0_BIT,
                        ["bitpos"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_IMAGE_ASPECT_PLANE_1_BIT,
                        ["bitpos"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_IMAGE_ASPECT_PLANE_2_BIT,
                        ["bitpos"] = 6,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    [11] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT,
                        ["extension"] = VK_EXT_image_drm_format_modifier,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineRasterizationStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineCacheCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_PIPELINE_CREATE_DERIVATIVE_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_PIPELINE_CREATE_DISPATCH_BASE,
                        ["bitpos"] = 4,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkStencilFaceFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_STENCIL_FACE_FRONT_BIT,
                        ["comment"] = Front face,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_STENCIL_FACE_BACK_BIT,
                        ["comment"] = Back face,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkShaderModuleCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDeviceGroupPresentModeFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR,
                        ["comment"] = Present from local memory,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR,
                        ["comment"] = Present from remote memory,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR,
                        ["comment"] = Present sum of local and/or remote memory,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR,
                        ["comment"] = Each physical device presents from local memory,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineInputAssemblyStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkQueryPoolCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkQueryResultFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_QUERY_RESULT_64_BIT,
                        ["comment"] = Results of the queries are written to the destination buffer as 64-bit values,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_QUERY_RESULT_WAIT_BIT,
                        ["comment"] = Results of the queries are waited on before proceeding with the result copy,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_QUERY_RESULT_WITH_AVAILABILITY_BIT,
                        ["comment"] = Besides the results of the query, the availability of the results is also written,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_QUERY_RESULT_PARTIAL_BIT,
                        ["comment"] = Copy the partial results of the query even if the final results are not available,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDisplayModeCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkBufferUsageFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
                        ["comment"] = Can be used as a source of transfer operations,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_BUFFER_USAGE_TRANSFER_DST_BIT,
                        ["comment"] = Can be used as a destination of transfer operations,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT,
                        ["comment"] = Can be used as TBO,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT,
                        ["comment"] = Can be used as IBO,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
                        ["comment"] = Can be used as UBO,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_BUFFER_USAGE_STORAGE_BUFFER_BIT,
                        ["comment"] = Can be used as SSBO,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
                        ["comment"] = Can be used as source of fixed-function index fetch (index buffer),
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
                        ["comment"] = Can be used as source of fixed-function vertex fetch (VBO),
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT,
                        ["comment"] = Can be the source of indirect parameters (e.g. indirect buffer, parameter buffer),
                        },
                    [10] = {
                        ["bitpos"] = 11,
                        ["name"] = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [11] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [12] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [13] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_BUFFER_USAGE_RAY_TRACING_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [14] = {
                        ["bitpos"] = 17,
                        ["name"] = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkViSurfaceCreateFlagsNN"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSemaphoreImportFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkMemoryMapFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkAccessFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_ACCESS_INDIRECT_COMMAND_READ_BIT,
                        ["comment"] = Controls coherency of indirect command reads,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_ACCESS_INDEX_READ_BIT,
                        ["comment"] = Controls coherency of index reads,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT,
                        ["comment"] = Controls coherency of vertex attribute reads,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_ACCESS_UNIFORM_READ_BIT,
                        ["comment"] = Controls coherency of uniform buffer reads,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_ACCESS_INPUT_ATTACHMENT_READ_BIT,
                        ["comment"] = Controls coherency of input attachment reads,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_ACCESS_SHADER_READ_BIT,
                        ["comment"] = Controls coherency of shader reads,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_ACCESS_SHADER_WRITE_BIT,
                        ["comment"] = Controls coherency of shader writes,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_ACCESS_COLOR_ATTACHMENT_READ_BIT,
                        ["comment"] = Controls coherency of color attachment reads,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT,
                        ["comment"] = Controls coherency of color attachment writes,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
                        ["comment"] = Controls coherency of depth/stencil attachment reads,
                        },
                    [11] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
                        ["comment"] = Controls coherency of depth/stencil attachment writes,
                        },
                    [12] = {
                        ["bitpos"] = 11,
                        ["name"] = VK_ACCESS_TRANSFER_READ_BIT,
                        ["comment"] = Controls coherency of transfer reads,
                        },
                    [13] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_ACCESS_TRANSFER_WRITE_BIT,
                        ["comment"] = Controls coherency of transfer writes,
                        },
                    [14] = {
                        ["bitpos"] = 13,
                        ["name"] = VK_ACCESS_HOST_READ_BIT,
                        ["comment"] = Controls coherency of host reads,
                        },
                    [15] = {
                        ["bitpos"] = 14,
                        ["name"] = VK_ACCESS_HOST_WRITE_BIT,
                        ["comment"] = Controls coherency of host writes,
                        },
                    [16] = {
                        ["bitpos"] = 15,
                        ["name"] = VK_ACCESS_MEMORY_READ_BIT,
                        ["comment"] = Controls coherency of memory reads,
                        },
                    [17] = {
                        ["bitpos"] = 16,
                        ["name"] = VK_ACCESS_MEMORY_WRITE_BIT,
                        ["comment"] = Controls coherency of memory writes,
                        },
                    [18] = {
                        ["bitpos"] = 25,
                        ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [19] = {
                        ["bitpos"] = 26,
                        ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [20] = {
                        ["bitpos"] = 27,
                        ["name"] = VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [21] = {
                        ["bitpos"] = 20,
                        ["name"] = VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [22] = {
                        ["bitpos"] = 17,
                        ["name"] = VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [23] = {
                        ["bitpos"] = 18,
                        ["name"] = VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [24] = {
                        ["bitpos"] = 19,
                        ["name"] = VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT,
                        ["extension"] = VK_EXT_blend_operation_advanced,
                        },
                    [25] = {
                        ["bitpos"] = 23,
                        ["name"] = VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [26] = {
                        ["bitpos"] = 21,
                        ["name"] = VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [27] = {
                        ["bitpos"] = 22,
                        ["name"] = VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [28] = {
                        ["bitpos"] = 24,
                        ["name"] = VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkImageViewCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineRasterizationDepthClipStateCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkMemoryAllocateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT,
                        ["comment"] = Force allocation on specific devices,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkResolveModeFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_RESOLVE_MODE_AVERAGE_BIT_KHR,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_RESOLVE_MODE_MIN_BIT_KHR,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_RESOLVE_MODE_MAX_BIT_KHR,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkSubpassDescriptionFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX,
                        ["extension"] = VK_NVX_multiview_per_view_attributes,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX,
                        ["extension"] = VK_NVX_multiview_per_view_attributes,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineDynamicStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkXlibSurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDescriptorBindingFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDeviceQueueCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineRasterizationConservativeStateCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkFenceCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_FENCE_CREATE_SIGNALED_BIT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkColorComponentFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_COLOR_COMPONENT_R_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COLOR_COMPONENT_G_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COLOR_COMPONENT_B_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COLOR_COMPONENT_A_BIT,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalMemoryFeatureFlagsNV"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV,
                        ["bitpos"] = 2,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDebugUtilsMessengerCallbackDataFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineCoverageModulationStateCreateFlagsNV"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalFenceHandleTypeFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineCreationFeedbackFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT,
                        ["bitpos"] = 2,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalMemoryHandleTypeFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT,
                        ["bitpos"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT,
                        ["bitpos"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT,
                        ["bitpos"] = 6,
                        },
                    [8] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT,
                        ["extension"] = VK_EXT_external_memory_dma_buf,
                        },
                    [9] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID,
                        ["extension"] = VK_ANDROID_external_memory_android_hardware_buffer,
                        },
                    [10] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT,
                        ["extension"] = VK_EXT_external_memory_host,
                        },
                    [11] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT,
                        ["extension"] = VK_EXT_external_memory_host,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalMemoryHandleTypeFlagsNV"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkBufferViewCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalMemoryFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT,
                        ["bitpos"] = 2,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkValidationCacheCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSampleCountFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SAMPLE_COUNT_1_BIT,
                        ["comment"] = Sample count 1 supported,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SAMPLE_COUNT_2_BIT,
                        ["comment"] = Sample count 2 supported,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_SAMPLE_COUNT_4_BIT,
                        ["comment"] = Sample count 4 supported,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_SAMPLE_COUNT_8_BIT,
                        ["comment"] = Sample count 8 supported,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_SAMPLE_COUNT_16_BIT,
                        ["comment"] = Sample count 16 supported,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_SAMPLE_COUNT_32_BIT,
                        ["comment"] = Sample count 32 supported,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_SAMPLE_COUNT_64_BIT,
                        ["comment"] = Sample count 64 supported,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkMemoryHeapFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_MEMORY_HEAP_DEVICE_LOCAL_BIT,
                        ["comment"] = If set, heap represents device memory,
                        },
                    [2] = {
                        ["name"] = VK_MEMORY_HEAP_MULTI_INSTANCE_BIT,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkBufferCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_BUFFER_CREATE_SPARSE_BINDING_BIT,
                        ["comment"] = Buffer should support sparse backing,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT,
                        ["comment"] = Buffer should support sparse backing with partial residency,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_BUFFER_CREATE_SPARSE_ALIASED_BIT,
                        ["comment"] = Buffer should support constent data access to physical memory ranges mapped into multiple locations of sparse buffers,
                        },
                    [4] = {
                        ["name"] = VK_BUFFER_CREATE_PROTECTED_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT,
                        ["extension"] = VK_EXT_buffer_device_address,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineCoverageToColorStateCreateFlagsNV"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineStageFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,
                        ["comment"] = Before subsequent commands are processed,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT,
                        ["comment"] = Draw/DispatchIndirect command fetch,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,
                        ["comment"] = Vertex/index fetch,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,
                        ["comment"] = Vertex shading,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT,
                        ["comment"] = Tessellation control shading,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT,
                        ["comment"] = Tessellation evaluation shading,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,
                        ["comment"] = Geometry shading,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
                        ["comment"] = Fragment shading,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
                        ["comment"] = Early fragment (depth and stencil) tests,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,
                        ["comment"] = Late fragment (depth and stencil) tests,
                        },
                    [11] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
                        ["comment"] = Color attachment writes,
                        },
                    [12] = {
                        ["bitpos"] = 11,
                        ["name"] = VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
                        ["comment"] = Compute shading,
                        },
                    [13] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_PIPELINE_STAGE_TRANSFER_BIT,
                        ["comment"] = Transfer/copy operations,
                        },
                    [14] = {
                        ["bitpos"] = 13,
                        ["name"] = VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
                        ["comment"] = After previous commands have completed,
                        },
                    [15] = {
                        ["bitpos"] = 14,
                        ["name"] = VK_PIPELINE_STAGE_HOST_BIT,
                        ["comment"] = Indicates host (CPU) is a source/sink of the dependency,
                        },
                    [16] = {
                        ["bitpos"] = 15,
                        ["name"] = VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT,
                        ["comment"] = All stages of the graphics pipeline,
                        },
                    [17] = {
                        ["bitpos"] = 16,
                        ["name"] = VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,
                        ["comment"] = All stages supported on the queue,
                        },
                    [18] = {
                        ["bitpos"] = 24,
                        ["name"] = VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT,
                        ["extension"] = VK_EXT_transform_feedback,
                        },
                    [19] = {
                        ["bitpos"] = 18,
                        ["name"] = VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT,
                        ["extension"] = VK_EXT_conditional_rendering,
                        },
                    [20] = {
                        ["bitpos"] = 17,
                        ["name"] = VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX,
                        ["extension"] = VK_NVX_device_generated_commands,
                        },
                    [21] = {
                        ["bitpos"] = 22,
                        ["name"] = VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [22] = {
                        ["bitpos"] = 21,
                        ["name"] = VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [23] = {
                        ["bitpos"] = 25,
                        ["name"] = VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [24] = {
                        ["bitpos"] = 19,
                        ["name"] = VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    [25] = {
                        ["bitpos"] = 20,
                        ["name"] = VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    [26] = {
                        ["bitpos"] = 23,
                        ["name"] = VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkXcbSurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineDiscardRectangleStateCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSparseImageFormatFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT,
                        ["comment"] = Image uses a single mip tail region for all array layers,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT,
                        ["comment"] = Image requires mip level dimensions to be an integer multiple of the sparse image block dimensions for non-tail mip levels.,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT,
                        ["comment"] = Image uses a non-standard sparse image block dimensions,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineViewportSwizzleStateCreateFlagsNV"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSurfaceCounterFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_SURFACE_COUNTER_VBLANK_EXT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkSurfaceTransformFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR,
                        ["bitpos"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR,
                        ["bitpos"] = 5,
                        },
                    [7] = {
                        ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR,
                        ["bitpos"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR,
                        ["bitpos"] = 7,
                        },
                    [9] = {
                        ["name"] = VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR,
                        ["bitpos"] = 8,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkFenceImportFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_FENCE_IMPORT_TEMPORARY_BIT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDebugUtilsMessengerCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkCommandPoolResetFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT,
                        ["comment"] = Release resources owned by the pool,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkSparseMemoryBindFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SPARSE_MEMORY_BIND_METADATA_BIT,
                        ["comment"] = Operation binds resource metadata to memory,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkImageCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_IMAGE_CREATE_SPARSE_BINDING_BIT,
                        ["comment"] = Image should support sparse backing,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT,
                        ["comment"] = Image should support sparse backing with partial residency,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_IMAGE_CREATE_SPARSE_ALIASED_BIT,
                        ["comment"] = Image should support constent data access to physical memory ranges mapped into multiple locations of sparse images,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT,
                        ["comment"] = Allows image views to have different format than the base image,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT,
                        ["comment"] = Allows creating image views with cube type from the created image,
                        },
                    [6] = {
                        ["name"] = VK_IMAGE_CREATE_ALIAS_BIT,
                        ["bitpos"] = 10,
                        },
                    [7] = {
                        ["name"] = VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT,
                        ["bitpos"] = 6,
                        },
                    [8] = {
                        ["name"] = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT,
                        ["bitpos"] = 5,
                        },
                    [9] = {
                        ["name"] = VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT,
                        ["bitpos"] = 7,
                        },
                    [10] = {
                        ["name"] = VK_IMAGE_CREATE_EXTENDED_USAGE_BIT,
                        ["bitpos"] = 8,
                        },
                    [11] = {
                        ["name"] = VK_IMAGE_CREATE_PROTECTED_BIT,
                        ["bitpos"] = 11,
                        },
                    [12] = {
                        ["name"] = VK_IMAGE_CREATE_DISJOINT_BIT,
                        ["bitpos"] = 9,
                        },
                    [13] = {
                        ["bitpos"] = 13,
                        ["name"] = VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV,
                        ["extension"] = VK_NV_corner_sampled_image,
                        },
                    [14] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT,
                        ["extension"] = VK_EXT_sample_locations,
                        },
                    [15] = {
                        ["bitpos"] = 14,
                        ["name"] = VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkAndroidSurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDebugUtilsMessageSeverityFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,
                        ["bitpos"] = 4,
                        },
                    [3] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,
                        ["bitpos"] = 8,
                        },
                    [4] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT,
                        ["bitpos"] = 12,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDebugUtilsMessageTypeFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT,
                        ["bitpos"] = 2,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkCommandPoolTrimFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSwapchainCreateFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR,
                        ["extension"] = VK_KHR_swapchain,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR,
                        ["extension"] = VK_KHR_swapchain_mutable_format,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineRasterizationStateStreamCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkMemoryPropertyFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,
                        ["comment"] = If otherwise stated, then allocate memory on device,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,
                        ["comment"] = Memory is mappable by host,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
                        ["comment"] = Memory will have i/o coherency. If not set, application may need to use vkFlushMappedMemoryRanges and vkInvalidateMappedMemoryRanges to flush/invalidate host cache,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_MEMORY_PROPERTY_HOST_CACHED_BIT,
                        ["comment"] = Memory will be cached by the host,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,
                        ["comment"] = Memory may be allocated by the driver when it is required,
                        },
                    [6] = {
                        ["name"] = VK_MEMORY_PROPERTY_PROTECTED_BIT,
                        ["bitpos"] = 5,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkAttachmentDescriptionFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT,
                        ["comment"] = The attachment may alias physical memory of another attachment in the same render pass,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkEventCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkImageUsageFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_IMAGE_USAGE_TRANSFER_SRC_BIT,
                        ["comment"] = Can be used as a source of transfer operations,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_IMAGE_USAGE_TRANSFER_DST_BIT,
                        ["comment"] = Can be used as a destination of transfer operations,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_IMAGE_USAGE_SAMPLED_BIT,
                        ["comment"] = Can be sampled from (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types),
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_IMAGE_USAGE_STORAGE_BIT,
                        ["comment"] = Can be used as storage image (STORAGE_IMAGE descriptor type),
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,
                        ["comment"] = Can be used as framebuffer color attachment,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,
                        ["comment"] = Can be used as framebuffer depth/stencil attachment,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT,
                        ["comment"] = Image data not needed outside of rendering,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT,
                        ["comment"] = Can be used as framebuffer input attachment,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV,
                        ["extension"] = VK_NV_shading_rate_image,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkFormatFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT,
                        ["comment"] = Format can be used for sampled images (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types),
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT,
                        ["comment"] = Format can be used for storage images (STORAGE_IMAGE descriptor type),
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT,
                        ["comment"] = Format supports atomic operations in case it is used for storage images,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT,
                        ["comment"] = Format can be used for uniform texel buffers (TBOs),
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT,
                        ["comment"] = Format can be used for storage texel buffers (IBOs),
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
                        ["comment"] = Format supports atomic operations in case it is used for storage texel buffers,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT,
                        ["comment"] = Format can be used for vertex buffers (VBOs),
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT,
                        ["comment"] = Format can be used for color attachment images,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT,
                        ["comment"] = Format supports blending in case it is used for color attachment images,
                        },
                    [10] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT,
                        ["comment"] = Format can be used for depth/stencil attachment images,
                        },
                    [11] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_FORMAT_FEATURE_BLIT_SRC_BIT,
                        ["comment"] = Format can be used as the source image of blits with vkCmdBlitImage,
                        },
                    [12] = {
                        ["bitpos"] = 11,
                        ["name"] = VK_FORMAT_FEATURE_BLIT_DST_BIT,
                        ["comment"] = Format can be used as the destination image of blits with vkCmdBlitImage,
                        },
                    [13] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
                        ["comment"] = Format can be filtered with VK_FILTER_LINEAR when being sampled,
                        },
                    [14] = {
                        ["name"] = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT,
                        ["bitpos"] = 14,
                        },
                    [15] = {
                        ["name"] = VK_FORMAT_FEATURE_TRANSFER_DST_BIT,
                        ["bitpos"] = 15,
                        },
                    [16] = {
                        ["name"] = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT,
                        ["bitpos"] = 17,
                        },
                    [17] = {
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
                        ["bitpos"] = 18,
                        },
                    [18] = {
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
                        ["bitpos"] = 19,
                        },
                    [19] = {
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
                        ["bitpos"] = 20,
                        },
                    [20] = {
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
                        ["bitpos"] = 21,
                        },
                    [21] = {
                        ["name"] = VK_FORMAT_FEATURE_DISJOINT_BIT,
                        ["bitpos"] = 22,
                        },
                    [22] = {
                        ["name"] = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT,
                        ["bitpos"] = 23,
                        },
                    [23] = {
                        ["bitpos"] = 13,
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG,
                        ["extension"] = VK_IMG_filter_cubic,
                        },
                    [24] = {
                        ["bitpos"] = 16,
                        ["name"] = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT,
                        ["extension"] = VK_EXT_sampler_filter_minmax,
                        },
                    [25] = {
                        ["bitpos"] = 24,
                        ["name"] = VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkMetalSurfaceCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkImagePipeSurfaceCreateFlagsFUCHSIA"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkIndirectCommandsLayoutUsageFlagsNVX"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDisplaySurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkStreamDescriptorSurfaceCreateFlagsGGP"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineVertexInputStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkMacOSSurfaceCreateFlagsMVK"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDescriptorPoolResetFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineDepthStencilStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDeviceCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkInstanceCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkConditionalRenderingFlagsEXT"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT,
                        ["bitpos"] = 0,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineViewportStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkBuildAccelerationStructureFlagsNV"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV,
                        ["bitpos"] = 4,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkSubgroupFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SUBGROUP_FEATURE_BASIC_BIT,
                        ["comment"] = Basic subgroup operations,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SUBGROUP_FEATURE_VOTE_BIT,
                        ["comment"] = Vote subgroup operations,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_SUBGROUP_FEATURE_ARITHMETIC_BIT,
                        ["comment"] = Arithmetic subgroup operations,
                        },
                    [4] = {
                        ["bitpos"] = 3,
                        ["name"] = VK_SUBGROUP_FEATURE_BALLOT_BIT,
                        ["comment"] = Ballot subgroup operations,
                        },
                    [5] = {
                        ["bitpos"] = 4,
                        ["name"] = VK_SUBGROUP_FEATURE_SHUFFLE_BIT,
                        ["comment"] = Shuffle subgroup operations,
                        },
                    [6] = {
                        ["bitpos"] = 5,
                        ["name"] = VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT,
                        ["comment"] = Shuffle relative subgroup operations,
                        },
                    [7] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_SUBGROUP_FEATURE_CLUSTERED_BIT,
                        ["comment"] = Clustered subgroup operations,
                        },
                    [8] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_SUBGROUP_FEATURE_QUAD_BIT,
                        ["comment"] = Quad subgroup operations,
                        },
                    [9] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV,
                        ["extension"] = VK_NV_shader_subgroup_partitioned,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkWaylandSurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkCommandPoolCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_COMMAND_POOL_CREATE_TRANSIENT_BIT,
                        ["comment"] = Command buffers have a short lifetime,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT,
                        ["comment"] = Command buffers may release their memory individually,
                        },
                    [3] = {
                        ["name"] = VK_COMMAND_POOL_CREATE_PROTECTED_BIT,
                        ["bitpos"] = 2,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDependencyFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_DEPENDENCY_BY_REGION_BIT,
                        ["comment"] = Dependency is per pixel region ,
                        },
                    [2] = {
                        ["name"] = VK_DEPENDENCY_DEVICE_GROUP_BIT,
                        ["bitpos"] = 2,
                        },
                    [3] = {
                        ["name"] = VK_DEPENDENCY_VIEW_LOCAL_BIT,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalSemaphoreHandleTypeFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT,
                        ["bitpos"] = 4,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkRenderPassCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineMultisampleStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkDisplayPlaneAlphaFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkCompositeAlphaFlagsKHR"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkDescriptorUpdateTemplateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkQueryControlFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_QUERY_CONTROL_PRECISE_BIT,
                        ["comment"] = Require precise results to be collected by the query,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineTessellationStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkGeometryInstanceFlagsNV"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV,
                        ["bitpos"] = 3,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkHeadlessSurfaceCreateFlagsEXT"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkShaderStageFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_SHADER_STAGE_VERTEX_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["name"] = VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,
                        ["bitpos"] = 2,
                        },
                    [4] = {
                        ["name"] = VK_SHADER_STAGE_GEOMETRY_BIT,
                        ["bitpos"] = 3,
                        },
                    [5] = {
                        ["name"] = VK_SHADER_STAGE_FRAGMENT_BIT,
                        ["bitpos"] = 4,
                        },
                    [6] = {
                        ["name"] = VK_SHADER_STAGE_COMPUTE_BIT,
                        ["bitpos"] = 5,
                        },
                    [7] = {
                        ["bitpos"] = 8,
                        ["name"] = VK_SHADER_STAGE_RAYGEN_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [8] = {
                        ["bitpos"] = 9,
                        ["name"] = VK_SHADER_STAGE_ANY_HIT_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [9] = {
                        ["bitpos"] = 10,
                        ["name"] = VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [10] = {
                        ["bitpos"] = 11,
                        ["name"] = VK_SHADER_STAGE_MISS_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [11] = {
                        ["bitpos"] = 12,
                        ["name"] = VK_SHADER_STAGE_INTERSECTION_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [12] = {
                        ["bitpos"] = 13,
                        ["name"] = VK_SHADER_STAGE_CALLABLE_BIT_NV,
                        ["extension"] = VK_NV_ray_tracing,
                        },
                    [13] = {
                        ["bitpos"] = 6,
                        ["name"] = VK_SHADER_STAGE_TASK_BIT_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    [14] = {
                        ["bitpos"] = 7,
                        ["name"] = VK_SHADER_STAGE_MESH_BIT_NV,
                        ["extension"] = VK_NV_mesh_shader,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkCommandBufferUsageFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT,
                        ["bitpos"] = 1,
                        },
                    [3] = {
                        ["bitpos"] = 2,
                        ["name"] = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,
                        ["comment"] = Command buffer may be submitted/executed more than once simultaneously,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkCullModeFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_CULL_MODE_FRONT_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_CULL_MODE_BACK_BIT,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkObjectEntryUsageFlagsNVX"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineLayoutCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkGeometryFlagsNV"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_GEOMETRY_OPAQUE_BIT_NV,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkSamplerCreateFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["bitpos"] = 0,
                        ["name"] = VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    [2] = {
                        ["bitpos"] = 1,
                        ["name"] = VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT,
                        ["extension"] = VK_EXT_fragment_density_map,
                        },
                    },
                ["type"] = VkFlags,
                },
            ["VkWin32SurfaceCreateFlagsKHR"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineColorBlendStateCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkPipelineShaderStageCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkSemaphoreCreateFlags"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkIOSSurfaceCreateFlagsMVK"] = {
                ["bits"] = {
                    },
                ["type"] = VkFlags,
                },
            ["VkExternalSemaphoreFeatureFlags"] = {
                ["bits"] = {
                    [1] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT,
                        ["bitpos"] = 0,
                        },
                    [2] = {
                        ["name"] = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT,
                        ["bitpos"] = 1,
                        },
                    },
                ["type"] = VkFlags,
                },
            },
        ["handles"] = {
            ["VkPipelineLayout"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDisplayModeKHR"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkSampler"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkBufferView"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkSamplerYcbcrConversion"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkValidationCacheEXT"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDescriptorPool"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkFence"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkShaderModule"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkSwapchainKHR"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkPipeline"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkFramebuffer"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDescriptorUpdateTemplate"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkObjectTableNVX"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkIndirectCommandsLayoutNVX"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkSurfaceKHR"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkCommandPool"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDeviceMemory"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkPipelineCache"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDisplayKHR"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkSemaphore"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkImageView"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkAccelerationStructureNV"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkPhysicalDevice"] = {
                ["type"] = VK_DEFINE_HANDLE,
                },
            ["VkCommandBuffer"] = {
                ["type"] = VK_DEFINE_HANDLE,
                },
            ["VkDebugUtilsMessengerEXT"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDevice"] = {
                ["type"] = VK_DEFINE_HANDLE,
                },
            ["VkDebugReportCallbackEXT"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkEvent"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkBuffer"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkImage"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkInstance"] = {
                ["type"] = VK_DEFINE_HANDLE,
                },
            ["VkQueue"] = {
                ["type"] = VK_DEFINE_HANDLE,
                },
            ["VkDescriptorSetLayout"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkRenderPass"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkQueryPool"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            ["VkDescriptorSet"] = {
                ["type"] = VK_DEFINE_NON_DISPATCHABLE_HANDLE,
                },
            },
        ["structs"] = {
            ["VkImageViewASTCDecodeModeEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = decodeMode,
                        ["type"] = VkFormat,
                        },
                    },
                },
            ["VkD3D12FenceSubmitInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = waitSemaphoreValuesCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pWaitSemaphoreValues,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = signalSemaphoreValuesCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pSignalSemaphoreValues,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkViewportWScalingNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = xcoeff,
                        ["type"] = float,
                        },
                    [2] = {
                        ["name"] = ycoeff,
                        ["type"] = float,
                        },
                    },
                },
            ["VkMemoryDedicatedAllocateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkImage,
                        ["name"] = image,
                        ["comment"] = Image that this allocation will be bound to,
                        },
                    [4] = {
                        ["type"] = VkBuffer,
                        ["name"] = buffer,
                        ["comment"] = Buffer that this allocation will be bound to,
                        },
                    },
                },
            ["VkDeviceGroupPresentCapabilitiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["arrayLength"] = VK_MAX_DEVICE_GROUP_SIZE,
                        ["type"] = uint32_t,
                        ["name"] = presentMask,
                        ["array"] = true,
                        },
                    [4] = {
                        ["name"] = modes,
                        ["type"] = VkDeviceGroupPresentModeFlagsKHR,
                        },
                    },
                },
            ["VkBufferCopy"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = srcOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [2] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = dstOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Specified in bytes,
                        },
                    },
                },
            ["VkMetalSurfaceCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkMetalSurfaceCreateFlagsEXT,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = CAMetalLayer,
                        ["name"] = pLayer,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkRayTracingPipelineCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkPipelineCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Pipeline creation flags,
                        },
                    [4] = {
                        ["name"] = stageCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkPipelineShaderStageCreateInfo,
                        ["comment"] = One entry for each active shader stage,
                        ["pointer"] = true,
                        ["name"] = pStages,
                        },
                    [6] = {
                        ["name"] = groupCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkRayTracingShaderGroupCreateInfoNV,
                        ["name"] = pGroups,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["name"] = maxRecursionDepth,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["type"] = VkPipelineLayout,
                        ["name"] = layout,
                        ["comment"] = Interface layout of the pipeline,
                        },
                    [10] = {
                        ["type"] = VkPipeline,
                        ["name"] = basePipelineHandle,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of,
                        },
                    [11] = {
                        ["type"] = int32_t,
                        ["name"] = basePipelineIndex,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of,
                        },
                    },
                },
            ["VkSparseImageMemoryBind"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = subresource,
                        ["type"] = VkImageSubresource,
                        },
                    [2] = {
                        ["name"] = offset,
                        ["type"] = VkOffset3D,
                        },
                    [3] = {
                        ["name"] = extent,
                        ["type"] = VkExtent3D,
                        },
                    [4] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [5] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = memoryOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [6] = {
                        ["name"] = flags,
                        ["type"] = VkSparseMemoryBindFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceDepthStencilResolvePropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkResolveModeFlagsKHR,
                        ["name"] = supportedDepthResolveModes,
                        ["comment"] = supported depth resolve modes,
                        },
                    [4] = {
                        ["type"] = VkResolveModeFlagsKHR,
                        ["name"] = supportedStencilResolveModes,
                        ["comment"] = supported stencil resolve modes,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = independentResolveNone,
                        ["comment"] = depth and stencil resolve modes can be set independently if one of them is none,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = independentResolve,
                        ["comment"] = depth and stencil resolve modes can be set independently,
                        },
                    },
                },
            ["VkQueueFamilyProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = queueFamilyProperties,
                        ["type"] = VkQueueFamilyProperties,
                        },
                    },
                },
            ["VkAttachmentDescription"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = flags,
                        ["type"] = VkAttachmentDescriptionFlags,
                        },
                    [2] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [3] = {
                        ["name"] = samples,
                        ["type"] = VkSampleCountFlags,
                        },
                    [4] = {
                        ["type"] = VkAttachmentLoadOp,
                        ["name"] = loadOp,
                        ["comment"] = Load operation for color or depth data,
                        },
                    [5] = {
                        ["type"] = VkAttachmentStoreOp,
                        ["name"] = storeOp,
                        ["comment"] = Store operation for color or depth data,
                        },
                    [6] = {
                        ["type"] = VkAttachmentLoadOp,
                        ["name"] = stencilLoadOp,
                        ["comment"] = Load operation for stencil data,
                        },
                    [7] = {
                        ["type"] = VkAttachmentStoreOp,
                        ["name"] = stencilStoreOp,
                        ["comment"] = Store operation for stencil data,
                        },
                    [8] = {
                        ["name"] = initialLayout,
                        ["type"] = VkImageLayout,
                        },
                    [9] = {
                        ["name"] = finalLayout,
                        ["type"] = VkImageLayout,
                        },
                    },
                },
            ["VkSpecializationMapEntry"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = constantID,
                        ["comment"] = The SpecConstant ID specified in the BIL,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = offset,
                        ["comment"] = Offset of the value in the data block,
                        },
                    [3] = {
                        ["type"] = size_t,
                        ["name"] = size,
                        ["comment"] = Size in bytes of the SpecConstant,
                        },
                    },
                },
            ["VkDeviceCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDeviceCreateFlags,
                        },
                    [4] = {
                        ["name"] = queueCreateInfoCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDeviceQueueCreateInfo,
                        ["name"] = pQueueCreateInfos,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = enabledLayerCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Ordered list of layer names to be enabled,
                        ["doublePointer"] = true,
                        ["name"] = ppEnabledLayerNames,
                        },
                    [8] = {
                        ["name"] = enabledExtensionCount,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = ppEnabledExtensionNames,
                        ["doublePointer"] = true,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkPhysicalDeviceFeatures,
                        ["name"] = pEnabledFeatures,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkAttachmentReference2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = attachment,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = layout,
                        ["type"] = VkImageLayout,
                        },
                    [5] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    },
                },
            ["VkSemaphoreGetFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = semaphore,
                        ["type"] = VkSemaphore,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceInlineUniformBlockFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = inlineUniformBlock,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = descriptorBindingInlineUniformBlockUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkImageViewUsageCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = usage,
                        ["type"] = VkImageUsageFlags,
                        },
                    },
                },
            ["VkMemoryGetFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkPipelineInputAssemblyStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineInputAssemblyStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = topology,
                        ["type"] = VkPrimitiveTopology,
                        },
                    [5] = {
                        ["name"] = primitiveRestartEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkShaderModuleCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkShaderModuleCreateFlags,
                        },
                    [4] = {
                        ["type"] = size_t,
                        ["name"] = codeSize,
                        ["comment"] = Specified in bytes,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["comment"] = Binary code of size codeSize,
                        ["pointer"] = true,
                        ["name"] = pCode,
                        },
                    },
                },
            ["VkPresentTimesInfoGOOGLE"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = swapchainCount,
                        ["comment"] = Copy of VkPresentInfoKHR::swapchainCount,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkPresentTimeGOOGLE,
                        ["comment"] = The earliest times to present images,
                        ["pointer"] = true,
                        ["name"] = pTimes,
                        },
                    },
                },
            ["VkImportSemaphoreWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = semaphore,
                        ["type"] = VkSemaphore,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkSemaphoreImportFlags,
                        },
                    [5] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    [6] = {
                        ["name"] = handle,
                        ["type"] = HANDLE,
                        },
                    [7] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkAndroidHardwareBufferFormatPropertiesANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [4] = {
                        ["name"] = externalFormat,
                        ["type"] = uint64_t,
                        },
                    [5] = {
                        ["name"] = formatFeatures,
                        ["type"] = VkFormatFeatureFlags,
                        },
                    [6] = {
                        ["name"] = samplerYcbcrConversionComponents,
                        ["type"] = VkComponentMapping,
                        },
                    [7] = {
                        ["name"] = suggestedYcbcrModel,
                        ["type"] = VkSamplerYcbcrModelConversion,
                        },
                    [8] = {
                        ["name"] = suggestedYcbcrRange,
                        ["type"] = VkSamplerYcbcrRange,
                        },
                    [9] = {
                        ["name"] = suggestedXChromaOffset,
                        ["type"] = VkChromaLocation,
                        },
                    [10] = {
                        ["name"] = suggestedYChromaOffset,
                        ["type"] = VkChromaLocation,
                        },
                    },
                },
            ["VkRenderPassBeginInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = renderPass,
                        ["type"] = VkRenderPass,
                        },
                    [4] = {
                        ["name"] = framebuffer,
                        ["type"] = VkFramebuffer,
                        },
                    [5] = {
                        ["name"] = renderArea,
                        ["type"] = VkRect2D,
                        },
                    [6] = {
                        ["name"] = clearValueCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkClearValue,
                        ["name"] = pClearValues,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkWriteDescriptorSet"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDescriptorSet,
                        ["name"] = dstSet,
                        ["comment"] = Destination descriptor set,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = dstBinding,
                        ["comment"] = Binding within the destination descriptor set to write,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = dstArrayElement,
                        ["comment"] = Array element within the destination binding to write,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = descriptorCount,
                        ["comment"] = Number of descriptors to write (determines the size of the array pointed by pDescriptors),
                        },
                    [7] = {
                        ["type"] = VkDescriptorType,
                        ["name"] = descriptorType,
                        ["comment"] = Descriptor type to write (determines which members of the array pointed by pDescriptors are going to be used),
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorImageInfo,
                        ["comment"] = Sampler, image view, and layout for SAMPLER, COMBINED_IMAGE_SAMPLER, {SAMPLED,STORAGE}_IMAGE, and INPUT_ATTACHMENT descriptor types.,
                        ["pointer"] = true,
                        ["name"] = pImageInfo,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorBufferInfo,
                        ["comment"] = Raw buffer, size, and offset for {UNIFORM,STORAGE}_BUFFER[_DYNAMIC] descriptor types.,
                        ["pointer"] = true,
                        ["name"] = pBufferInfo,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkBufferView,
                        ["comment"] = Buffer view to write to the descriptor for {UNIFORM,STORAGE}_TEXEL_BUFFER descriptor types.,
                        ["pointer"] = true,
                        ["name"] = pTexelBufferView,
                        },
                    },
                },
            ["VkCoarseSampleLocationNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = pixelX,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = pixelY,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = sample,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDedicatedAllocationMemoryAllocateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkImage,
                        ["name"] = image,
                        ["comment"] = Image that this allocation will be bound to,
                        },
                    [4] = {
                        ["type"] = VkBuffer,
                        ["name"] = buffer,
                        ["comment"] = Buffer that this allocation will be bound to,
                        },
                    },
                },
            ["VkDisplayNativeHdrSurfaceCapabilitiesAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = localDimmingSupport,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = advancedBlendMaxColorAttachments,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = advancedBlendIndependentBlend,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = advancedBlendNonPremultipliedSrcColor,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = advancedBlendNonPremultipliedDstColor,
                        ["type"] = VkBool32,
                        },
                    [7] = {
                        ["name"] = advancedBlendCorrelatedOverlap,
                        ["type"] = VkBool32,
                        },
                    [8] = {
                        ["name"] = advancedBlendAllOperations,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkExternalBufferProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = externalMemoryProperties,
                        ["type"] = VkExternalMemoryProperties,
                        },
                    },
                },
            ["VkSparseImageMemoryBindInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    [2] = {
                        ["name"] = bindCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = VkSparseImageMemoryBind,
                        ["name"] = pBinds,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkGeometryTrianglesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = vertexData,
                        ["type"] = VkBuffer,
                        },
                    [4] = {
                        ["name"] = vertexOffset,
                        ["type"] = VkDeviceSize,
                        },
                    [5] = {
                        ["name"] = vertexCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = vertexStride,
                        ["type"] = VkDeviceSize,
                        },
                    [7] = {
                        ["name"] = vertexFormat,
                        ["type"] = VkFormat,
                        },
                    [8] = {
                        ["name"] = indexData,
                        ["type"] = VkBuffer,
                        },
                    [9] = {
                        ["name"] = indexOffset,
                        ["type"] = VkDeviceSize,
                        },
                    [10] = {
                        ["name"] = indexCount,
                        ["type"] = uint32_t,
                        },
                    [11] = {
                        ["name"] = indexType,
                        ["type"] = VkIndexType,
                        },
                    [12] = {
                        ["type"] = VkBuffer,
                        ["name"] = transformData,
                        ["comment"] = Optional reference to array of floats representing a 3x4 row major affine transformation matrix.,
                        },
                    [13] = {
                        ["name"] = transformOffset,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkCmdReserveSpaceForCommandsInfoNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = objectTable,
                        ["type"] = VkObjectTableNVX,
                        },
                    [4] = {
                        ["name"] = indirectCommandsLayout,
                        ["type"] = VkIndirectCommandsLayoutNVX,
                        },
                    [5] = {
                        ["name"] = maxSequencesCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPipelineTessellationStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineTessellationStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = patchControlPoints,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDrawIndexedIndirectCommand"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = indexCount,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = instanceCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = firstIndex,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = vertexOffset,
                        ["type"] = int32_t,
                        },
                    [5] = {
                        ["name"] = firstInstance,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkMacOSSurfaceCreateInfoMVK"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkMacOSSurfaceCreateFlagsMVK,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pView,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineColorBlendStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineColorBlendStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = logicOpEnable,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = logicOp,
                        ["type"] = VkLogicOp,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = attachmentCount,
                        ["comment"] = # of pAttachments,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkPipelineColorBlendAttachmentState,
                        ["name"] = pAttachments,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["arrayLength"] = 4,
                        ["type"] = float,
                        ["name"] = blendConstants,
                        ["array"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceVariablePointersFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = variablePointersStorageBuffer,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = variablePointers,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceDescriptorIndexingPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxUpdateAfterBindDescriptorsInAllPools,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = shaderUniformBufferArrayNonUniformIndexingNative,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = shaderSampledImageArrayNonUniformIndexingNative,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = shaderStorageBufferArrayNonUniformIndexingNative,
                        ["type"] = VkBool32,
                        },
                    [7] = {
                        ["name"] = shaderStorageImageArrayNonUniformIndexingNative,
                        ["type"] = VkBool32,
                        },
                    [8] = {
                        ["name"] = shaderInputAttachmentArrayNonUniformIndexingNative,
                        ["type"] = VkBool32,
                        },
                    [9] = {
                        ["name"] = robustBufferAccessUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [10] = {
                        ["name"] = quadDivergentImplicitLod,
                        ["type"] = VkBool32,
                        },
                    [11] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindSamplers,
                        ["type"] = uint32_t,
                        },
                    [12] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindUniformBuffers,
                        ["type"] = uint32_t,
                        },
                    [13] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindStorageBuffers,
                        ["type"] = uint32_t,
                        },
                    [14] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindSampledImages,
                        ["type"] = uint32_t,
                        },
                    [15] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindStorageImages,
                        ["type"] = uint32_t,
                        },
                    [16] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindInputAttachments,
                        ["type"] = uint32_t,
                        },
                    [17] = {
                        ["name"] = maxPerStageUpdateAfterBindResources,
                        ["type"] = uint32_t,
                        },
                    [18] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindSamplers,
                        ["type"] = uint32_t,
                        },
                    [19] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindUniformBuffers,
                        ["type"] = uint32_t,
                        },
                    [20] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic,
                        ["type"] = uint32_t,
                        },
                    [21] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindStorageBuffers,
                        ["type"] = uint32_t,
                        },
                    [22] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic,
                        ["type"] = uint32_t,
                        },
                    [23] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindSampledImages,
                        ["type"] = uint32_t,
                        },
                    [24] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindStorageImages,
                        ["type"] = uint32_t,
                        },
                    [25] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindInputAttachments,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceExternalFenceInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    },
                },
            ["VkDeviceQueueGlobalPriorityCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = globalPriority,
                        ["type"] = VkQueueGlobalPriorityEXT,
                        },
                    },
                },
            ["VkPhysicalDeviceSamplerYcbcrConversionFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = samplerYcbcrConversion,
                        ["comment"] = Sampler color conversion supported,
                        },
                    },
                },
            ["VkCommandBufferBeginInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkCommandBufferUsageFlags,
                        ["name"] = flags,
                        ["comment"] = Command buffer usage flags,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkCommandBufferInheritanceInfo,
                        ["comment"] = Pointer to inheritance info for secondary command buffers,
                        ["pointer"] = true,
                        ["name"] = pInheritanceInfo,
                        },
                    },
                },
            ["VkPipelineRepresentativeFragmentTestStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = representativeFragmentTestEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkCommandBufferInheritanceInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkRenderPass,
                        ["name"] = renderPass,
                        ["comment"] = Render pass for secondary command buffers,
                        },
                    [4] = {
                        ["name"] = subpass,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["type"] = VkFramebuffer,
                        ["name"] = framebuffer,
                        ["comment"] = Framebuffer for secondary command buffers,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = occlusionQueryEnable,
                        ["comment"] = Whether this secondary command buffer may be executed during an occlusion query,
                        },
                    [7] = {
                        ["type"] = VkQueryControlFlags,
                        ["name"] = queryFlags,
                        ["comment"] = Query flags used by this secondary command buffer, if executed during an occlusion query,
                        },
                    [8] = {
                        ["type"] = VkQueryPipelineStatisticFlags,
                        ["name"] = pipelineStatistics,
                        ["comment"] = Pipeline statistics that may be counted for this secondary command buffer,
                        },
                    },
                },
            ["VkIndirectCommandsLayoutCreateInfoNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = pipelineBindPoint,
                        ["type"] = VkPipelineBindPoint,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkIndirectCommandsLayoutUsageFlagsNVX,
                        },
                    [5] = {
                        ["name"] = tokenCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkIndirectCommandsLayoutTokenNVX,
                        ["name"] = pTokens,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkWriteDescriptorSetInlineUniformBlockEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = dataSize,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pData,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkLayerProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = char,
                        ["comment"] = layer name,
                        ["arrayLength"] = VK_MAX_EXTENSION_NAME_SIZE,
                        ["array"] = true,
                        ["name"] = layerName,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = specVersion,
                        ["comment"] = version of the layer specification implemented,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = implementationVersion,
                        ["comment"] = build or release version of the layer's library,
                        },
                    [4] = {
                        ["type"] = char,
                        ["comment"] = Free-form description of the layer,
                        ["arrayLength"] = VK_MAX_DESCRIPTION_SIZE,
                        ["array"] = true,
                        ["name"] = description,
                        },
                    },
                },
            ["VkQueryPoolCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkQueryPoolCreateFlags,
                        },
                    [4] = {
                        ["name"] = queryType,
                        ["type"] = VkQueryType,
                        },
                    [5] = {
                        ["name"] = queryCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["type"] = VkQueryPipelineStatisticFlags,
                        ["name"] = pipelineStatistics,
                        ["comment"] = Optional,
                        },
                    },
                },
            ["VkExternalSemaphoreProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = exportFromImportedHandleTypes,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    [4] = {
                        ["name"] = compatibleHandleTypes,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    [5] = {
                        ["name"] = externalSemaphoreFeatures,
                        ["type"] = VkExternalSemaphoreFeatureFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkBool32,
                        ["name"] = robustBufferAccess,
                        ["comment"] = out of bounds buffer accesses are well defined,
                        },
                    [2] = {
                        ["type"] = VkBool32,
                        ["name"] = fullDrawIndexUint32,
                        ["comment"] = full 32-bit range of indices for indexed draw calls,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = imageCubeArray,
                        ["comment"] = image views which are arrays of cube maps,
                        },
                    [4] = {
                        ["type"] = VkBool32,
                        ["name"] = independentBlend,
                        ["comment"] = blending operations are controlled per-attachment,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = geometryShader,
                        ["comment"] = geometry stage,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = tessellationShader,
                        ["comment"] = tessellation control and evaluation stage,
                        },
                    [7] = {
                        ["type"] = VkBool32,
                        ["name"] = sampleRateShading,
                        ["comment"] = per-sample shading and interpolation,
                        },
                    [8] = {
                        ["type"] = VkBool32,
                        ["name"] = dualSrcBlend,
                        ["comment"] = blend operations which take two sources,
                        },
                    [9] = {
                        ["type"] = VkBool32,
                        ["name"] = logicOp,
                        ["comment"] = logic operations,
                        },
                    [10] = {
                        ["type"] = VkBool32,
                        ["name"] = multiDrawIndirect,
                        ["comment"] = multi draw indirect,
                        },
                    [11] = {
                        ["type"] = VkBool32,
                        ["name"] = drawIndirectFirstInstance,
                        ["comment"] = indirect draws can use non-zero firstInstance,
                        },
                    [12] = {
                        ["type"] = VkBool32,
                        ["name"] = depthClamp,
                        ["comment"] = depth clamping,
                        },
                    [13] = {
                        ["type"] = VkBool32,
                        ["name"] = depthBiasClamp,
                        ["comment"] = depth bias clamping,
                        },
                    [14] = {
                        ["type"] = VkBool32,
                        ["name"] = fillModeNonSolid,
                        ["comment"] = point and wireframe fill modes,
                        },
                    [15] = {
                        ["type"] = VkBool32,
                        ["name"] = depthBounds,
                        ["comment"] = depth bounds test,
                        },
                    [16] = {
                        ["type"] = VkBool32,
                        ["name"] = wideLines,
                        ["comment"] = lines with width greater than 1,
                        },
                    [17] = {
                        ["type"] = VkBool32,
                        ["name"] = largePoints,
                        ["comment"] = points with size greater than 1,
                        },
                    [18] = {
                        ["type"] = VkBool32,
                        ["name"] = alphaToOne,
                        ["comment"] = the fragment alpha component can be forced to maximum representable alpha value,
                        },
                    [19] = {
                        ["type"] = VkBool32,
                        ["name"] = multiViewport,
                        ["comment"] = viewport arrays,
                        },
                    [20] = {
                        ["type"] = VkBool32,
                        ["name"] = samplerAnisotropy,
                        ["comment"] = anisotropic sampler filtering,
                        },
                    [21] = {
                        ["type"] = VkBool32,
                        ["name"] = textureCompressionETC2,
                        ["comment"] = ETC texture compression formats,
                        },
                    [22] = {
                        ["type"] = VkBool32,
                        ["name"] = textureCompressionASTC_LDR,
                        ["comment"] = ASTC LDR texture compression formats,
                        },
                    [23] = {
                        ["type"] = VkBool32,
                        ["name"] = textureCompressionBC,
                        ["comment"] = BC1-7 texture compressed formats,
                        },
                    [24] = {
                        ["type"] = VkBool32,
                        ["name"] = occlusionQueryPrecise,
                        ["comment"] = precise occlusion queries returning actual sample counts,
                        },
                    [25] = {
                        ["type"] = VkBool32,
                        ["name"] = pipelineStatisticsQuery,
                        ["comment"] = pipeline statistics query,
                        },
                    [26] = {
                        ["type"] = VkBool32,
                        ["name"] = vertexPipelineStoresAndAtomics,
                        ["comment"] = stores and atomic ops on storage buffers and images are supported in vertex, tessellation, and geometry stages,
                        },
                    [27] = {
                        ["type"] = VkBool32,
                        ["name"] = fragmentStoresAndAtomics,
                        ["comment"] = stores and atomic ops on storage buffers and images are supported in the fragment stage,
                        },
                    [28] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderTessellationAndGeometryPointSize,
                        ["comment"] = tessellation and geometry stages can export point size,
                        },
                    [29] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderImageGatherExtended,
                        ["comment"] = image gather with run-time values and independent offsets,
                        },
                    [30] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageImageExtendedFormats,
                        ["comment"] = the extended set of formats can be used for storage images,
                        },
                    [31] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageImageMultisample,
                        ["comment"] = multisample images can be used for storage images,
                        },
                    [32] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageImageReadWithoutFormat,
                        ["comment"] = read from storage image does not require format qualifier,
                        },
                    [33] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageImageWriteWithoutFormat,
                        ["comment"] = write to storage image does not require format qualifier,
                        },
                    [34] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderUniformBufferArrayDynamicIndexing,
                        ["comment"] = arrays of uniform buffers can be accessed with dynamically uniform indices,
                        },
                    [35] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderSampledImageArrayDynamicIndexing,
                        ["comment"] = arrays of sampled images can be accessed with dynamically uniform indices,
                        },
                    [36] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageBufferArrayDynamicIndexing,
                        ["comment"] = arrays of storage buffers can be accessed with dynamically uniform indices,
                        },
                    [37] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderStorageImageArrayDynamicIndexing,
                        ["comment"] = arrays of storage images can be accessed with dynamically uniform indices,
                        },
                    [38] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderClipDistance,
                        ["comment"] = clip distance in shaders,
                        },
                    [39] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderCullDistance,
                        ["comment"] = cull distance in shaders,
                        },
                    [40] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderFloat64,
                        ["comment"] = 64-bit floats (doubles) in shaders,
                        },
                    [41] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderInt64,
                        ["comment"] = 64-bit integers in shaders,
                        },
                    [42] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderInt16,
                        ["comment"] = 16-bit integers in shaders,
                        },
                    [43] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderResourceResidency,
                        ["comment"] = shader can use texture operations that return resource residency information (requires sparseNonResident support),
                        },
                    [44] = {
                        ["type"] = VkBool32,
                        ["name"] = shaderResourceMinLod,
                        ["comment"] = shader can use texture operations that specify minimum resource LOD,
                        },
                    [45] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseBinding,
                        ["comment"] = Sparse resources support: Resource memory can be managed at opaque page level rather than object level,
                        },
                    [46] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidencyBuffer,
                        ["comment"] = Sparse resources support: GPU can access partially resident buffers,
                        },
                    [47] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidencyImage2D,
                        ["comment"] = Sparse resources support: GPU can access partially resident 2D (non-MSAA non-depth/stencil) images,
                        },
                    [48] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidencyImage3D,
                        ["comment"] = Sparse resources support: GPU can access partially resident 3D images,
                        },
                    [49] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidency2Samples,
                        ["comment"] = Sparse resources support: GPU can access partially resident MSAA 2D images with 2 samples,
                        },
                    [50] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidency4Samples,
                        ["comment"] = Sparse resources support: GPU can access partially resident MSAA 2D images with 4 samples,
                        },
                    [51] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidency8Samples,
                        ["comment"] = Sparse resources support: GPU can access partially resident MSAA 2D images with 8 samples,
                        },
                    [52] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidency16Samples,
                        ["comment"] = Sparse resources support: GPU can access partially resident MSAA 2D images with 16 samples,
                        },
                    [53] = {
                        ["type"] = VkBool32,
                        ["name"] = sparseResidencyAliased,
                        ["comment"] = Sparse resources support: GPU can correctly access data aliased into multiple locations (opt-in),
                        },
                    [54] = {
                        ["type"] = VkBool32,
                        ["name"] = variableMultisampleRate,
                        ["comment"] = multisample rate must be the same for all pipelines in a subpass,
                        },
                    [55] = {
                        ["type"] = VkBool32,
                        ["name"] = inheritedQueries,
                        ["comment"] = Queries may be inherited from primary to secondary command buffers,
                        },
                    },
                },
            ["VkPhysicalDeviceImageDrmFormatModifierInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = drmFormatModifier,
                        ["type"] = uint64_t,
                        },
                    [4] = {
                        ["name"] = sharingMode,
                        ["type"] = VkSharingMode,
                        },
                    [5] = {
                        ["name"] = queueFamilyIndexCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pQueueFamilyIndices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkCmdProcessCommandsInfoNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = objectTable,
                        ["type"] = VkObjectTableNVX,
                        },
                    [4] = {
                        ["name"] = indirectCommandsLayout,
                        ["type"] = VkIndirectCommandsLayoutNVX,
                        },
                    [5] = {
                        ["name"] = indirectCommandsTokenCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkIndirectCommandsTokenNVX,
                        ["name"] = pIndirectCommandsTokens,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = maxSequencesCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = targetCommandBuffer,
                        ["type"] = VkCommandBuffer,
                        },
                    [9] = {
                        ["name"] = sequencesCountBuffer,
                        ["type"] = VkBuffer,
                        },
                    [10] = {
                        ["name"] = sequencesCountOffset,
                        ["type"] = VkDeviceSize,
                        },
                    [11] = {
                        ["name"] = sequencesIndexBuffer,
                        ["type"] = VkBuffer,
                        },
                    [12] = {
                        ["name"] = sequencesIndexOffset,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkSparseMemoryBind"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = resourceOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [2] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Specified in bytes,
                        },
                    [3] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [4] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = memoryOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [5] = {
                        ["name"] = flags,
                        ["type"] = VkSparseMemoryBindFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceMemoryProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryProperties,
                        ["type"] = VkPhysicalDeviceMemoryProperties,
                        },
                    },
                },
            ["VkPastPresentationTimingGOOGLE"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = presentID,
                        ["comment"] = Application-provided identifier, previously given to vkQueuePresentKHR,
                        },
                    [2] = {
                        ["type"] = uint64_t,
                        ["name"] = desiredPresentTime,
                        ["comment"] = Earliest time an image should have been presented, previously given to vkQueuePresentKHR,
                        },
                    [3] = {
                        ["type"] = uint64_t,
                        ["name"] = actualPresentTime,
                        ["comment"] = Time the image was actually displayed,
                        },
                    [4] = {
                        ["type"] = uint64_t,
                        ["name"] = earliestPresentTime,
                        ["comment"] = Earliest time the image could have been displayed,
                        },
                    [5] = {
                        ["type"] = uint64_t,
                        ["name"] = presentMargin,
                        ["comment"] = How early vkQueuePresentKHR was processed vs. how soon it needed to be and make earliestPresentTime,
                        },
                    },
                },
            ["VkDescriptorPoolInlineUniformBlockCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxInlineUniformBlockBindings,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDeviceEventInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceEvent,
                        ["type"] = VkDeviceEventTypeEXT,
                        },
                    },
                },
            ["VkSubpassDependency2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = srcSubpass,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = dstSubpass,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = srcStageMask,
                        ["type"] = VkPipelineStageFlags,
                        },
                    [6] = {
                        ["name"] = dstStageMask,
                        ["type"] = VkPipelineStageFlags,
                        },
                    [7] = {
                        ["name"] = srcAccessMask,
                        ["type"] = VkAccessFlags,
                        },
                    [8] = {
                        ["name"] = dstAccessMask,
                        ["type"] = VkAccessFlags,
                        },
                    [9] = {
                        ["name"] = dependencyFlags,
                        ["type"] = VkDependencyFlags,
                        },
                    [10] = {
                        ["name"] = viewOffset,
                        ["type"] = int32_t,
                        },
                    },
                },
            ["VkXYColorEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = float,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = float,
                        },
                    },
                },
            ["VkValidationFlagsEXT"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkStructureType,
                        ["name"] = sType,
                        ["comment"] = Must be VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = disabledValidationCheckCount,
                        ["comment"] = Number of validation checks to disable,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkValidationCheckEXT,
                        ["comment"] = Validation checks to disable,
                        ["pointer"] = true,
                        ["name"] = pDisabledValidationChecks,
                        },
                    },
                },
            ["VkAttachmentDescription2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkAttachmentDescriptionFlags,
                        },
                    [4] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [5] = {
                        ["name"] = samples,
                        ["type"] = VkSampleCountFlags,
                        },
                    [6] = {
                        ["type"] = VkAttachmentLoadOp,
                        ["name"] = loadOp,
                        ["comment"] = Load operation for color or depth data,
                        },
                    [7] = {
                        ["type"] = VkAttachmentStoreOp,
                        ["name"] = storeOp,
                        ["comment"] = Store operation for color or depth data,
                        },
                    [8] = {
                        ["type"] = VkAttachmentLoadOp,
                        ["name"] = stencilLoadOp,
                        ["comment"] = Load operation for stencil data,
                        },
                    [9] = {
                        ["type"] = VkAttachmentStoreOp,
                        ["name"] = stencilStoreOp,
                        ["comment"] = Store operation for stencil data,
                        },
                    [10] = {
                        ["name"] = initialLayout,
                        ["type"] = VkImageLayout,
                        },
                    [11] = {
                        ["name"] = finalLayout,
                        ["type"] = VkImageLayout,
                        },
                    },
                },
            ["VkPipelineMultisampleStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineMultisampleStateCreateFlags,
                        },
                    [4] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = rasterizationSamples,
                        ["comment"] = Number of samples used for rasterization,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = sampleShadingEnable,
                        ["comment"] = optional (GL45),
                        },
                    [6] = {
                        ["type"] = float,
                        ["name"] = minSampleShading,
                        ["comment"] = optional (GL45),
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkSampleMask,
                        ["comment"] = Array of sampleMask words,
                        ["pointer"] = true,
                        ["name"] = pSampleMask,
                        },
                    [8] = {
                        ["name"] = alphaToCoverageEnable,
                        ["type"] = VkBool32,
                        },
                    [9] = {
                        ["name"] = alphaToOneEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkBindBufferMemoryDeviceGroupInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceIndexCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pDeviceIndices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = properties,
                        ["type"] = VkPhysicalDeviceProperties,
                        },
                    },
                },
            ["VkObjectTablePushConstantEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    [3] = {
                        ["name"] = pipelineLayout,
                        ["type"] = VkPipelineLayout,
                        },
                    [4] = {
                        ["name"] = stageFlags,
                        ["type"] = VkShaderStageFlags,
                        },
                    },
                },
            ["VkMultisamplePropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxSampleLocationGridSize,
                        ["type"] = VkExtent2D,
                        },
                    },
                },
            ["VkValidationFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkStructureType,
                        ["name"] = sType,
                        ["comment"] = Must be VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = enabledValidationFeatureCount,
                        ["comment"] = Number of validation features to enable,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkValidationFeatureEnableEXT,
                        ["comment"] = Validation features to enable,
                        ["pointer"] = true,
                        ["name"] = pEnabledValidationFeatures,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = disabledValidationFeatureCount,
                        ["comment"] = Number of validation features to disable,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkValidationFeatureDisableEXT,
                        ["comment"] = Validation features to disable,
                        ["pointer"] = true,
                        ["name"] = pDisabledValidationFeatures,
                        },
                    },
                },
            ["VkImageMemoryBarrier"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = srcAccessMask,
                        ["comment"] = Memory accesses from the source of the dependency to synchronize,
                        },
                    [4] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = dstAccessMask,
                        ["comment"] = Memory accesses from the destination of the dependency to synchronize,
                        },
                    [5] = {
                        ["type"] = VkImageLayout,
                        ["name"] = oldLayout,
                        ["comment"] = Current layout of the image,
                        },
                    [6] = {
                        ["type"] = VkImageLayout,
                        ["name"] = newLayout,
                        ["comment"] = New layout to transition the image to,
                        },
                    [7] = {
                        ["type"] = uint32_t,
                        ["name"] = srcQueueFamilyIndex,
                        ["comment"] = Queue family to transition ownership from,
                        },
                    [8] = {
                        ["type"] = uint32_t,
                        ["name"] = dstQueueFamilyIndex,
                        ["comment"] = Queue family to transition ownership to,
                        },
                    [9] = {
                        ["type"] = VkImage,
                        ["name"] = image,
                        ["comment"] = Image to sync,
                        },
                    [10] = {
                        ["type"] = VkImageSubresourceRange,
                        ["name"] = subresourceRange,
                        ["comment"] = Subresource range to sync,
                        },
                    },
                },
            ["VkDisplayPresentInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkRect2D,
                        ["name"] = srcRect,
                        ["comment"] = Rectangle within the presentable image to read pixel data from when presenting to the display.,
                        },
                    [4] = {
                        ["type"] = VkRect2D,
                        ["name"] = dstRect,
                        ["comment"] = Rectangle within the current display mode's visible region to display srcRectangle in.,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = persistent,
                        ["comment"] = For smart displays, use buffered mode.  If the display properties member "persistentMode" is VK_FALSE, this member must always be VK_FALSE.,
                        },
                    },
                },
            ["VkSparseImageMemoryRequirements2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryRequirements,
                        ["type"] = VkSparseImageMemoryRequirements,
                        },
                    },
                },
            ["VkPipelineViewportWScalingStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = viewportWScalingEnable,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = viewportCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkViewportWScalingNV,
                        ["name"] = pViewportWScalings,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineDiscardRectangleStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineDiscardRectangleStateCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = discardRectangleMode,
                        ["type"] = VkDiscardRectangleModeEXT,
                        },
                    [5] = {
                        ["name"] = discardRectangleCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkRect2D,
                        ["name"] = pDiscardRectangles,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDisplaySurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDisplaySurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = VkDisplayModeKHR,
                        ["name"] = displayMode,
                        ["comment"] = The mode to use when displaying this surface,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = planeIndex,
                        ["comment"] = The plane on which this surface appears.  Must be between 0 and the value returned by vkGetPhysicalDeviceDisplayPlanePropertiesKHR() in pPropertyCount.,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = planeStackIndex,
                        ["comment"] = The z-order of the plane.,
                        },
                    [7] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = transform,
                        ["comment"] = Transform to apply to the images as part of the scanout operation,
                        },
                    [8] = {
                        ["type"] = float,
                        ["name"] = globalAlpha,
                        ["comment"] = Global alpha value.  Must be between 0 and 1, inclusive.  Ignored if alphaMode is not VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,
                        },
                    [9] = {
                        ["type"] = VkDisplayPlaneAlphaFlagsKHR,
                        ["name"] = alphaMode,
                        ["comment"] = What type of alpha blending to use.  Must be a bit from vkGetDisplayPlanePropertiesKHR::supportedAlpha.,
                        },
                    [10] = {
                        ["type"] = VkExtent2D,
                        ["name"] = imageExtent,
                        ["comment"] = size of the images to use with this surface,
                        },
                    },
                },
            ["VkPipelineColorBlendAttachmentState"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = blendEnable,
                        ["type"] = VkBool32,
                        },
                    [2] = {
                        ["name"] = srcColorBlendFactor,
                        ["type"] = VkBlendFactor,
                        },
                    [3] = {
                        ["name"] = dstColorBlendFactor,
                        ["type"] = VkBlendFactor,
                        },
                    [4] = {
                        ["name"] = colorBlendOp,
                        ["type"] = VkBlendOp,
                        },
                    [5] = {
                        ["name"] = srcAlphaBlendFactor,
                        ["type"] = VkBlendFactor,
                        },
                    [6] = {
                        ["name"] = dstAlphaBlendFactor,
                        ["type"] = VkBlendFactor,
                        },
                    [7] = {
                        ["name"] = alphaBlendOp,
                        ["type"] = VkBlendOp,
                        },
                    [8] = {
                        ["name"] = colorWriteMask,
                        ["type"] = VkColorComponentFlags,
                        },
                    },
                },
            ["VkClearDepthStencilValue"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = depth,
                        ["type"] = float,
                        },
                    [2] = {
                        ["name"] = stencil,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayPlaneCapabilitiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDisplayPlaneAlphaFlagsKHR,
                        ["name"] = supportedAlpha,
                        ["comment"] = Types of alpha blending supported, if any.,
                        },
                    [2] = {
                        ["type"] = VkOffset2D,
                        ["name"] = minSrcPosition,
                        ["comment"] = Does the plane have any position and extent restrictions?,
                        },
                    [3] = {
                        ["name"] = maxSrcPosition,
                        ["type"] = VkOffset2D,
                        },
                    [4] = {
                        ["name"] = minSrcExtent,
                        ["type"] = VkExtent2D,
                        },
                    [5] = {
                        ["name"] = maxSrcExtent,
                        ["type"] = VkExtent2D,
                        },
                    [6] = {
                        ["name"] = minDstPosition,
                        ["type"] = VkOffset2D,
                        },
                    [7] = {
                        ["name"] = maxDstPosition,
                        ["type"] = VkOffset2D,
                        },
                    [8] = {
                        ["name"] = minDstExtent,
                        ["type"] = VkExtent2D,
                        },
                    [9] = {
                        ["name"] = maxDstExtent,
                        ["type"] = VkExtent2D,
                        },
                    },
                },
            ["VkInputAttachmentAspectReference"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = subpass,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = inputAttachmentIndex,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    },
                },
            ["VkDisplayPlaneInfo2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = mode,
                        ["type"] = VkDisplayModeKHR,
                        },
                    [4] = {
                        ["name"] = planeIndex,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkImageSparseMemoryRequirementsInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    },
                },
            ["VkExternalMemoryProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = externalMemoryFeatures,
                        ["type"] = VkExternalMemoryFeatureFlags,
                        },
                    [2] = {
                        ["name"] = exportFromImportedHandleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    [3] = {
                        ["name"] = compatibleHandleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkObjectTableEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    },
                },
            ["VkPipelineRasterizationStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineRasterizationStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = depthClampEnable,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = rasterizerDiscardEnable,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["type"] = VkPolygonMode,
                        ["name"] = polygonMode,
                        ["comment"] = optional (GL45),
                        },
                    [7] = {
                        ["name"] = cullMode,
                        ["type"] = VkCullModeFlags,
                        },
                    [8] = {
                        ["name"] = frontFace,
                        ["type"] = VkFrontFace,
                        },
                    [9] = {
                        ["name"] = depthBiasEnable,
                        ["type"] = VkBool32,
                        },
                    [10] = {
                        ["name"] = depthBiasConstantFactor,
                        ["type"] = float,
                        },
                    [11] = {
                        ["name"] = depthBiasClamp,
                        ["type"] = float,
                        },
                    [12] = {
                        ["name"] = depthBiasSlopeFactor,
                        ["type"] = float,
                        },
                    [13] = {
                        ["name"] = lineWidth,
                        ["type"] = float,
                        },
                    },
                },
            ["VkDescriptorSetLayoutCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDescriptorSetLayoutCreateFlags,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = bindingCount,
                        ["comment"] = Number of bindings in the descriptor set layout,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorSetLayoutBinding,
                        ["comment"] = Array of descriptor set layout bindings,
                        ["pointer"] = true,
                        ["name"] = pBindings,
                        },
                    },
                },
            ["VkBaseInStructure"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = VkBaseInStructure,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkSamplerYcbcrConversionInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = conversion,
                        ["type"] = VkSamplerYcbcrConversion,
                        },
                    },
                },
            ["VkNativeBufferANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = handle,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = stride,
                        ["type"] = int,
                        },
                    [5] = {
                        ["name"] = format,
                        ["type"] = int,
                        },
                    [6] = {
                        ["name"] = usage,
                        ["type"] = int,
                        },
                    },
                },
            ["VkSurfaceCapabilities2EXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = minImageCount,
                        ["comment"] = Supported minimum number of images for the surface,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageCount,
                        ["comment"] = Supported maximum number of images for the surface, 0 for unlimited,
                        },
                    [5] = {
                        ["type"] = VkExtent2D,
                        ["name"] = currentExtent,
                        ["comment"] = Current image width and height for the surface, (0, 0) if undefined,
                        },
                    [6] = {
                        ["type"] = VkExtent2D,
                        ["name"] = minImageExtent,
                        ["comment"] = Supported minimum image width and height for the surface,
                        },
                    [7] = {
                        ["type"] = VkExtent2D,
                        ["name"] = maxImageExtent,
                        ["comment"] = Supported maximum image width and height for the surface,
                        },
                    [8] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageArrayLayers,
                        ["comment"] = Supported maximum number of image layers for the surface,
                        },
                    [9] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = supportedTransforms,
                        ["comment"] = 1 or more bits representing the transforms supported,
                        },
                    [10] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = currentTransform,
                        ["comment"] = The surface's current transform relative to the device's natural orientation,
                        },
                    [11] = {
                        ["type"] = VkCompositeAlphaFlagsKHR,
                        ["name"] = supportedCompositeAlpha,
                        ["comment"] = 1 or more bits representing the alpha compositing modes supported,
                        },
                    [12] = {
                        ["type"] = VkImageUsageFlags,
                        ["name"] = supportedUsageFlags,
                        ["comment"] = Supported image usage flags for the surface,
                        },
                    [13] = {
                        ["name"] = supportedSurfaceCounters,
                        ["type"] = VkSurfaceCounterFlagsEXT,
                        },
                    },
                },
            ["VkBindAccelerationStructureMemoryInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = accelerationStructure,
                        ["type"] = VkAccelerationStructureNV,
                        },
                    [4] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [5] = {
                        ["name"] = memoryOffset,
                        ["type"] = VkDeviceSize,
                        },
                    [6] = {
                        ["name"] = deviceIndexCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pDeviceIndices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDeviceGroupSwapchainCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = modes,
                        ["type"] = VkDeviceGroupPresentModeFlagsKHR,
                        },
                    },
                },
            ["VkFormatProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = formatProperties,
                        ["type"] = VkFormatProperties,
                        },
                    },
                },
            ["VkPipelineRasterizationStateRasterizationOrderAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkRasterizationOrderAMD,
                        ["name"] = rasterizationOrder,
                        ["comment"] = Rasterization order to use for the pipeline,
                        },
                    },
                },
            ["VkShaderStatisticsInfoAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = shaderStageMask,
                        ["type"] = VkShaderStageFlags,
                        },
                    [2] = {
                        ["name"] = resourceUsage,
                        ["type"] = VkShaderResourceUsageAMD,
                        },
                    [3] = {
                        ["name"] = numPhysicalVgprs,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = numPhysicalSgprs,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = numAvailableVgprs,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = numAvailableSgprs,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["arrayLength"] = 3,
                        ["type"] = uint32_t,
                        ["name"] = computeWorkGroupSize,
                        ["array"] = true,
                        },
                    },
                },
            ["VkStreamDescriptorSurfaceCreateInfoGGP"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkStreamDescriptorSurfaceCreateFlagsGGP,
                        },
                    [4] = {
                        ["name"] = streamDescriptor,
                        ["type"] = GgpStreamDescriptor,
                        },
                    },
                },
            ["VkDescriptorPoolCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDescriptorPoolCreateFlags,
                        },
                    [4] = {
                        ["name"] = maxSets,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = poolSizeCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorPoolSize,
                        ["name"] = pPoolSizes,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineLayoutCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineLayoutCreateFlags,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = setLayoutCount,
                        ["comment"] = Number of descriptor sets interfaced by the pipeline,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorSetLayout,
                        ["comment"] = Array of setCount number of descriptor set layout objects defining the layout of the,
                        ["pointer"] = true,
                        ["name"] = pSetLayouts,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = pushConstantRangeCount,
                        ["comment"] = Number of push-constant ranges used by the pipeline,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkPushConstantRange,
                        ["comment"] = Array of pushConstantRangeCount number of ranges used by various shader stages,
                        ["pointer"] = true,
                        ["name"] = pPushConstantRanges,
                        },
                    },
                },
            ["VkSamplerYcbcrConversionImageFormatProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = combinedImageSamplerDescriptorCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkSurfaceFormat2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = surfaceFormat,
                        ["type"] = VkSurfaceFormatKHR,
                        },
                    },
                },
            ["VkBindSparseInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = waitSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkSemaphore,
                        ["name"] = pWaitSemaphores,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = bufferBindCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkSparseBufferMemoryBindInfo,
                        ["name"] = pBufferBinds,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = imageOpaqueBindCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkSparseImageOpaqueMemoryBindInfo,
                        ["name"] = pImageOpaqueBinds,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["name"] = imageBindCount,
                        ["type"] = uint32_t,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkSparseImageMemoryBindInfo,
                        ["name"] = pImageBinds,
                        ["pointer"] = true,
                        },
                    [11] = {
                        ["name"] = signalSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [12] = {
                        ["const"] = true,
                        ["type"] = VkSemaphore,
                        ["name"] = pSignalSemaphores,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkExtensionProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = char,
                        ["comment"] = extension name,
                        ["arrayLength"] = VK_MAX_EXTENSION_NAME_SIZE,
                        ["array"] = true,
                        ["name"] = extensionName,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = specVersion,
                        ["comment"] = version of the extension specification implemented,
                        },
                    },
                },
            ["VkImportMemoryWin32HandleInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                        },
                    [4] = {
                        ["name"] = handle,
                        ["type"] = HANDLE,
                        },
                    },
                },
            ["VkComponentMapping"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = r,
                        ["type"] = VkComponentSwizzle,
                        },
                    [2] = {
                        ["name"] = g,
                        ["type"] = VkComponentSwizzle,
                        },
                    [3] = {
                        ["name"] = b,
                        ["type"] = VkComponentSwizzle,
                        },
                    [4] = {
                        ["name"] = a,
                        ["type"] = VkComponentSwizzle,
                        },
                    },
                },
            ["VkBindImageMemorySwapchainInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = swapchain,
                        ["type"] = VkSwapchainKHR,
                        },
                    [4] = {
                        ["name"] = imageIndex,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkCopyDescriptorSet"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDescriptorSet,
                        ["name"] = srcSet,
                        ["comment"] = Source descriptor set,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = srcBinding,
                        ["comment"] = Binding within the source descriptor set to copy from,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = srcArrayElement,
                        ["comment"] = Array element within the source binding to copy from,
                        },
                    [6] = {
                        ["type"] = VkDescriptorSet,
                        ["name"] = dstSet,
                        ["comment"] = Destination descriptor set,
                        },
                    [7] = {
                        ["type"] = uint32_t,
                        ["name"] = dstBinding,
                        ["comment"] = Binding within the destination descriptor set to copy to,
                        },
                    [8] = {
                        ["type"] = uint32_t,
                        ["name"] = dstArrayElement,
                        ["comment"] = Array element within the destination binding to copy to,
                        },
                    [9] = {
                        ["type"] = uint32_t,
                        ["name"] = descriptorCount,
                        ["comment"] = Number of descriptors to write (determines the size of the array pointed by pDescriptors),
                        },
                    },
                },
            ["VkApplicationInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pApplicationName,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = applicationVersion,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pEngineName,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = engineVersion,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = apiVersion,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPresentFrameTokenGGP"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = frameToken,
                        ["type"] = GgpFrameToken,
                        },
                    },
                },
            ["VkHeadlessSurfaceCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkHeadlessSurfaceCreateFlagsEXT,
                        },
                    },
                },
            ["VkDrawMeshTasksIndirectCommandNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = taskCount,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = firstTask,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkSurfaceCapabilitiesFullScreenExclusiveEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fullScreenExclusiveSupported,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceShaderCorePropertiesAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["pointer"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["comment"] = Pointer to next structure,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = shaderEngineCount,
                        ["comment"] = number of shader engines,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = shaderArraysPerEngineCount,
                        ["comment"] = number of shader arrays,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = computeUnitsPerShaderArray,
                        ["comment"] = number of CUs per shader array,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = simdPerComputeUnit,
                        ["comment"] = number of SIMDs per compute unit,
                        },
                    [7] = {
                        ["type"] = uint32_t,
                        ["name"] = wavefrontsPerSimd,
                        ["comment"] = number of wavefront slots in each SIMD,
                        },
                    [8] = {
                        ["type"] = uint32_t,
                        ["name"] = wavefrontSize,
                        ["comment"] = number of threads per wavefront,
                        },
                    [9] = {
                        ["type"] = uint32_t,
                        ["name"] = sgprsPerSimd,
                        ["comment"] = number of physical SGPRs per SIMD,
                        },
                    [10] = {
                        ["type"] = uint32_t,
                        ["name"] = minSgprAllocation,
                        ["comment"] = minimum number of SGPRs that can be allocated by a wave,
                        },
                    [11] = {
                        ["type"] = uint32_t,
                        ["name"] = maxSgprAllocation,
                        ["comment"] = number of available SGPRs,
                        },
                    [12] = {
                        ["type"] = uint32_t,
                        ["name"] = sgprAllocationGranularity,
                        ["comment"] = SGPRs are allocated in groups of this size,
                        },
                    [13] = {
                        ["type"] = uint32_t,
                        ["name"] = vgprsPerSimd,
                        ["comment"] = number of physical VGPRs per SIMD,
                        },
                    [14] = {
                        ["type"] = uint32_t,
                        ["name"] = minVgprAllocation,
                        ["comment"] = minimum number of VGPRs that can be allocated by a wave,
                        },
                    [15] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVgprAllocation,
                        ["comment"] = number of available VGPRs,
                        },
                    [16] = {
                        ["type"] = uint32_t,
                        ["name"] = vgprAllocationGranularity,
                        ["comment"] = VGPRs are allocated in groups of this size,
                        },
                    },
                },
            ["VkSurfaceFullScreenExclusiveWin32InfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = hmonitor,
                        ["type"] = HMONITOR,
                        },
                    },
                },
            ["VkSurfaceFullScreenExclusiveInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fullScreenExclusive,
                        ["type"] = VkFullScreenExclusiveEXT,
                        },
                    },
                },
            ["VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxVariableDescriptorCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkMemoryDedicatedRequirements"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = prefersDedicatedAllocation,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = requiresDedicatedAllocation,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPipelineCreationFeedbackEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineCreationFeedbackFlagsEXT,
                        },
                    [2] = {
                        ["name"] = duration,
                        ["type"] = uint64_t,
                        },
                    },
                },
            ["VkExportMemoryAllocateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkImageFormatProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = imageFormatProperties,
                        ["type"] = VkImageFormatProperties,
                        },
                    },
                },
            ["VkImageViewHandleInfoNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = imageView,
                        ["type"] = VkImageView,
                        },
                    [4] = {
                        ["name"] = descriptorType,
                        ["type"] = VkDescriptorType,
                        },
                    [5] = {
                        ["name"] = sampler,
                        ["type"] = VkSampler,
                        },
                    },
                },
            ["VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = advancedBlendCoherentOperations,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceYcbcrImageArraysFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = ycbcrImageArrays,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkGeometryNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = geometryType,
                        ["type"] = VkGeometryTypeNV,
                        },
                    [4] = {
                        ["name"] = geometry,
                        ["type"] = VkGeometryDataNV,
                        },
                    [5] = {
                        ["name"] = flags,
                        ["type"] = VkGeometryFlagsNV,
                        },
                    },
                },
            ["VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = perViewPositionAllComponents,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkSurfaceFormatKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkFormat,
                        ["name"] = format,
                        ["comment"] = Supported pair of rendering format,
                        },
                    [2] = {
                        ["type"] = VkColorSpaceKHR,
                        ["name"] = colorSpace,
                        ["comment"] = and color space for the surface,
                        },
                    },
                },
            ["VkPhysicalDeviceFeatures2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = features,
                        ["type"] = VkPhysicalDeviceFeatures,
                        },
                    },
                },
            ["VkRenderPassMultiviewCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = subpassCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pViewMasks,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = dependencyCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = int32_t,
                        ["name"] = pViewOffsets,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = correlationMaskCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pCorrelationMasks,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkClearRect"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = rect,
                        ["type"] = VkRect2D,
                        },
                    [2] = {
                        ["name"] = baseArrayLayer,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = layerCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceCooperativeMatrixPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = cooperativeMatrixSupportedStages,
                        ["type"] = VkShaderStageFlags,
                        },
                    },
                },
            ["VkDebugMarkerMarkerInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Name of the debug marker,
                        ["pointer"] = true,
                        ["name"] = pMarkerName,
                        },
                    [4] = {
                        ["type"] = float,
                        ["comment"] = Optional color for debug marker,
                        ["arrayLength"] = 4,
                        ["array"] = true,
                        ["name"] = color,
                        },
                    },
                },
            ["VkPhysicalDevicePushDescriptorPropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxPushDescriptors,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceFloatControlsPropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = separateDenormSettings,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = separateRoundingModeSettings,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = shaderSignedZeroInfNanPreserveFloat16,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = shaderSignedZeroInfNanPreserveFloat32,
                        ["type"] = VkBool32,
                        },
                    [7] = {
                        ["name"] = shaderSignedZeroInfNanPreserveFloat64,
                        ["type"] = VkBool32,
                        },
                    [8] = {
                        ["name"] = shaderDenormPreserveFloat16,
                        ["type"] = VkBool32,
                        },
                    [9] = {
                        ["name"] = shaderDenormPreserveFloat32,
                        ["type"] = VkBool32,
                        },
                    [10] = {
                        ["name"] = shaderDenormPreserveFloat64,
                        ["type"] = VkBool32,
                        },
                    [11] = {
                        ["name"] = shaderDenormFlushToZeroFloat16,
                        ["type"] = VkBool32,
                        },
                    [12] = {
                        ["name"] = shaderDenormFlushToZeroFloat32,
                        ["type"] = VkBool32,
                        },
                    [13] = {
                        ["name"] = shaderDenormFlushToZeroFloat64,
                        ["type"] = VkBool32,
                        },
                    [14] = {
                        ["name"] = shaderRoundingModeRTEFloat16,
                        ["type"] = VkBool32,
                        },
                    [15] = {
                        ["name"] = shaderRoundingModeRTEFloat32,
                        ["type"] = VkBool32,
                        },
                    [16] = {
                        ["name"] = shaderRoundingModeRTEFloat64,
                        ["type"] = VkBool32,
                        },
                    [17] = {
                        ["name"] = shaderRoundingModeRTZFloat16,
                        ["type"] = VkBool32,
                        },
                    [18] = {
                        ["name"] = shaderRoundingModeRTZFloat32,
                        ["type"] = VkBool32,
                        },
                    [19] = {
                        ["name"] = shaderRoundingModeRTZFloat64,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceImageViewImageFormatInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = imageViewType,
                        ["type"] = VkImageViewType,
                        },
                    },
                },
            ["VkSubpassBeginInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = contents,
                        ["type"] = VkSubpassContents,
                        },
                    },
                },
            ["VkBufferDeviceAddressCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceAddress,
                        ["type"] = VkDeviceAddress,
                        },
                    },
                },
            ["VkBufferDeviceAddressInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    },
                },
            ["VkRect2D"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = offset,
                        ["type"] = VkOffset2D,
                        },
                    [2] = {
                        ["name"] = extent,
                        ["type"] = VkExtent2D,
                        },
                    },
                },
            ["VkImageResolve"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = srcSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [2] = {
                        ["name"] = srcOffset,
                        ["type"] = VkOffset3D,
                        },
                    [3] = {
                        ["name"] = dstSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [4] = {
                        ["name"] = dstOffset,
                        ["type"] = VkOffset3D,
                        },
                    [5] = {
                        ["name"] = extent,
                        ["type"] = VkExtent3D,
                        },
                    },
                },
            ["VkImageBlit"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = srcSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [2] = {
                        ["type"] = VkOffset3D,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = srcOffsets,
                        },
                    [3] = {
                        ["name"] = dstSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [4] = {
                        ["type"] = VkOffset3D,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = dstOffsets,
                        },
                    },
                },
            ["VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = bufferDeviceAddress,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = bufferDeviceAddressCaptureReplay,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = bufferDeviceAddressMultiDevice,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkExternalMemoryImageCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkShaderResourceUsageAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = numUsedVgprs,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = numUsedSgprs,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = ldsSizePerLocalWorkGroup,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = ldsUsageSizeInBytes,
                        ["type"] = size_t,
                        },
                    [5] = {
                        ["name"] = scratchMemUsageInBytes,
                        ["type"] = size_t,
                        },
                    },
                },
            ["VkDescriptorImageInfo"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkSampler,
                        ["name"] = sampler,
                        ["comment"] = Sampler to write to the descriptor in case it is a SAMPLER or COMBINED_IMAGE_SAMPLER descriptor. Ignored otherwise.,
                        },
                    [2] = {
                        ["type"] = VkImageView,
                        ["name"] = imageView,
                        ["comment"] = Image view to write to the descriptor in case it is a SAMPLED_IMAGE, STORAGE_IMAGE, COMBINED_IMAGE_SAMPLER, or INPUT_ATTACHMENT descriptor. Ignored otherwise.,
                        },
                    [3] = {
                        ["type"] = VkImageLayout,
                        ["name"] = imageLayout,
                        ["comment"] = Layout the image is expected to be in when accessed using this descriptor (only used if imageView is not VK_NULL_HANDLE).,
                        },
                    },
                },
            ["VkDescriptorSetAllocateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = descriptorPool,
                        ["type"] = VkDescriptorPool,
                        },
                    [4] = {
                        ["name"] = descriptorSetCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorSetLayout,
                        ["name"] = pSetLayouts,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkAndroidHardwareBufferPropertiesANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = allocationSize,
                        ["type"] = VkDeviceSize,
                        },
                    [4] = {
                        ["name"] = memoryTypeBits,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkExportSemaphoreCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    },
                },
            ["VkImageFormatProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkExtent3D,
                        ["name"] = maxExtent,
                        ["comment"] = max image dimensions for this resource type,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = maxMipLevels,
                        ["comment"] = max number of mipmap levels for this resource type,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = maxArrayLayers,
                        ["comment"] = max array size for this resource type,
                        },
                    [4] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = sampleCounts,
                        ["comment"] = supported sample counts for this resource type,
                        },
                    [5] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = maxResourceSize,
                        ["comment"] = max size (in bytes) of this resource type,
                        },
                    },
                },
            ["VkPhysicalDeviceMemoryPriorityFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryPriority,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceMemoryBudgetPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["arrayLength"] = VK_MAX_MEMORY_HEAPS,
                        ["type"] = VkDeviceSize,
                        ["name"] = heapBudget,
                        ["array"] = true,
                        },
                    [4] = {
                        ["arrayLength"] = VK_MAX_MEMORY_HEAPS,
                        ["type"] = VkDeviceSize,
                        ["name"] = heapUsage,
                        ["array"] = true,
                        },
                    },
                },
            ["VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = descriptorSetCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pDescriptorCounts,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceExternalBufferInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkBufferCreateFlags,
                        },
                    [4] = {
                        ["name"] = usage,
                        ["type"] = VkBufferUsageFlags,
                        },
                    [5] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkImageCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkImageCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Image creation flags,
                        },
                    [4] = {
                        ["name"] = imageType,
                        ["type"] = VkImageType,
                        },
                    [5] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [6] = {
                        ["name"] = extent,
                        ["type"] = VkExtent3D,
                        },
                    [7] = {
                        ["name"] = mipLevels,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = arrayLayers,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["name"] = samples,
                        ["type"] = VkSampleCountFlags,
                        },
                    [10] = {
                        ["name"] = tiling,
                        ["type"] = VkImageTiling,
                        },
                    [11] = {
                        ["type"] = VkImageUsageFlags,
                        ["name"] = usage,
                        ["comment"] = Image usage flags,
                        },
                    [12] = {
                        ["type"] = VkSharingMode,
                        ["name"] = sharingMode,
                        ["comment"] = Cross-queue-family sharing mode,
                        },
                    [13] = {
                        ["type"] = uint32_t,
                        ["name"] = queueFamilyIndexCount,
                        ["comment"] = Number of queue families to share across,
                        },
                    [14] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["comment"] = Array of queue family indices to share across,
                        ["pointer"] = true,
                        ["name"] = pQueueFamilyIndices,
                        },
                    [15] = {
                        ["type"] = VkImageLayout,
                        ["name"] = initialLayout,
                        ["comment"] = Initial image layout for all subresources,
                        },
                    },
                },
            ["VkSurfaceProtectedCapabilitiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = supportsProtected,
                        ["comment"] = Represents if surface can be protected,
                        },
                    },
                },
            ["VkXcbSurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkXcbSurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = xcb_connection_t,
                        ["name"] = connection,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = window,
                        ["type"] = xcb_window_t,
                        },
                    },
                },
            ["VkDeviceGroupCommandBufferBeginInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceMask,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayPowerInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = powerState,
                        ["type"] = VkDisplayPowerStateEXT,
                        },
                    },
                },
            ["VkPipelineVertexInputStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineVertexInputStateCreateFlags,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = vertexBindingDescriptionCount,
                        ["comment"] = number of bindings,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkVertexInputBindingDescription,
                        ["name"] = pVertexBindingDescriptions,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = vertexAttributeDescriptionCount,
                        ["comment"] = number of attributes,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkVertexInputAttributeDescription,
                        ["name"] = pVertexAttributeDescriptions,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkAccelerationStructureInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = type,
                        ["type"] = VkAccelerationStructureTypeNV,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkBuildAccelerationStructureFlagsNV,
                        },
                    [5] = {
                        ["name"] = instanceCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = geometryCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkGeometryNV,
                        ["name"] = pGeometries,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceSampleLocationsPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = sampleLocationSampleCounts,
                        ["type"] = VkSampleCountFlags,
                        },
                    [4] = {
                        ["name"] = maxSampleLocationGridSize,
                        ["type"] = VkExtent2D,
                        },
                    [5] = {
                        ["arrayLength"] = 2,
                        ["type"] = float,
                        ["name"] = sampleLocationCoordinateRange,
                        ["array"] = true,
                        },
                    [6] = {
                        ["name"] = sampleLocationSubPixelBits,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = variableSampleLocations,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkExportMemoryWin32HandleInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = SECURITY_ATTRIBUTES,
                        ["name"] = pAttributes,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = dwAccess,
                        ["type"] = DWORD,
                        },
                    },
                },
            ["VkPhysicalDeviceFragmentDensityMapPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = minFragmentDensityTexelSize,
                        ["type"] = VkExtent2D,
                        },
                    [4] = {
                        ["name"] = maxFragmentDensityTexelSize,
                        ["type"] = VkExtent2D,
                        },
                    [5] = {
                        ["name"] = fragmentDensityInvocations,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkMemoryHeap"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Available memory in the heap,
                        },
                    [2] = {
                        ["type"] = VkMemoryHeapFlags,
                        ["name"] = flags,
                        ["comment"] = Flags for the heap,
                        },
                    },
                },
            ["VkSurfaceCapabilitiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = minImageCount,
                        ["comment"] = Supported minimum number of images for the surface,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageCount,
                        ["comment"] = Supported maximum number of images for the surface, 0 for unlimited,
                        },
                    [3] = {
                        ["type"] = VkExtent2D,
                        ["name"] = currentExtent,
                        ["comment"] = Current image width and height for the surface, (0, 0) if undefined,
                        },
                    [4] = {
                        ["type"] = VkExtent2D,
                        ["name"] = minImageExtent,
                        ["comment"] = Supported minimum image width and height for the surface,
                        },
                    [5] = {
                        ["type"] = VkExtent2D,
                        ["name"] = maxImageExtent,
                        ["comment"] = Supported maximum image width and height for the surface,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageArrayLayers,
                        ["comment"] = Supported maximum number of image layers for the surface,
                        },
                    [7] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = supportedTransforms,
                        ["comment"] = 1 or more bits representing the transforms supported,
                        },
                    [8] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = currentTransform,
                        ["comment"] = The surface's current transform relative to the device's natural orientation,
                        },
                    [9] = {
                        ["type"] = VkCompositeAlphaFlagsKHR,
                        ["name"] = supportedCompositeAlpha,
                        ["comment"] = 1 or more bits representing the alpha compositing modes supported,
                        },
                    [10] = {
                        ["type"] = VkImageUsageFlags,
                        ["name"] = supportedUsageFlags,
                        ["comment"] = Supported image usage flags for the surface,
                        },
                    },
                },
            ["VkPhysicalDeviceFragmentDensityMapFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fragmentDensityMap,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = fragmentDensityMapDynamic,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = fragmentDensityMapNonSubsampledImages,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = filterMinmaxSingleComponentFormats,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = filterMinmaxImageComponentMapping,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDescriptorPoolSize"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkDescriptorType,
                        },
                    [2] = {
                        ["name"] = descriptorCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDeviceMemoryOverallocationCreateInfoAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = overallocationBehavior,
                        ["type"] = VkMemoryOverallocationBehaviorAMD,
                        },
                    },
                },
            ["VkPhysicalDeviceMeshShaderPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxDrawMeshTasksCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxTaskWorkGroupInvocations,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["arrayLength"] = 3,
                        ["type"] = uint32_t,
                        ["name"] = maxTaskWorkGroupSize,
                        ["array"] = true,
                        },
                    [6] = {
                        ["name"] = maxTaskTotalMemorySize,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = maxTaskOutputCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = maxMeshWorkGroupInvocations,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["arrayLength"] = 3,
                        ["type"] = uint32_t,
                        ["name"] = maxMeshWorkGroupSize,
                        ["array"] = true,
                        },
                    [10] = {
                        ["name"] = maxMeshTotalMemorySize,
                        ["type"] = uint32_t,
                        },
                    [11] = {
                        ["name"] = maxMeshOutputVertices,
                        ["type"] = uint32_t,
                        },
                    [12] = {
                        ["name"] = maxMeshOutputPrimitives,
                        ["type"] = uint32_t,
                        },
                    [13] = {
                        ["name"] = maxMeshMultiviewViewCount,
                        ["type"] = uint32_t,
                        },
                    [14] = {
                        ["name"] = meshOutputPerVertexGranularity,
                        ["type"] = uint32_t,
                        },
                    [15] = {
                        ["name"] = meshOutputPerPrimitiveGranularity,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDeviceGeneratedCommandsLimitsNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxIndirectCommandsLayoutTokenCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxObjectEntryCounts,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = minSequenceCountBufferOffsetAlignment,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = minSequenceIndexBufferOffsetAlignment,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = minCommandsTokenBufferOffsetAlignment,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDebugMarkerObjectTagInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDebugReportObjectTypeEXT,
                        ["name"] = objectType,
                        ["comment"] = The type of the object,
                        },
                    [4] = {
                        ["type"] = uint64_t,
                        ["name"] = object,
                        ["comment"] = The handle of the object, cast to uint64_t,
                        },
                    [5] = {
                        ["type"] = uint64_t,
                        ["name"] = tagName,
                        ["comment"] = The name of the tag to set on the object,
                        },
                    [6] = {
                        ["type"] = size_t,
                        ["name"] = tagSize,
                        ["comment"] = The length in bytes of the tag data,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["comment"] = Tag data to attach to the object,
                        ["pointer"] = true,
                        ["name"] = pTag,
                        },
                    },
                },
            ["VkSubresourceLayout"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Specified in bytes,
                        },
                    [2] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Specified in bytes,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = rowPitch,
                        ["comment"] = Specified in bytes,
                        },
                    [4] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = arrayPitch,
                        ["comment"] = Specified in bytes,
                        },
                    [5] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = depthPitch,
                        ["comment"] = Specified in bytes,
                        },
                    },
                },
            ["VkCommandBufferInheritanceConditionalRenderingInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = conditionalRenderingEnable,
                        ["comment"] = Whether this secondary command buffer may be executed during an active conditional rendering,
                        },
                    },
                },
            ["VkImageStencilUsageCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = stencilUsage,
                        ["type"] = VkImageUsageFlags,
                        },
                    },
                },
            ["VkAccelerationStructureCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = compactedSize,
                        ["type"] = VkDeviceSize,
                        },
                    [4] = {
                        ["name"] = info,
                        ["type"] = VkAccelerationStructureInfoNV,
                        },
                    },
                },
            ["VkFormatProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkFormatFeatureFlags,
                        ["name"] = linearTilingFeatures,
                        ["comment"] = Format features in case of linear tiling,
                        },
                    [2] = {
                        ["type"] = VkFormatFeatureFlags,
                        ["name"] = optimalTilingFeatures,
                        ["comment"] = Format features in case of optimal tiling,
                        },
                    [3] = {
                        ["type"] = VkFormatFeatureFlags,
                        ["name"] = bufferFeatures,
                        ["comment"] = Format features supported by buffers,
                        },
                    },
                },
            ["VkSubpassDependency"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = srcSubpass,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = dstSubpass,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = srcStageMask,
                        ["type"] = VkPipelineStageFlags,
                        },
                    [4] = {
                        ["name"] = dstStageMask,
                        ["type"] = VkPipelineStageFlags,
                        },
                    [5] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = srcAccessMask,
                        ["comment"] = Memory accesses from the source of the dependency to synchronize,
                        },
                    [6] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = dstAccessMask,
                        ["comment"] = Memory accesses from the destination of the dependency to synchronize,
                        },
                    [7] = {
                        ["name"] = dependencyFlags,
                        ["type"] = VkDependencyFlags,
                        },
                    },
                },
            ["VkDebugUtilsLabelEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pLabelName,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["arrayLength"] = 4,
                        ["type"] = float,
                        ["name"] = color,
                        ["array"] = true,
                        },
                    },
                },
            ["VkImageDrmFormatModifierExplicitCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = drmFormatModifier,
                        ["type"] = uint64_t,
                        },
                    [4] = {
                        ["name"] = drmFormatModifierPlaneCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkSubresourceLayout,
                        ["name"] = pPlaneLayouts,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceRayTracingPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shaderGroupHandleSize,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxRecursionDepth,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = maxShaderGroupStride,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = shaderGroupBaseAlignment,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = maxGeometryCount,
                        ["type"] = uint64_t,
                        },
                    [8] = {
                        ["name"] = maxInstanceCount,
                        ["type"] = uint64_t,
                        },
                    [9] = {
                        ["name"] = maxTriangleCount,
                        ["type"] = uint64_t,
                        },
                    [10] = {
                        ["name"] = maxDescriptorSetAccelerationStructures,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDrmFormatModifierPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = drmFormatModifier,
                        ["type"] = uint64_t,
                        },
                    [2] = {
                        ["name"] = drmFormatModifierPlaneCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = drmFormatModifierTilingFeatures,
                        ["type"] = VkFormatFeatureFlags,
                        },
                    },
                },
            ["VkSubpassEndInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDrmFormatModifierPropertiesListEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = drmFormatModifierCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["type"] = VkDrmFormatModifierPropertiesEXT,
                        ["name"] = pDrmFormatModifierProperties,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkImageDrmFormatModifierListCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = drmFormatModifierCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pDrmFormatModifiers,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkAccelerationStructureMemoryRequirementsInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = type,
                        ["type"] = VkAccelerationStructureMemoryRequirementsTypeNV,
                        },
                    [4] = {
                        ["name"] = accelerationStructure,
                        ["type"] = VkAccelerationStructureNV,
                        },
                    },
                },
            ["VkRefreshCycleDurationGOOGLE"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint64_t,
                        ["name"] = refreshDuration,
                        ["comment"] = Number of nanoseconds from the start of one refresh cycle to the next,
                        },
                    },
                },
            ["VkWriteDescriptorSetAccelerationStructureNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = accelerationStructureCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkAccelerationStructureNV,
                        ["name"] = pAccelerationStructures,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkImageDrmFormatModifierPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = drmFormatModifier,
                        ["type"] = uint64_t,
                        },
                    },
                },
            ["VkDeviceQueueInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDeviceQueueCreateFlags,
                        },
                    [4] = {
                        ["name"] = queueFamilyIndex,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = queueIndex,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkCooperativeMatrixPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = MSize,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = NSize,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = KSize,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = AType,
                        ["type"] = VkComponentTypeNV,
                        },
                    [7] = {
                        ["name"] = BType,
                        ["type"] = VkComponentTypeNV,
                        },
                    [8] = {
                        ["name"] = CType,
                        ["type"] = VkComponentTypeNV,
                        },
                    [9] = {
                        ["name"] = DType,
                        ["type"] = VkComponentTypeNV,
                        },
                    [10] = {
                        ["name"] = scope,
                        ["type"] = VkScopeNV,
                        },
                    },
                },
            ["VkBufferMemoryBarrier"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = srcAccessMask,
                        ["comment"] = Memory accesses from the source of the dependency to synchronize,
                        },
                    [4] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = dstAccessMask,
                        ["comment"] = Memory accesses from the destination of the dependency to synchronize,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = srcQueueFamilyIndex,
                        ["comment"] = Queue family to transition ownership from,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = dstQueueFamilyIndex,
                        ["comment"] = Queue family to transition ownership to,
                        },
                    [7] = {
                        ["type"] = VkBuffer,
                        ["name"] = buffer,
                        ["comment"] = Buffer to sync,
                        },
                    [8] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Offset within the buffer to sync,
                        },
                    [9] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Amount of bytes to sync,
                        },
                    },
                },
            ["VkExternalFormatANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = externalFormat,
                        ["type"] = uint64_t,
                        },
                    },
                },
            ["VkRenderPassCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkRenderPassCreateFlags,
                        },
                    [4] = {
                        ["name"] = attachmentCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentDescription,
                        ["name"] = pAttachments,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = subpassCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkSubpassDescription,
                        ["name"] = pSubpasses,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["name"] = dependencyCount,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkSubpassDependency,
                        ["name"] = pDependencies,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkMemoryBarrier"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = srcAccessMask,
                        ["comment"] = Memory accesses from the source of the dependency to synchronize,
                        },
                    [4] = {
                        ["type"] = VkAccessFlags,
                        ["name"] = dstAccessMask,
                        ["comment"] = Memory accesses from the destination of the dependency to synchronize,
                        },
                    },
                },
            ["VkGeometryAABBNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = aabbData,
                        ["type"] = VkBuffer,
                        },
                    [4] = {
                        ["name"] = numAABBs,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = stride,
                        ["comment"] = Stride in bytes between AABBs,
                        },
                    [6] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Offset in bytes of the first AABB in aabbData,
                        },
                    },
                },
            ["VkAllocationCallbacks"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    [2] = {
                        ["name"] = pfnAllocation,
                        ["type"] = PFN_vkAllocationFunction,
                        },
                    [3] = {
                        ["name"] = pfnReallocation,
                        ["type"] = PFN_vkReallocationFunction,
                        },
                    [4] = {
                        ["name"] = pfnFree,
                        ["type"] = PFN_vkFreeFunction,
                        },
                    [5] = {
                        ["name"] = pfnInternalAllocation,
                        ["type"] = PFN_vkInternalAllocationNotification,
                        },
                    [6] = {
                        ["name"] = pfnInternalFree,
                        ["type"] = PFN_vkInternalFreeNotification,
                        },
                    },
                },
            ["VkRayTracingShaderGroupCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = type,
                        ["type"] = VkRayTracingShaderGroupTypeNV,
                        },
                    [4] = {
                        ["name"] = generalShader,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = closestHitShader,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = anyHitShader,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = intersectionShader,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkRenderPassFragmentDensityMapCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fragmentDensityMapAttachment,
                        ["type"] = VkAttachmentReference,
                        },
                    },
                },
            ["VkDeviceGroupDeviceCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = physicalDeviceCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkPhysicalDevice,
                        ["name"] = pPhysicalDevices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = sampleOrderType,
                        ["type"] = VkCoarseSampleOrderTypeNV,
                        },
                    [4] = {
                        ["name"] = customSampleOrderCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkCoarseSampleOrderCustomNV,
                        ["name"] = pCustomSampleOrders,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fragmentShaderBarycentric,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceShadingRateImagePropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shadingRateTexelSize,
                        ["type"] = VkExtent2D,
                        },
                    [4] = {
                        ["name"] = shadingRatePaletteSize,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = shadingRateMaxCoarseSamples,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceShadingRateImageFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shadingRateImage,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = shadingRateCoarseSampleOrder,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDescriptorUpdateTemplateEntry"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = dstBinding,
                        ["comment"] = Binding within the destination descriptor set to write,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = dstArrayElement,
                        ["comment"] = Array element within the destination binding to write,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = descriptorCount,
                        ["comment"] = Number of descriptors to write,
                        },
                    [4] = {
                        ["type"] = VkDescriptorType,
                        ["name"] = descriptorType,
                        ["comment"] = Descriptor type to write,
                        },
                    [5] = {
                        ["type"] = size_t,
                        ["name"] = offset,
                        ["comment"] = Offset into pData where the descriptors to update are stored,
                        },
                    [6] = {
                        ["type"] = size_t,
                        ["name"] = stride,
                        ["comment"] = Stride between two descriptors in pData when writing more than one descriptor,
                        },
                    },
                },
            ["VkPhysicalDeviceShaderImageFootprintFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = imageFootprint,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkSubpassSampleLocationsEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = subpassIndex,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = sampleLocationsInfo,
                        ["type"] = VkSampleLocationsInfoEXT,
                        },
                    },
                },
            ["VkPipelineRasterizationConservativeStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineRasterizationConservativeStateCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = conservativeRasterizationMode,
                        ["type"] = VkConservativeRasterizationModeEXT,
                        },
                    [5] = {
                        ["name"] = extraPrimitiveOverestimationSize,
                        ["type"] = float,
                        },
                    },
                },
            ["VkPipelineViewportShadingRateImageStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shadingRateImageEnable,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = viewportCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkShadingRatePaletteNV,
                        ["name"] = pShadingRatePalettes,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkValidationCacheCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkValidationCacheCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = initialDataSize,
                        ["type"] = size_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pInitialData,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = dedicatedAllocationImageAliasing,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkCoarseSampleOrderCustomNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = shadingRate,
                        ["type"] = VkShadingRatePaletteEntryNV,
                        },
                    [2] = {
                        ["name"] = sampleCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = sampleLocationCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkCoarseSampleLocationNV,
                        ["name"] = pSampleLocations,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceComputeShaderDerivativesFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = computeDerivativeGroupQuads,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = computeDerivativeGroupLinear,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceCornerSampledImageFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = cornerSampledImage,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkQueueFamilyProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkQueueFlags,
                        ["name"] = queueFlags,
                        ["comment"] = Queue flags,
                        },
                    [2] = {
                        ["name"] = queueCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = timestampValidBits,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["type"] = VkExtent3D,
                        ["name"] = minImageTransferGranularity,
                        ["comment"] = Minimum alignment requirement for image transfers,
                        },
                    },
                },
            ["VkDisplayPropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDisplayKHR,
                        ["name"] = display,
                        ["comment"] = Handle of the display object,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Name of the display,
                        ["pointer"] = true,
                        ["name"] = displayName,
                        },
                    [3] = {
                        ["type"] = VkExtent2D,
                        ["name"] = physicalDimensions,
                        ["comment"] = In millimeters?,
                        },
                    [4] = {
                        ["type"] = VkExtent2D,
                        ["name"] = physicalResolution,
                        ["comment"] = Max resolution for CRT?,
                        },
                    [5] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = supportedTransforms,
                        ["comment"] = one or more bits from VkSurfaceTransformFlagsKHR,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = planeReorderPossible,
                        ["comment"] = VK_TRUE if the overlay plane's z-order can be changed on this display.,
                        },
                    [7] = {
                        ["type"] = VkBool32,
                        ["name"] = persistentContent,
                        ["comment"] = VK_TRUE if this is a "smart" display that supports self-refresh/internal buffering.,
                        },
                    },
                },
            ["VkAttachmentReference"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = attachment,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = layout,
                        ["type"] = VkImageLayout,
                        },
                    },
                },
            ["VkImageMemoryRequirementsInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    },
                },
            ["VkPhysicalDeviceExclusiveScissorFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = exclusiveScissor,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkExtent3D"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = width,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = height,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = depth,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkVertexInputBindingDivisorDescriptionEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = binding,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = divisor,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPipelineRasterizationStateStreamCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineRasterizationStateStreamCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = rasterizationStream,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceTransformFeedbackPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxTransformFeedbackStreams,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxTransformFeedbackBuffers,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = maxTransformFeedbackBufferSize,
                        ["type"] = VkDeviceSize,
                        },
                    [6] = {
                        ["name"] = maxTransformFeedbackStreamDataSize,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = maxTransformFeedbackBufferDataSize,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = maxTransformFeedbackBufferDataStride,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["name"] = transformFeedbackQueries,
                        ["type"] = VkBool32,
                        },
                    [10] = {
                        ["name"] = transformFeedbackStreamsLinesTriangles,
                        ["type"] = VkBool32,
                        },
                    [11] = {
                        ["name"] = transformFeedbackRasterizationStreamSelect,
                        ["type"] = VkBool32,
                        },
                    [12] = {
                        ["name"] = transformFeedbackDraw,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceTransformFeedbackFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = transformFeedback,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = geometryStreams,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDisplayModeProperties2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = displayModeProperties,
                        ["type"] = VkDisplayModePropertiesKHR,
                        },
                    },
                },
            ["VkPushConstantRange"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkShaderStageFlags,
                        ["name"] = stageFlags,
                        ["comment"] = Which stages use the range,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = offset,
                        ["comment"] = Start of the range, in bytes,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = size,
                        ["comment"] = Size of the range, in bytes,
                        },
                    },
                },
            ["VkDeviceQueueCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDeviceQueueCreateFlags,
                        },
                    [4] = {
                        ["name"] = queueFamilyIndex,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = queueCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = float,
                        ["name"] = pQueuePriorities,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkIndirectCommandsLayoutTokenNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = tokenType,
                        ["type"] = VkIndirectCommandsTokenTypeNVX,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = bindingUnit,
                        ["comment"] = Binding unit for vertex attribute / descriptor set, offset for pushconstants,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = dynamicCount,
                        ["comment"] = Number of variable dynamic values for descriptor set / push constants,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = divisor,
                        ["comment"] = Rate the which the array is advanced per element (must be power of 2, minimum 1),
                        },
                    },
                },
            ["VkPhysicalDeviceExternalImageFormatInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkSubpassDescriptionDepthStencilResolveKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkResolveModeFlagsKHR,
                        ["name"] = depthResolveMode,
                        ["comment"] = depth resolve mode,
                        },
                    [4] = {
                        ["type"] = VkResolveModeFlagsKHR,
                        ["name"] = stencilResolveMode,
                        ["comment"] = stencil resolve mode,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference2KHR,
                        ["comment"] = depth/stencil resolve attachment,
                        ["pointer"] = true,
                        ["name"] = pDepthStencilResolveAttachment,
                        },
                    },
                },
            ["VkPhysicalDeviceMaintenance3Properties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxPerSetDescriptors,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxMemoryAllocationSize,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkPhysicalDeviceExternalMemoryHostPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = minImportedHostPointerAlignment,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkDisplayProperties2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = displayProperties,
                        ["type"] = VkDisplayPropertiesKHR,
                        },
                    },
                },
            ["VkPhysicalDeviceSparseProperties"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkBool32,
                        ["name"] = residencyStandard2DBlockShape,
                        ["comment"] = Sparse resources support: GPU will access all 2D (single sample) sparse resources using the standard sparse image block shapes (based on pixel format),
                        },
                    [2] = {
                        ["type"] = VkBool32,
                        ["name"] = residencyStandard2DMultisampleBlockShape,
                        ["comment"] = Sparse resources support: GPU will access all 2D (multisample) sparse resources using the standard sparse image block shapes (based on pixel format),
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = residencyStandard3DBlockShape,
                        ["comment"] = Sparse resources support: GPU will access all 3D sparse resources using the standard sparse image block shapes (based on pixel format),
                        },
                    [4] = {
                        ["type"] = VkBool32,
                        ["name"] = residencyAlignedMipSize,
                        ["comment"] = Sparse resources support: Images with mip level dimensions that are NOT a multiple of the sparse image block dimensions will be placed in the mip tail,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = residencyNonResidentStrict,
                        ["comment"] = Sparse resources support: GPU can consistently access non-resident regions of a resource, all reads return as if data is 0, writes are discarded,
                        },
                    },
                },
            ["VkCheckpointDataNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = stage,
                        ["type"] = VkPipelineStageFlags,
                        },
                    [4] = {
                        ["type"] = void,
                        ["name"] = pCheckpointMarker,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkQueueFamilyCheckpointPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = checkpointExecutionStageMask,
                        ["type"] = VkPipelineStageFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = vertexAttributeInstanceRateDivisor,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = vertexAttributeInstanceRateZeroDivisor,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceSurfaceInfo2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = surface,
                        ["type"] = VkSurfaceKHR,
                        },
                    },
                },
            ["VkPresentRegionsKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = swapchainCount,
                        ["comment"] = Copy of VkPresentInfoKHR::swapchainCount,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkPresentRegionKHR,
                        ["comment"] = The regions that have changed,
                        ["pointer"] = true,
                        ["name"] = pRegions,
                        },
                    },
                },
            ["VkViewport"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = float,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = float,
                        },
                    [3] = {
                        ["name"] = width,
                        ["type"] = float,
                        },
                    [4] = {
                        ["name"] = height,
                        ["type"] = float,
                        },
                    [5] = {
                        ["name"] = minDepth,
                        ["type"] = float,
                        },
                    [6] = {
                        ["name"] = maxDepth,
                        ["type"] = float,
                        },
                    },
                },
            ["VkComputePipelineCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkPipelineCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Pipeline creation flags,
                        },
                    [4] = {
                        ["name"] = stage,
                        ["type"] = VkPipelineShaderStageCreateInfo,
                        },
                    [5] = {
                        ["type"] = VkPipelineLayout,
                        ["name"] = layout,
                        ["comment"] = Interface layout of the pipeline,
                        },
                    [6] = {
                        ["type"] = VkPipeline,
                        ["name"] = basePipelineHandle,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of,
                        },
                    [7] = {
                        ["type"] = int32_t,
                        ["name"] = basePipelineIndex,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of,
                        },
                    },
                },
            ["VkExportFenceCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    },
                },
            ["VkPhysicalDeviceConditionalRenderingFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = conditionalRendering,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = inheritedConditionalRendering,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkBufferViewCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkBufferViewCreateFlags,
                        },
                    [4] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    [5] = {
                        ["type"] = VkFormat,
                        ["name"] = format,
                        ["comment"] = Optionally specifies format of elements,
                        },
                    [6] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Specified in bytes,
                        },
                    [7] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = range,
                        ["comment"] = View size specified in bytes,
                        },
                    },
                },
            ["VkCommandBufferAllocateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = commandPool,
                        ["type"] = VkCommandPool,
                        },
                    [4] = {
                        ["name"] = level,
                        ["type"] = VkCommandBufferLevel,
                        },
                    [5] = {
                        ["name"] = commandBufferCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkXlibSurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkXlibSurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = Display,
                        ["name"] = dpy,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = window,
                        ["type"] = Window,
                        },
                    },
                },
            ["VkHdrMetadataEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkXYColorEXT,
                        ["name"] = displayPrimaryRed,
                        ["comment"] = Display primary's Red,
                        },
                    [4] = {
                        ["type"] = VkXYColorEXT,
                        ["name"] = displayPrimaryGreen,
                        ["comment"] = Display primary's Green,
                        },
                    [5] = {
                        ["type"] = VkXYColorEXT,
                        ["name"] = displayPrimaryBlue,
                        ["comment"] = Display primary's Blue,
                        },
                    [6] = {
                        ["type"] = VkXYColorEXT,
                        ["name"] = whitePoint,
                        ["comment"] = Display primary's Blue,
                        },
                    [7] = {
                        ["type"] = float,
                        ["name"] = maxLuminance,
                        ["comment"] = Display maximum luminance,
                        },
                    [8] = {
                        ["type"] = float,
                        ["name"] = minLuminance,
                        ["comment"] = Display minimum luminance,
                        },
                    [9] = {
                        ["type"] = float,
                        ["name"] = maxContentLightLevel,
                        ["comment"] = Content maximum luminance,
                        },
                    [10] = {
                        ["name"] = maxFrameAverageLightLevel,
                        ["type"] = float,
                        },
                    },
                },
            ["VkMemoryWin32HandlePropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryTypeBits,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkAcquireNextImageInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = swapchain,
                        ["type"] = VkSwapchainKHR,
                        },
                    [4] = {
                        ["name"] = timeout,
                        ["type"] = uint64_t,
                        },
                    [5] = {
                        ["name"] = semaphore,
                        ["type"] = VkSemaphore,
                        },
                    [6] = {
                        ["name"] = fence,
                        ["type"] = VkFence,
                        },
                    [7] = {
                        ["name"] = deviceMask,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkGeometryDataNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = triangles,
                        ["type"] = VkGeometryTrianglesNV,
                        },
                    [2] = {
                        ["name"] = aabbs,
                        ["type"] = VkGeometryAABBNV,
                        },
                    },
                },
            ["VkPhysicalDevice8BitStorageFeaturesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = storageBuffer8BitAccess,
                        ["comment"] = 8-bit integer variables supported in StorageBuffer,
                        },
                    [4] = {
                        ["type"] = VkBool32,
                        ["name"] = uniformAndStorageBuffer8BitAccess,
                        ["comment"] = 8-bit integer variables supported in StorageBuffer and Uniform,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = storagePushConstant8,
                        ["comment"] = 8-bit integer variables supported in PushConstant,
                        },
                    },
                },
            ["VkMemoryGetAndroidHardwareBufferInfoANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    },
                },
            ["VkImportFenceFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fence,
                        ["type"] = VkFence,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkFenceImportFlags,
                        },
                    [5] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    [6] = {
                        ["name"] = fd,
                        ["type"] = int,
                        },
                    },
                },
            ["VkExternalImageFormatPropertiesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = imageFormatProperties,
                        ["type"] = VkImageFormatProperties,
                        },
                    [2] = {
                        ["name"] = externalMemoryFeatures,
                        ["type"] = VkExternalMemoryFeatureFlagsNV,
                        },
                    [3] = {
                        ["name"] = exportFromImportedHandleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                        },
                    [4] = {
                        ["name"] = compatibleHandleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                        },
                    },
                },
            ["VkAndroidHardwareBufferUsageANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = androidHardwareBufferUsage,
                        ["type"] = uint64_t,
                        },
                    },
                },
            ["VkPhysicalDeviceExternalSemaphoreInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    },
                },
            ["VkImportAndroidHardwareBufferInfoANDROID"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = AHardwareBuffer,
                        ["name"] = buffer,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDevicePCIBusInfoPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = pciDomain,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = pciBus,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = pciDevice,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = pciFunction,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexAttribDivisor,
                        ["comment"] = max value of vertex attribute divisor,
                        },
                    },
                },
            ["VkDebugReportCallbackCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDebugReportFlagsEXT,
                        ["name"] = flags,
                        ["comment"] = Indicates which events call this callback,
                        },
                    [4] = {
                        ["type"] = PFN_vkDebugReportCallbackEXT,
                        ["name"] = pfnCallback,
                        ["comment"] = Function pointer of a callback function,
                        },
                    [5] = {
                        ["pointer"] = true,
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["comment"] = User data provided to callback function,
                        },
                    },
                },
            ["VkOffset2D"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = int32_t,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = int32_t,
                        },
                    },
                },
            ["VkTextureLODGatherFormatPropertiesAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = supportsTextureGatherLODBiasAMD,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkGraphicsPipelineCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkPipelineCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Pipeline creation flags,
                        },
                    [4] = {
                        ["name"] = stageCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkPipelineShaderStageCreateInfo,
                        ["comment"] = One entry for each active shader stage,
                        ["pointer"] = true,
                        ["name"] = pStages,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkPipelineVertexInputStateCreateInfo,
                        ["name"] = pVertexInputState,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkPipelineInputAssemblyStateCreateInfo,
                        ["name"] = pInputAssemblyState,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkPipelineTessellationStateCreateInfo,
                        ["name"] = pTessellationState,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkPipelineViewportStateCreateInfo,
                        ["name"] = pViewportState,
                        ["pointer"] = true,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkPipelineRasterizationStateCreateInfo,
                        ["name"] = pRasterizationState,
                        ["pointer"] = true,
                        },
                    [11] = {
                        ["const"] = true,
                        ["type"] = VkPipelineMultisampleStateCreateInfo,
                        ["name"] = pMultisampleState,
                        ["pointer"] = true,
                        },
                    [12] = {
                        ["const"] = true,
                        ["type"] = VkPipelineDepthStencilStateCreateInfo,
                        ["name"] = pDepthStencilState,
                        ["pointer"] = true,
                        },
                    [13] = {
                        ["const"] = true,
                        ["type"] = VkPipelineColorBlendStateCreateInfo,
                        ["name"] = pColorBlendState,
                        ["pointer"] = true,
                        },
                    [14] = {
                        ["const"] = true,
                        ["type"] = VkPipelineDynamicStateCreateInfo,
                        ["name"] = pDynamicState,
                        ["pointer"] = true,
                        },
                    [15] = {
                        ["type"] = VkPipelineLayout,
                        ["name"] = layout,
                        ["comment"] = Interface layout of the pipeline,
                        },
                    [16] = {
                        ["name"] = renderPass,
                        ["type"] = VkRenderPass,
                        },
                    [17] = {
                        ["name"] = subpass,
                        ["type"] = uint32_t,
                        },
                    [18] = {
                        ["type"] = VkPipeline,
                        ["name"] = basePipelineHandle,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of,
                        },
                    [19] = {
                        ["type"] = int32_t,
                        ["name"] = basePipelineIndex,
                        ["comment"] = If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of,
                        },
                    },
                },
            ["VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = representativeFragmentTest,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkRenderPassCreateInfo2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkRenderPassCreateFlags,
                        },
                    [4] = {
                        ["name"] = attachmentCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentDescription2KHR,
                        ["name"] = pAttachments,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = subpassCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkSubpassDescription2KHR,
                        ["name"] = pSubpasses,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["name"] = dependencyCount,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkSubpassDependency2KHR,
                        ["name"] = pDependencies,
                        ["pointer"] = true,
                        },
                    [10] = {
                        ["name"] = correlatedViewMaskCount,
                        ["type"] = uint32_t,
                        },
                    [11] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pCorrelatedViewMasks,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkBindImageMemoryInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    [4] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [5] = {
                        ["name"] = memoryOffset,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkExternalImageFormatProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = externalMemoryProperties,
                        ["type"] = VkExternalMemoryProperties,
                        },
                    },
                },
            ["VkSamplerCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkSamplerCreateFlags,
                        },
                    [4] = {
                        ["type"] = VkFilter,
                        ["name"] = magFilter,
                        ["comment"] = Filter mode for magnification,
                        },
                    [5] = {
                        ["type"] = VkFilter,
                        ["name"] = minFilter,
                        ["comment"] = Filter mode for minifiation,
                        },
                    [6] = {
                        ["type"] = VkSamplerMipmapMode,
                        ["name"] = mipmapMode,
                        ["comment"] = Mipmap selection mode,
                        },
                    [7] = {
                        ["name"] = addressModeU,
                        ["type"] = VkSamplerAddressMode,
                        },
                    [8] = {
                        ["name"] = addressModeV,
                        ["type"] = VkSamplerAddressMode,
                        },
                    [9] = {
                        ["name"] = addressModeW,
                        ["type"] = VkSamplerAddressMode,
                        },
                    [10] = {
                        ["name"] = mipLodBias,
                        ["type"] = float,
                        },
                    [11] = {
                        ["name"] = anisotropyEnable,
                        ["type"] = VkBool32,
                        },
                    [12] = {
                        ["name"] = maxAnisotropy,
                        ["type"] = float,
                        },
                    [13] = {
                        ["name"] = compareEnable,
                        ["type"] = VkBool32,
                        },
                    [14] = {
                        ["name"] = compareOp,
                        ["type"] = VkCompareOp,
                        },
                    [15] = {
                        ["name"] = minLod,
                        ["type"] = float,
                        },
                    [16] = {
                        ["name"] = maxLod,
                        ["type"] = float,
                        },
                    [17] = {
                        ["name"] = borderColor,
                        ["type"] = VkBorderColor,
                        },
                    [18] = {
                        ["name"] = unnormalizedCoordinates,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkSubpassDescription2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkSubpassDescriptionFlags,
                        },
                    [4] = {
                        ["name"] = pipelineBindPoint,
                        ["type"] = VkPipelineBindPoint,
                        },
                    [5] = {
                        ["name"] = viewMask,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = inputAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference2KHR,
                        ["name"] = pInputAttachments,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["name"] = colorAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference2KHR,
                        ["name"] = pColorAttachments,
                        ["pointer"] = true,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference2KHR,
                        ["name"] = pResolveAttachments,
                        ["pointer"] = true,
                        },
                    [11] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference2KHR,
                        ["name"] = pDepthStencilAttachment,
                        ["pointer"] = true,
                        },
                    [12] = {
                        ["name"] = preserveAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [13] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pPreserveAttachments,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkSwapchainDisplayNativeHdrCreateInfoAMD"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = localDimmingEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkExportMemoryAllocateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                        },
                    },
                },
            ["VkSparseImageOpaqueMemoryBindInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    [2] = {
                        ["name"] = bindCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = VkSparseMemoryBind,
                        ["name"] = pBinds,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineCreationFeedbackCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["pointer"] = true,
                        ["type"] = VkPipelineCreationFeedbackEXT,
                        ["name"] = pPipelineCreationFeedback,
                        ["comment"] = Output pipeline creation feedback.,
                        },
                    [4] = {
                        ["name"] = pipelineStageCreationFeedbackCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["pointer"] = true,
                        ["type"] = VkPipelineCreationFeedbackEXT,
                        ["name"] = pPipelineStageCreationFeedbacks,
                        ["comment"] = One entry for each shader stage specified in the parent Vk*PipelineCreateInfo struct,
                        },
                    },
                },
            ["VkMemoryRequirements"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Specified in bytes,
                        },
                    [2] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = alignment,
                        ["comment"] = Specified in bytes,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = memoryTypeBits,
                        ["comment"] = Bitmask of the allowed memory type indices into memoryTypes[] for this object,
                        },
                    },
                },
            ["VkPipelineRasterizationDepthClipStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineRasterizationDepthClipStateCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = depthClipEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = bindingCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorBindingFlagsEXT,
                        ["name"] = pBindingFlags,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceDescriptorIndexingFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shaderInputAttachmentArrayDynamicIndexing,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = shaderUniformTexelBufferArrayDynamicIndexing,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = shaderStorageTexelBufferArrayDynamicIndexing,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = shaderUniformBufferArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [7] = {
                        ["name"] = shaderSampledImageArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [8] = {
                        ["name"] = shaderStorageBufferArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [9] = {
                        ["name"] = shaderStorageImageArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [10] = {
                        ["name"] = shaderInputAttachmentArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [11] = {
                        ["name"] = shaderUniformTexelBufferArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [12] = {
                        ["name"] = shaderStorageTexelBufferArrayNonUniformIndexing,
                        ["type"] = VkBool32,
                        },
                    [13] = {
                        ["name"] = descriptorBindingUniformBufferUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [14] = {
                        ["name"] = descriptorBindingSampledImageUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [15] = {
                        ["name"] = descriptorBindingStorageImageUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [16] = {
                        ["name"] = descriptorBindingStorageBufferUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [17] = {
                        ["name"] = descriptorBindingUniformTexelBufferUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [18] = {
                        ["name"] = descriptorBindingStorageTexelBufferUpdateAfterBind,
                        ["type"] = VkBool32,
                        },
                    [19] = {
                        ["name"] = descriptorBindingUpdateUnusedWhilePending,
                        ["type"] = VkBool32,
                        },
                    [20] = {
                        ["name"] = descriptorBindingPartiallyBound,
                        ["type"] = VkBool32,
                        },
                    [21] = {
                        ["name"] = descriptorBindingVariableDescriptorCount,
                        ["type"] = VkBool32,
                        },
                    [22] = {
                        ["name"] = runtimeDescriptorArray,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkCalibratedTimestampInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = timeDomain,
                        ["type"] = VkTimeDomainEXT,
                        },
                    },
                },
            ["VkPhysicalDeviceConservativeRasterizationPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["pointer"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["comment"] = Pointer to next structure,
                        },
                    [3] = {
                        ["type"] = float,
                        ["name"] = primitiveOverestimationSize,
                        ["comment"] = The size in pixels the primitive is enlarged at each edge during conservative rasterization,
                        },
                    [4] = {
                        ["type"] = float,
                        ["name"] = maxExtraPrimitiveOverestimationSize,
                        ["comment"] = The maximum additional overestimation the client can specify in the pipeline state,
                        },
                    [5] = {
                        ["type"] = float,
                        ["name"] = extraPrimitiveOverestimationSizeGranularity,
                        ["comment"] = The granularity of extra overestimation sizes the implementations supports between 0 and maxExtraOverestimationSize,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = primitiveUnderestimation,
                        ["comment"] = true if the implementation supports conservative rasterization underestimation mode,
                        },
                    [7] = {
                        ["type"] = VkBool32,
                        ["name"] = conservativePointAndLineRasterization,
                        ["comment"] = true if conservative rasterization also applies to points and lines,
                        },
                    [8] = {
                        ["type"] = VkBool32,
                        ["name"] = degenerateTrianglesRasterized,
                        ["comment"] = true if degenerate triangles (those with zero area after snap) are rasterized,
                        },
                    [9] = {
                        ["type"] = VkBool32,
                        ["name"] = degenerateLinesRasterized,
                        ["comment"] = true if degenerate lines (those with zero length after snap) are rasterized,
                        },
                    [10] = {
                        ["type"] = VkBool32,
                        ["name"] = fullyCoveredFragmentShaderInputVariable,
                        ["comment"] = true if the implementation supports the FullyCoveredEXT SPIR-V builtin fragment shader input variable,
                        },
                    [11] = {
                        ["type"] = VkBool32,
                        ["name"] = conservativeRasterizationPostDepthCoverage,
                        ["comment"] = true if the implementation supports both conservative rasterization and post depth coverage sample coverage mask,
                        },
                    },
                },
            ["VkMemoryHostPointerPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryTypeBits,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDeviceGroupRenderPassBeginInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceMask,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = deviceRenderAreaCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkRect2D,
                        ["name"] = pDeviceRenderAreas,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkImageViewCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkImageViewCreateFlags,
                        },
                    [4] = {
                        ["name"] = image,
                        ["type"] = VkImage,
                        },
                    [5] = {
                        ["name"] = viewType,
                        ["type"] = VkImageViewType,
                        },
                    [6] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [7] = {
                        ["name"] = components,
                        ["type"] = VkComponentMapping,
                        },
                    [8] = {
                        ["name"] = subresourceRange,
                        ["type"] = VkImageSubresourceRange,
                        },
                    },
                },
            ["VkImportMemoryHostPointerInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    [4] = {
                        ["type"] = void,
                        ["name"] = pHostPointer,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDebugUtilsMessengerCallbackDataEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDebugUtilsMessengerCallbackDataFlagsEXT,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pMessageIdName,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = messageIdNumber,
                        ["type"] = int32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pMessage,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = queueLabelCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkDebugUtilsLabelEXT,
                        ["name"] = pQueueLabels,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["name"] = cmdBufLabelCount,
                        ["type"] = uint32_t,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = VkDebugUtilsLabelEXT,
                        ["name"] = pCmdBufLabels,
                        ["pointer"] = true,
                        },
                    [11] = {
                        ["name"] = objectCount,
                        ["type"] = uint32_t,
                        },
                    [12] = {
                        ["const"] = true,
                        ["type"] = VkDebugUtilsObjectNameInfoEXT,
                        ["name"] = pObjects,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDebugUtilsMessengerCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDebugUtilsMessengerCreateFlagsEXT,
                        },
                    [4] = {
                        ["name"] = messageSeverity,
                        ["type"] = VkDebugUtilsMessageSeverityFlagsEXT,
                        },
                    [5] = {
                        ["name"] = messageType,
                        ["type"] = VkDebugUtilsMessageTypeFlagsEXT,
                        },
                    [6] = {
                        ["name"] = pfnUserCallback,
                        ["type"] = PFN_vkDebugUtilsMessengerCallbackEXT,
                        },
                    [7] = {
                        ["type"] = void,
                        ["name"] = pUserData,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDebugUtilsObjectTagInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = objectType,
                        ["type"] = VkObjectType,
                        },
                    [4] = {
                        ["name"] = objectHandle,
                        ["type"] = uint64_t,
                        },
                    [5] = {
                        ["name"] = tagName,
                        ["type"] = uint64_t,
                        },
                    [6] = {
                        ["name"] = tagSize,
                        ["type"] = size_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pTag,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDebugUtilsObjectNameInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = objectType,
                        ["type"] = VkObjectType,
                        },
                    [4] = {
                        ["name"] = objectHandle,
                        ["type"] = uint64_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["name"] = pObjectName,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceHostQueryResetFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = hostQueryReset,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPipelineCacheCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineCacheCreateFlags,
                        },
                    [4] = {
                        ["type"] = size_t,
                        ["name"] = initialDataSize,
                        ["comment"] = Size of initial data to populate cache, in bytes,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["comment"] = Initial data to populate cache,
                        ["pointer"] = true,
                        ["name"] = pInitialData,
                        },
                    },
                },
            ["VkPipelineTessellationDomainOriginStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = domainOrigin,
                        ["type"] = VkTessellationDomainOrigin,
                        },
                    },
                },
            ["VkFilterCubicImageViewImageFormatPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = filterCubic,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = filterCubicMinmax,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceFloat16Int8FeaturesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shaderFloat16,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = shaderInt8,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceShaderDrawParametersFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shaderDrawParameters,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDescriptorSetLayoutSupport"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = supported,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkShaderModuleValidationCacheCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = validationCache,
                        ["type"] = VkValidationCacheEXT,
                        },
                    },
                },
            ["VkImageSubresource"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    [2] = {
                        ["name"] = mipLevel,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = arrayLayer,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkShadingRatePaletteNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = shadingRatePaletteEntryCount,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = VkShadingRatePaletteEntryNV,
                        ["name"] = pShadingRatePaletteEntries,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkExternalFenceProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = exportFromImportedHandleTypes,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    [4] = {
                        ["name"] = compatibleHandleTypes,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    [5] = {
                        ["name"] = externalFenceFeatures,
                        ["type"] = VkExternalFenceFeatureFlags,
                        },
                    },
                },
            ["VkPipelineCoverageModulationStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineCoverageModulationStateCreateFlagsNV,
                        },
                    [4] = {
                        ["name"] = coverageModulationMode,
                        ["type"] = VkCoverageModulationModeNV,
                        },
                    [5] = {
                        ["name"] = coverageModulationTableEnable,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = coverageModulationTableCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = float,
                        ["name"] = pCoverageModulationTable,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceInlineUniformBlockPropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = maxInlineUniformBlockSize,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = maxPerStageDescriptorInlineUniformBlocks,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = maxDescriptorSetInlineUniformBlocks,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = maxDescriptorSetUpdateAfterBindInlineUniformBlocks,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkImagePipeSurfaceCreateInfoFUCHSIA"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkImagePipeSurfaceCreateFlagsFUCHSIA,
                        },
                    [4] = {
                        ["name"] = imagePipeHandle,
                        ["type"] = zx_handle_t,
                        },
                    },
                },
            ["VkPipelineColorBlendAdvancedStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = srcPremultiplied,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = dstPremultiplied,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = blendOverlap,
                        ["type"] = VkBlendOverlapEXT,
                        },
                    },
                },
            ["VkImageCopy"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = srcSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [2] = {
                        ["type"] = VkOffset3D,
                        ["name"] = srcOffset,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        },
                    [3] = {
                        ["name"] = dstSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [4] = {
                        ["type"] = VkOffset3D,
                        ["name"] = dstOffset,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        },
                    [5] = {
                        ["type"] = VkExtent3D,
                        ["name"] = extent,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        },
                    },
                },
            ["VkSwapchainCounterCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = surfaceCounters,
                        ["type"] = VkSurfaceCounterFlagsEXT,
                        },
                    },
                },
            ["VkAndroidSurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkAndroidSurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = ANativeWindow,
                        ["name"] = window,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkSamplerReductionModeCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = reductionMode,
                        ["type"] = VkSamplerReductionModeEXT,
                        },
                    },
                },
            ["VkEventCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkEventCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Event creation flags,
                        },
                    },
                },
            ["VkImportMemoryWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    [4] = {
                        ["name"] = handle,
                        ["type"] = HANDLE,
                        },
                    [5] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkSemaphoreCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkSemaphoreCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Semaphore creation flags,
                        },
                    },
                },
            ["VkPhysicalDeviceMeshShaderFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = taskShader,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = meshShader,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPipelineSampleLocationsStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = sampleLocationsEnable,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = sampleLocationsInfo,
                        ["type"] = VkSampleLocationsInfoEXT,
                        },
                    },
                },
            ["VkBufferMemoryRequirementsInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    },
                },
            ["VkAttachmentSampleLocationsEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = attachmentIndex,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = sampleLocationsInfo,
                        ["type"] = VkSampleLocationsInfoEXT,
                        },
                    },
                },
            ["VkSampleLocationsInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = sampleLocationsPerPixel,
                        ["type"] = VkSampleCountFlags,
                        },
                    [4] = {
                        ["name"] = sampleLocationGridSize,
                        ["type"] = VkExtent2D,
                        },
                    [5] = {
                        ["name"] = sampleLocationsCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkSampleLocationEXT,
                        ["name"] = pSampleLocations,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineCoverageToColorStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineCoverageToColorStateCreateFlagsNV,
                        },
                    [4] = {
                        ["name"] = coverageToColorEnable,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = coverageToColorLocation,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayModeCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDisplayModeCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = VkDisplayModeParametersKHR,
                        ["name"] = parameters,
                        ["comment"] = The parameters this mode uses.,
                        },
                    },
                },
            ["VkSampleLocationEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = float,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = float,
                        },
                    },
                },
            ["VkDisplayPlaneProperties2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = displayPlaneProperties,
                        ["type"] = VkDisplayPlanePropertiesKHR,
                        },
                    },
                },
            ["VkSwapchainCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkSwapchainCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = VkSurfaceKHR,
                        ["name"] = surface,
                        ["comment"] = The swapchain's target surface,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = minImageCount,
                        ["comment"] = Minimum number of presentation images the application needs,
                        },
                    [6] = {
                        ["type"] = VkFormat,
                        ["name"] = imageFormat,
                        ["comment"] = Format of the presentation images,
                        },
                    [7] = {
                        ["type"] = VkColorSpaceKHR,
                        ["name"] = imageColorSpace,
                        ["comment"] = Colorspace of the presentation images,
                        },
                    [8] = {
                        ["type"] = VkExtent2D,
                        ["name"] = imageExtent,
                        ["comment"] = Dimensions of the presentation images,
                        },
                    [9] = {
                        ["type"] = uint32_t,
                        ["name"] = imageArrayLayers,
                        ["comment"] = Determines the number of views for multiview/stereo presentation,
                        },
                    [10] = {
                        ["type"] = VkImageUsageFlags,
                        ["name"] = imageUsage,
                        ["comment"] = Bits indicating how the presentation images will be used,
                        },
                    [11] = {
                        ["type"] = VkSharingMode,
                        ["name"] = imageSharingMode,
                        ["comment"] = Sharing mode used for the presentation images,
                        },
                    [12] = {
                        ["type"] = uint32_t,
                        ["name"] = queueFamilyIndexCount,
                        ["comment"] = Number of queue families having access to the images in case of concurrent sharing mode,
                        },
                    [13] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["comment"] = Array of queue family indices having access to the images in case of concurrent sharing mode,
                        ["pointer"] = true,
                        ["name"] = pQueueFamilyIndices,
                        },
                    [14] = {
                        ["type"] = VkSurfaceTransformFlagsKHR,
                        ["name"] = preTransform,
                        ["comment"] = The transform, relative to the device's natural orientation, applied to the image content prior to presentation,
                        },
                    [15] = {
                        ["type"] = VkCompositeAlphaFlagsKHR,
                        ["name"] = compositeAlpha,
                        ["comment"] = The alpha blending mode used when compositing this surface with other surfaces in the window system,
                        },
                    [16] = {
                        ["type"] = VkPresentModeKHR,
                        ["name"] = presentMode,
                        ["comment"] = Which presentation mode to use for presents on this swap chain,
                        },
                    [17] = {
                        ["type"] = VkBool32,
                        ["name"] = clipped,
                        ["comment"] = Specifies whether presentable images may be affected by window clip regions,
                        },
                    [18] = {
                        ["type"] = VkSwapchainKHR,
                        ["name"] = oldSwapchain,
                        ["comment"] = Existing swap chain to replace, if any,
                        },
                    },
                },
            ["VkPhysicalDeviceProtectedMemoryProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = protectedNoFault,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceProtectedMemoryFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = protectedMemory,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkProtectedSubmitInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = protectedSubmit,
                        ["comment"] = Submit protected command buffers,
                        },
                    },
                },
            ["VkConditionalRenderingBeginInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    [4] = {
                        ["name"] = offset,
                        ["type"] = VkDeviceSize,
                        },
                    [5] = {
                        ["name"] = flags,
                        ["type"] = VkConditionalRenderingFlagsEXT,
                        },
                    },
                },
            ["VkClearAttachment"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    [2] = {
                        ["name"] = colorAttachment,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = clearValue,
                        ["type"] = VkClearValue,
                        },
                    },
                },
            ["VkBindImagePlaneMemoryInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = planeAspect,
                        ["type"] = VkImageAspectFlags,
                        },
                    },
                },
            ["VkSamplerYcbcrConversionCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [4] = {
                        ["name"] = ycbcrModel,
                        ["type"] = VkSamplerYcbcrModelConversion,
                        },
                    [5] = {
                        ["name"] = ycbcrRange,
                        ["type"] = VkSamplerYcbcrRange,
                        },
                    [6] = {
                        ["name"] = components,
                        ["type"] = VkComponentMapping,
                        },
                    [7] = {
                        ["name"] = xChromaOffset,
                        ["type"] = VkChromaLocation,
                        },
                    [8] = {
                        ["name"] = yChromaOffset,
                        ["type"] = VkChromaLocation,
                        },
                    [9] = {
                        ["name"] = chromaFilter,
                        ["type"] = VkFilter,
                        },
                    [10] = {
                        ["name"] = forceExplicitReconstruction,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkBaseOutStructure"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = VkBaseOutStructure,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceMultiviewProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = maxMultiviewViewCount,
                        ["comment"] = max number of views in a subpass,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = maxMultiviewInstanceIndex,
                        ["comment"] = max instance index for a draw in a multiview subpass,
                        },
                    },
                },
            ["VkMemoryRequirements2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryRequirements,
                        ["type"] = VkMemoryRequirements,
                        },
                    },
                },
            ["VkRenderPassSampleLocationsBeginInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = attachmentInitialSampleLocationsCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentSampleLocationsEXT,
                        ["name"] = pAttachmentInitialSampleLocations,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = postSubpassSampleLocationsCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkSubpassSampleLocationsEXT,
                        ["name"] = pPostSubpassSampleLocations,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkBufferCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBufferCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Buffer creation flags,
                        },
                    [4] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Specified in bytes,
                        },
                    [5] = {
                        ["type"] = VkBufferUsageFlags,
                        ["name"] = usage,
                        ["comment"] = Buffer usage flags,
                        },
                    [6] = {
                        ["name"] = sharingMode,
                        ["type"] = VkSharingMode,
                        },
                    [7] = {
                        ["name"] = queueFamilyIndexCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pQueueFamilyIndices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceSubgroupProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = subgroupSize,
                        ["comment"] = The size of a subgroup for this queue.,
                        },
                    [4] = {
                        ["type"] = VkShaderStageFlags,
                        ["name"] = supportedStages,
                        ["comment"] = Bitfield of what shader stages support subgroup operations,
                        },
                    [5] = {
                        ["type"] = VkSubgroupFeatureFlags,
                        ["name"] = supportedOperations,
                        ["comment"] = Bitfield of what subgroup operations are supported.,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = quadOperationsInAllStages,
                        ["comment"] = Flag to specify whether quad operations are available in all stages.,
                        },
                    },
                },
            ["VkPhysicalDevice16BitStorageFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = storageBuffer16BitAccess,
                        ["comment"] = 16-bit integer/floating-point variables supported in BufferBlock,
                        },
                    [4] = {
                        ["type"] = VkBool32,
                        ["name"] = uniformAndStorageBuffer16BitAccess,
                        ["comment"] = 16-bit integer/floating-point variables supported in BufferBlock and Block,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = storagePushConstant16,
                        ["comment"] = 16-bit integer/floating-point variables supported in PushConstant,
                        },
                    [6] = {
                        ["type"] = VkBool32,
                        ["name"] = storageInputOutput16,
                        ["comment"] = 16-bit integer/floating-point variables supported in shader inputs and outputs,
                        },
                    },
                },
            ["VkSharedPresentSurfaceCapabilitiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkImageUsageFlags,
                        ["name"] = sharedPresentSupportedUsageFlags,
                        ["comment"] = Supported image usage flags if swapchain created using a shared present mode,
                        },
                    },
                },
            ["VkDisplayPlaneCapabilities2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = capabilities,
                        ["type"] = VkDisplayPlaneCapabilitiesKHR,
                        },
                    },
                },
            ["VkBindImageMemoryDeviceGroupInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = deviceIndexCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pDeviceIndices,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = splitInstanceBindRegionCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkRect2D,
                        ["name"] = pSplitInstanceBindRegions,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceASTCDecodeFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = decodeModeSharedExponent,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDedicatedAllocationBufferCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = dedicatedAllocation,
                        ["comment"] = Whether this buffer uses a dedicated allocation,
                        },
                    },
                },
            ["VkPipelineShaderStageCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineShaderStageCreateFlags,
                        },
                    [4] = {
                        ["type"] = VkShaderStageFlags,
                        ["name"] = stage,
                        ["comment"] = Shader stage,
                        },
                    [5] = {
                        ["type"] = VkShaderModule,
                        ["name"] = module,
                        ["comment"] = Module containing entry point,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Null-terminated entry point name,
                        ["pointer"] = true,
                        ["name"] = pName,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkSpecializationInfo,
                        ["name"] = pSpecializationInfo,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDeviceGroupBindSparseInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = resourceDeviceIndex,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = memoryDeviceIndex,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayModePropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDisplayModeKHR,
                        ["name"] = displayMode,
                        ["comment"] = Handle of this display mode.,
                        },
                    [2] = {
                        ["type"] = VkDisplayModeParametersKHR,
                        ["name"] = parameters,
                        ["comment"] = The parameters this mode uses.,
                        },
                    },
                },
            ["VkSparseImageFormatProperties2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = properties,
                        ["type"] = VkSparseImageFormatProperties,
                        },
                    },
                },
            ["VkMemoryAllocateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = allocationSize,
                        ["comment"] = Size of memory allocation,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = memoryTypeIndex,
                        ["comment"] = Index of the of the memory type to allocate from,
                        },
                    },
                },
            ["VkObjectTablePipelineEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    [3] = {
                        ["name"] = pipeline,
                        ["type"] = VkPipeline,
                        },
                    },
                },
            ["VkSpecializationInfo"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = mapEntryCount,
                        ["comment"] = Number of entries in the map,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = VkSpecializationMapEntry,
                        ["comment"] = Array of map entries,
                        ["pointer"] = true,
                        ["name"] = pMapEntries,
                        },
                    [3] = {
                        ["type"] = size_t,
                        ["name"] = dataSize,
                        ["comment"] = Size in bytes of pData,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["comment"] = Pointer to SpecConstant data,
                        ["pointer"] = true,
                        ["name"] = pData,
                        },
                    },
                },
            ["VkViewportSwizzleNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = VkViewportCoordinateSwizzleNV,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = VkViewportCoordinateSwizzleNV,
                        },
                    [3] = {
                        ["name"] = z,
                        ["type"] = VkViewportCoordinateSwizzleNV,
                        },
                    [4] = {
                        ["name"] = w,
                        ["type"] = VkViewportCoordinateSwizzleNV,
                        },
                    },
                },
            ["VkIndirectCommandsTokenNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = tokenType,
                        ["type"] = VkIndirectCommandsTokenTypeNVX,
                        },
                    [2] = {
                        ["type"] = VkBuffer,
                        ["name"] = buffer,
                        ["comment"] = buffer containing tableEntries and additional data for indirectCommands,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = offset from the base address of the buffer,
                        },
                    },
                },
            ["VkPhysicalDeviceSparseImageFormatInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [4] = {
                        ["name"] = type,
                        ["type"] = VkImageType,
                        },
                    [5] = {
                        ["name"] = samples,
                        ["type"] = VkSampleCountFlags,
                        },
                    [6] = {
                        ["name"] = usage,
                        ["type"] = VkImageUsageFlags,
                        },
                    [7] = {
                        ["name"] = tiling,
                        ["type"] = VkImageTiling,
                        },
                    },
                },
            ["VkImageSubresourceRange"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    [2] = {
                        ["name"] = baseMipLevel,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = levelCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = baseArrayLayer,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = layerCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDebugMarkerObjectNameInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDebugReportObjectTypeEXT,
                        ["name"] = objectType,
                        ["comment"] = The type of the object,
                        },
                    [4] = {
                        ["type"] = uint64_t,
                        ["name"] = object,
                        ["comment"] = The handle of the object, cast to uint64_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Name to apply to the object,
                        ["pointer"] = true,
                        ["name"] = pObjectName,
                        },
                    },
                },
            ["VkRenderPassInputAttachmentAspectCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = aspectReferenceCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkInputAttachmentAspectReference,
                        ["name"] = pAspectReferences,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkWin32SurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkWin32SurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["name"] = hinstance,
                        ["type"] = HINSTANCE,
                        },
                    [5] = {
                        ["name"] = hwnd,
                        ["type"] = HWND,
                        },
                    },
                },
            ["VkExportSemaphoreWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = SECURITY_ATTRIBUTES,
                        ["name"] = pAttributes,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = dwAccess,
                        ["type"] = DWORD,
                        },
                    [5] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkPhysicalDeviceDiscardRectanglePropertiesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDiscardRectangles,
                        ["comment"] = max number of active discard rectangles,
                        },
                    },
                },
            ["VkPipelineViewportSwizzleStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineViewportSwizzleStateCreateFlagsNV,
                        },
                    [4] = {
                        ["name"] = viewportCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkViewportSwizzleNV,
                        ["name"] = pViewportSwizzles,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkExtent2D"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = width,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = height,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayPlanePropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDisplayKHR,
                        ["name"] = currentDisplay,
                        ["comment"] = Display the plane is currently associated with.  Will be VK_NULL_HANDLE if the plane is not in use.,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = currentStackIndex,
                        ["comment"] = Current z-order of the plane.,
                        },
                    },
                },
            ["VkRectLayerKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkOffset2D,
                        ["name"] = offset,
                        ["comment"] = upper-left corner of a rectangle that has not changed, in pixels of a presentation images,
                        },
                    [2] = {
                        ["type"] = VkExtent2D,
                        ["name"] = extent,
                        ["comment"] = Dimensions of a rectangle that has not changed, in pixels of a presentation images,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = layer,
                        ["comment"] = Layer of a swapchain's image(s), for stereoscopic-3D images,
                        },
                    },
                },
            ["VkPresentTimeGOOGLE"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = presentID,
                        ["comment"] = Application-provided identifier,
                        },
                    [2] = {
                        ["type"] = uint64_t,
                        ["name"] = desiredPresentTime,
                        ["comment"] = Earliest time an image should be presented,
                        },
                    },
                },
            ["VkObjectTableIndexBufferEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    [4] = {
                        ["name"] = indexType,
                        ["type"] = VkIndexType,
                        },
                    },
                },
            ["VkDescriptorUpdateTemplateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkDescriptorUpdateTemplateCreateFlags,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = descriptorUpdateEntryCount,
                        ["comment"] = Number of descriptor update entries to use for the update template,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDescriptorUpdateTemplateEntry,
                        ["comment"] = Descriptor update entries for the template,
                        ["pointer"] = true,
                        ["name"] = pDescriptorUpdateEntries,
                        },
                    [6] = {
                        ["name"] = templateType,
                        ["type"] = VkDescriptorUpdateTemplateType,
                        },
                    [7] = {
                        ["name"] = descriptorSetLayout,
                        ["type"] = VkDescriptorSetLayout,
                        },
                    [8] = {
                        ["name"] = pipelineBindPoint,
                        ["type"] = VkPipelineBindPoint,
                        },
                    [9] = {
                        ["type"] = VkPipelineLayout,
                        ["name"] = pipelineLayout,
                        ["comment"] = If used for push descriptors, this is the only allowed layout,
                        },
                    [10] = {
                        ["name"] = set,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkSubpassDescription"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = flags,
                        ["type"] = VkSubpassDescriptionFlags,
                        },
                    [2] = {
                        ["type"] = VkPipelineBindPoint,
                        ["name"] = pipelineBindPoint,
                        ["comment"] = Must be VK_PIPELINE_BIND_POINT_GRAPHICS for now,
                        },
                    [3] = {
                        ["name"] = inputAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference,
                        ["name"] = pInputAttachments,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = colorAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference,
                        ["name"] = pColorAttachments,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference,
                        ["name"] = pResolveAttachments,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkAttachmentReference,
                        ["name"] = pDepthStencilAttachment,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["name"] = preserveAttachmentCount,
                        ["type"] = uint32_t,
                        },
                    [10] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pPreserveAttachments,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkDeviceGroupSubmitInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = waitSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pWaitSemaphoreDeviceIndices,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = commandBufferCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pCommandBufferDeviceMasks,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = signalSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pSignalSemaphoreDeviceIndices,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkMemoryType"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkMemoryPropertyFlags,
                        ["name"] = propertyFlags,
                        ["comment"] = Memory properties of this memory type,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = heapIndex,
                        ["comment"] = Index of the memory heap allocations of this memory type are taken from,
                        },
                    },
                },
            ["VkImageSwapchainCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = swapchain,
                        ["type"] = VkSwapchainKHR,
                        },
                    },
                },
            ["VkFenceGetFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fence,
                        ["type"] = VkFence,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    },
                },
            ["VkWaylandSurfaceCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkWaylandSurfaceCreateFlagsKHR,
                        },
                    [4] = {
                        ["type"] = wl_display,
                        ["name"] = display,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["type"] = wl_surface,
                        ["name"] = surface,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineDynamicStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineDynamicStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = dynamicStateCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkDynamicState,
                        ["name"] = pDynamicStates,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkSurfaceCapabilities2KHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = surfaceCapabilities,
                        ["type"] = VkSurfaceCapabilitiesKHR,
                        },
                    },
                },
            ["VkDeviceGroupPresentInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = swapchainCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pDeviceMasks,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = mode,
                        ["type"] = VkDeviceGroupPresentModeFlagsKHR,
                        },
                    },
                },
            ["VkPhysicalDeviceMultiviewFeatures"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = multiview,
                        ["comment"] = Multiple views in a renderpass,
                        },
                    [4] = {
                        ["type"] = VkBool32,
                        ["name"] = multiviewGeometryShader,
                        ["comment"] = Multiple views in a renderpass w/ geometry shader,
                        },
                    [5] = {
                        ["type"] = VkBool32,
                        ["name"] = multiviewTessellationShader,
                        ["comment"] = Multiple views in a renderpass w/ tessellation shader,
                        },
                    },
                },
            ["VkInstanceCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkInstanceCreateFlags,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkApplicationInfo,
                        ["name"] = pApplicationInfo,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["name"] = enabledLayerCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Ordered list of layer names to be enabled,
                        ["doublePointer"] = true,
                        ["name"] = ppEnabledLayerNames,
                        },
                    [7] = {
                        ["name"] = enabledExtensionCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = char,
                        ["comment"] = Extension names to be enabled,
                        ["doublePointer"] = true,
                        ["name"] = ppEnabledExtensionNames,
                        },
                    },
                },
            ["VkDedicatedAllocationImageCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkBool32,
                        ["name"] = dedicatedAllocation,
                        ["comment"] = Whether this image uses a dedicated allocation,
                        },
                    },
                },
            ["VkVertexInputBindingDescription"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = binding,
                        ["comment"] = Vertex buffer binding id,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = stride,
                        ["comment"] = Distance between vertices in bytes (0 = no advancement),
                        },
                    [3] = {
                        ["type"] = VkVertexInputRate,
                        ["name"] = inputRate,
                        ["comment"] = The rate at which the vertex data is consumed,
                        },
                    },
                },
            ["VkDrawIndirectCommand"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = vertexCount,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = instanceCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = firstVertex,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = firstInstance,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkBindBufferMemoryInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    [4] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [5] = {
                        ["name"] = memoryOffset,
                        ["type"] = VkDeviceSize,
                        },
                    },
                },
            ["VkExternalMemoryBufferCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkObjectTableCreateInfoNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = objectCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkObjectEntryTypeNVX,
                        ["name"] = pObjectEntryTypes,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pObjectEntryCounts,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        ["name"] = pObjectEntryUsageFlags,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = maxUniformBuffersPerDescriptor,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = maxStorageBuffersPerDescriptor,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["name"] = maxStorageImagesPerDescriptor,
                        ["type"] = uint32_t,
                        },
                    [10] = {
                        ["name"] = maxSampledImagesPerDescriptor,
                        ["type"] = uint32_t,
                        },
                    [11] = {
                        ["name"] = maxPipelineLayouts,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkImageSubresourceLayers"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    [2] = {
                        ["name"] = mipLevel,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = baseArrayLayer,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = layerCount,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkMemoryAllocateFlagsInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkMemoryAllocateFlags,
                        },
                    [4] = {
                        ["name"] = deviceMask,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkOffset3D"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = int32_t,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = int32_t,
                        },
                    [3] = {
                        ["name"] = z,
                        ["type"] = int32_t,
                        },
                    },
                },
            ["VkStencilOpState"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = failOp,
                        ["type"] = VkStencilOp,
                        },
                    [2] = {
                        ["name"] = passOp,
                        ["type"] = VkStencilOp,
                        },
                    [3] = {
                        ["name"] = depthFailOp,
                        ["type"] = VkStencilOp,
                        },
                    [4] = {
                        ["name"] = compareOp,
                        ["type"] = VkCompareOp,
                        },
                    [5] = {
                        ["name"] = compareMask,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["name"] = writeMask,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = reference,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkBufferImageCopy"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = bufferOffset,
                        ["comment"] = Specified in bytes,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = bufferRowLength,
                        ["comment"] = Specified in texels,
                        },
                    [3] = {
                        ["name"] = bufferImageHeight,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = imageSubresource,
                        ["type"] = VkImageSubresourceLayers,
                        },
                    [5] = {
                        ["type"] = VkOffset3D,
                        ["name"] = imageOffset,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        },
                    [6] = {
                        ["type"] = VkExtent3D,
                        ["name"] = imageExtent,
                        ["comment"] = Specified in pixels for both compressed and uncompressed images,
                        },
                    },
                },
            ["VkExternalMemoryImageCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleTypes,
                        ["type"] = VkExternalMemoryHandleTypeFlagsNV,
                        },
                    },
                },
            ["VkDescriptorSetLayoutBinding"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = binding,
                        ["comment"] = Binding number for this entry,
                        },
                    [2] = {
                        ["type"] = VkDescriptorType,
                        ["name"] = descriptorType,
                        ["comment"] = Type of the descriptors in this binding,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = descriptorCount,
                        ["comment"] = Number of descriptors in this binding,
                        },
                    [4] = {
                        ["type"] = VkShaderStageFlags,
                        ["name"] = stageFlags,
                        ["comment"] = Shader stages this binding is visible to,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkSampler,
                        ["comment"] = Immutable samplers (used if descriptor type is SAMPLER or COMBINED_IMAGE_SAMPLER, is either NULL or contains count number of elements),
                        ["pointer"] = true,
                        ["name"] = pImmutableSamplers,
                        },
                    },
                },
            ["VkPhysicalDeviceGroupProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = physicalDeviceCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["arrayLength"] = VK_MAX_DEVICE_GROUP_SIZE,
                        ["type"] = VkPhysicalDevice,
                        ["name"] = physicalDevices,
                        ["array"] = true,
                        },
                    [5] = {
                        ["name"] = subsetAllocation,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkMemoryPriorityAllocateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = priority,
                        ["type"] = float,
                        },
                    },
                },
            ["VkPresentInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = waitSemaphoreCount,
                        ["comment"] = Number of semaphores to wait for before presenting,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkSemaphore,
                        ["comment"] = Semaphores to wait for before presenting,
                        ["pointer"] = true,
                        ["name"] = pWaitSemaphores,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = swapchainCount,
                        ["comment"] = Number of swapchains to present in this call,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkSwapchainKHR,
                        ["comment"] = Swapchains to present an image from,
                        ["pointer"] = true,
                        ["name"] = pSwapchains,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["comment"] = Indices of which presentable images to present,
                        ["pointer"] = true,
                        ["name"] = pImageIndices,
                        },
                    [8] = {
                        ["pointer"] = true,
                        ["type"] = VkResult,
                        ["name"] = pResults,
                        ["comment"] = Optional (i.e. if non-NULL) VkResult for each swapchain,
                        },
                    },
                },
            ["VkDispatchIndirectCommand"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = x,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = y,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = z,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkViSurfaceCreateInfoNN"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkViSurfaceCreateFlagsNN,
                        },
                    [4] = {
                        ["type"] = void,
                        ["name"] = window,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceLimits"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageDimension1D,
                        ["comment"] = max 1D image dimension,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageDimension2D,
                        ["comment"] = max 2D image dimension,
                        },
                    [3] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageDimension3D,
                        ["comment"] = max 3D image dimension,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageDimensionCube,
                        ["comment"] = max cubemap image dimension,
                        },
                    [5] = {
                        ["type"] = uint32_t,
                        ["name"] = maxImageArrayLayers,
                        ["comment"] = max layers for image arrays,
                        },
                    [6] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTexelBufferElements,
                        ["comment"] = max texel buffer size (fstexels),
                        },
                    [7] = {
                        ["type"] = uint32_t,
                        ["name"] = maxUniformBufferRange,
                        ["comment"] = max uniform buffer range (bytes),
                        },
                    [8] = {
                        ["type"] = uint32_t,
                        ["name"] = maxStorageBufferRange,
                        ["comment"] = max storage buffer range (bytes),
                        },
                    [9] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPushConstantsSize,
                        ["comment"] = max size of the push constants pool (bytes),
                        },
                    [10] = {
                        ["type"] = uint32_t,
                        ["name"] = maxMemoryAllocationCount,
                        ["comment"] = max number of device memory allocations supported,
                        },
                    [11] = {
                        ["type"] = uint32_t,
                        ["name"] = maxSamplerAllocationCount,
                        ["comment"] = max number of samplers that can be allocated on a device,
                        },
                    [12] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = bufferImageGranularity,
                        ["comment"] = Granularity (in bytes) at which buffers and images can be bound to adjacent memory for simultaneous usage,
                        },
                    [13] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = sparseAddressSpaceSize,
                        ["comment"] = Total address space available for sparse allocations (bytes),
                        },
                    [14] = {
                        ["type"] = uint32_t,
                        ["name"] = maxBoundDescriptorSets,
                        ["comment"] = max number of descriptors sets that can be bound to a pipeline,
                        },
                    [15] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorSamplers,
                        ["comment"] = max number of samplers allowed per-stage in a descriptor set,
                        },
                    [16] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorUniformBuffers,
                        ["comment"] = max number of uniform buffers allowed per-stage in a descriptor set,
                        },
                    [17] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorStorageBuffers,
                        ["comment"] = max number of storage buffers allowed per-stage in a descriptor set,
                        },
                    [18] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorSampledImages,
                        ["comment"] = max number of sampled images allowed per-stage in a descriptor set,
                        },
                    [19] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorStorageImages,
                        ["comment"] = max number of storage images allowed per-stage in a descriptor set,
                        },
                    [20] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageDescriptorInputAttachments,
                        ["comment"] = max number of input attachments allowed per-stage in a descriptor set,
                        },
                    [21] = {
                        ["type"] = uint32_t,
                        ["name"] = maxPerStageResources,
                        ["comment"] = max number of resources allowed by a single stage,
                        },
                    [22] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetSamplers,
                        ["comment"] = max number of samplers allowed in all stages in a descriptor set,
                        },
                    [23] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetUniformBuffers,
                        ["comment"] = max number of uniform buffers allowed in all stages in a descriptor set,
                        },
                    [24] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetUniformBuffersDynamic,
                        ["comment"] = max number of dynamic uniform buffers allowed in all stages in a descriptor set,
                        },
                    [25] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetStorageBuffers,
                        ["comment"] = max number of storage buffers allowed in all stages in a descriptor set,
                        },
                    [26] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetStorageBuffersDynamic,
                        ["comment"] = max number of dynamic storage buffers allowed in all stages in a descriptor set,
                        },
                    [27] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetSampledImages,
                        ["comment"] = max number of sampled images allowed in all stages in a descriptor set,
                        },
                    [28] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetStorageImages,
                        ["comment"] = max number of storage images allowed in all stages in a descriptor set,
                        },
                    [29] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDescriptorSetInputAttachments,
                        ["comment"] = max number of input attachments allowed in all stages in a descriptor set,
                        },
                    [30] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexInputAttributes,
                        ["comment"] = max number of vertex input attribute slots,
                        },
                    [31] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexInputBindings,
                        ["comment"] = max number of vertex input binding slots,
                        },
                    [32] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexInputAttributeOffset,
                        ["comment"] = max vertex input attribute offset added to vertex buffer offset,
                        },
                    [33] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexInputBindingStride,
                        ["comment"] = max vertex input binding stride,
                        },
                    [34] = {
                        ["type"] = uint32_t,
                        ["name"] = maxVertexOutputComponents,
                        ["comment"] = max number of output components written by vertex shader,
                        },
                    [35] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationGenerationLevel,
                        ["comment"] = max level supported by tessellation primitive generator,
                        },
                    [36] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationPatchSize,
                        ["comment"] = max patch size (vertices),
                        },
                    [37] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationControlPerVertexInputComponents,
                        ["comment"] = max number of input components per-vertex in TCS,
                        },
                    [38] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationControlPerVertexOutputComponents,
                        ["comment"] = max number of output components per-vertex in TCS,
                        },
                    [39] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationControlPerPatchOutputComponents,
                        ["comment"] = max number of output components per-patch in TCS,
                        },
                    [40] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationControlTotalOutputComponents,
                        ["comment"] = max total number of per-vertex and per-patch output components in TCS,
                        },
                    [41] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationEvaluationInputComponents,
                        ["comment"] = max number of input components per vertex in TES,
                        },
                    [42] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTessellationEvaluationOutputComponents,
                        ["comment"] = max number of output components per vertex in TES,
                        },
                    [43] = {
                        ["type"] = uint32_t,
                        ["name"] = maxGeometryShaderInvocations,
                        ["comment"] = max invocation count supported in geometry shader,
                        },
                    [44] = {
                        ["type"] = uint32_t,
                        ["name"] = maxGeometryInputComponents,
                        ["comment"] = max number of input components read in geometry stage,
                        },
                    [45] = {
                        ["type"] = uint32_t,
                        ["name"] = maxGeometryOutputComponents,
                        ["comment"] = max number of output components written in geometry stage,
                        },
                    [46] = {
                        ["type"] = uint32_t,
                        ["name"] = maxGeometryOutputVertices,
                        ["comment"] = max number of vertices that can be emitted in geometry stage,
                        },
                    [47] = {
                        ["type"] = uint32_t,
                        ["name"] = maxGeometryTotalOutputComponents,
                        ["comment"] = max total number of components (all vertices) written in geometry stage,
                        },
                    [48] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFragmentInputComponents,
                        ["comment"] = max number of input components read in fragment stage,
                        },
                    [49] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFragmentOutputAttachments,
                        ["comment"] = max number of output attachments written in fragment stage,
                        },
                    [50] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFragmentDualSrcAttachments,
                        ["comment"] = max number of output attachments written when using dual source blending,
                        },
                    [51] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFragmentCombinedOutputResources,
                        ["comment"] = max total number of storage buffers, storage images and output buffers,
                        },
                    [52] = {
                        ["type"] = uint32_t,
                        ["name"] = maxComputeSharedMemorySize,
                        ["comment"] = max total storage size of work group local storage (bytes),
                        },
                    [53] = {
                        ["type"] = uint32_t,
                        ["comment"] = max num of compute work groups that may be dispatched by a single command (x,y,z),
                        ["arrayLength"] = 3,
                        ["array"] = true,
                        ["name"] = maxComputeWorkGroupCount,
                        },
                    [54] = {
                        ["type"] = uint32_t,
                        ["name"] = maxComputeWorkGroupInvocations,
                        ["comment"] = max total compute invocations in a single local work group,
                        },
                    [55] = {
                        ["type"] = uint32_t,
                        ["comment"] = max local size of a compute work group (x,y,z),
                        ["arrayLength"] = 3,
                        ["array"] = true,
                        ["name"] = maxComputeWorkGroupSize,
                        },
                    [56] = {
                        ["type"] = uint32_t,
                        ["name"] = subPixelPrecisionBits,
                        ["comment"] = number bits of subpixel precision in screen x and y,
                        },
                    [57] = {
                        ["type"] = uint32_t,
                        ["name"] = subTexelPrecisionBits,
                        ["comment"] = number bits of precision for selecting texel weights,
                        },
                    [58] = {
                        ["type"] = uint32_t,
                        ["name"] = mipmapPrecisionBits,
                        ["comment"] = number bits of precision for selecting mipmap weights,
                        },
                    [59] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDrawIndexedIndexValue,
                        ["comment"] = max index value for indexed draw calls (for 32-bit indices),
                        },
                    [60] = {
                        ["type"] = uint32_t,
                        ["name"] = maxDrawIndirectCount,
                        ["comment"] = max draw count for indirect draw calls,
                        },
                    [61] = {
                        ["type"] = float,
                        ["name"] = maxSamplerLodBias,
                        ["comment"] = max absolute sampler LOD bias,
                        },
                    [62] = {
                        ["type"] = float,
                        ["name"] = maxSamplerAnisotropy,
                        ["comment"] = max degree of sampler anisotropy,
                        },
                    [63] = {
                        ["type"] = uint32_t,
                        ["name"] = maxViewports,
                        ["comment"] = max number of active viewports,
                        },
                    [64] = {
                        ["type"] = uint32_t,
                        ["comment"] = max viewport dimensions (x,y),
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = maxViewportDimensions,
                        },
                    [65] = {
                        ["type"] = float,
                        ["comment"] = viewport bounds range (min,max),
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = viewportBoundsRange,
                        },
                    [66] = {
                        ["type"] = uint32_t,
                        ["name"] = viewportSubPixelBits,
                        ["comment"] = number bits of subpixel precision for viewport,
                        },
                    [67] = {
                        ["type"] = size_t,
                        ["name"] = minMemoryMapAlignment,
                        ["comment"] = min required alignment of pointers returned by MapMemory (bytes),
                        },
                    [68] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = minTexelBufferOffsetAlignment,
                        ["comment"] = min required alignment for texel buffer offsets (bytes),
                        },
                    [69] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = minUniformBufferOffsetAlignment,
                        ["comment"] = min required alignment for uniform buffer sizes and offsets (bytes),
                        },
                    [70] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = minStorageBufferOffsetAlignment,
                        ["comment"] = min required alignment for storage buffer offsets (bytes),
                        },
                    [71] = {
                        ["type"] = int32_t,
                        ["name"] = minTexelOffset,
                        ["comment"] = min texel offset for OpTextureSampleOffset,
                        },
                    [72] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTexelOffset,
                        ["comment"] = max texel offset for OpTextureSampleOffset,
                        },
                    [73] = {
                        ["type"] = int32_t,
                        ["name"] = minTexelGatherOffset,
                        ["comment"] = min texel offset for OpTextureGatherOffset,
                        },
                    [74] = {
                        ["type"] = uint32_t,
                        ["name"] = maxTexelGatherOffset,
                        ["comment"] = max texel offset for OpTextureGatherOffset,
                        },
                    [75] = {
                        ["type"] = float,
                        ["name"] = minInterpolationOffset,
                        ["comment"] = furthest negative offset for interpolateAtOffset,
                        },
                    [76] = {
                        ["type"] = float,
                        ["name"] = maxInterpolationOffset,
                        ["comment"] = furthest positive offset for interpolateAtOffset,
                        },
                    [77] = {
                        ["type"] = uint32_t,
                        ["name"] = subPixelInterpolationOffsetBits,
                        ["comment"] = number of subpixel bits for interpolateAtOffset,
                        },
                    [78] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFramebufferWidth,
                        ["comment"] = max width for a framebuffer,
                        },
                    [79] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFramebufferHeight,
                        ["comment"] = max height for a framebuffer,
                        },
                    [80] = {
                        ["type"] = uint32_t,
                        ["name"] = maxFramebufferLayers,
                        ["comment"] = max layer count for a layered framebuffer,
                        },
                    [81] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = framebufferColorSampleCounts,
                        ["comment"] = supported color sample counts for a framebuffer,
                        },
                    [82] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = framebufferDepthSampleCounts,
                        ["comment"] = supported depth sample counts for a framebuffer,
                        },
                    [83] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = framebufferStencilSampleCounts,
                        ["comment"] = supported stencil sample counts for a framebuffer,
                        },
                    [84] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = framebufferNoAttachmentsSampleCounts,
                        ["comment"] = supported sample counts for a framebuffer with no attachments,
                        },
                    [85] = {
                        ["type"] = uint32_t,
                        ["name"] = maxColorAttachments,
                        ["comment"] = max number of color attachments per subpass,
                        },
                    [86] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = sampledImageColorSampleCounts,
                        ["comment"] = supported color sample counts for a non-integer sampled image,
                        },
                    [87] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = sampledImageIntegerSampleCounts,
                        ["comment"] = supported sample counts for an integer image,
                        },
                    [88] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = sampledImageDepthSampleCounts,
                        ["comment"] = supported depth sample counts for a sampled image,
                        },
                    [89] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = sampledImageStencilSampleCounts,
                        ["comment"] = supported stencil sample counts for a sampled image,
                        },
                    [90] = {
                        ["type"] = VkSampleCountFlags,
                        ["name"] = storageImageSampleCounts,
                        ["comment"] = supported sample counts for a storage image,
                        },
                    [91] = {
                        ["type"] = uint32_t,
                        ["name"] = maxSampleMaskWords,
                        ["comment"] = max number of sample mask words,
                        },
                    [92] = {
                        ["type"] = VkBool32,
                        ["name"] = timestampComputeAndGraphics,
                        ["comment"] = timestamps on graphics and compute queues,
                        },
                    [93] = {
                        ["type"] = float,
                        ["name"] = timestampPeriod,
                        ["comment"] = number of nanoseconds it takes for timestamp query value to increment by 1,
                        },
                    [94] = {
                        ["type"] = uint32_t,
                        ["name"] = maxClipDistances,
                        ["comment"] = max number of clip distances,
                        },
                    [95] = {
                        ["type"] = uint32_t,
                        ["name"] = maxCullDistances,
                        ["comment"] = max number of cull distances,
                        },
                    [96] = {
                        ["type"] = uint32_t,
                        ["name"] = maxCombinedClipAndCullDistances,
                        ["comment"] = max combined number of user clipping,
                        },
                    [97] = {
                        ["type"] = uint32_t,
                        ["name"] = discreteQueuePriorities,
                        ["comment"] = distinct queue priorities available,
                        },
                    [98] = {
                        ["type"] = float,
                        ["comment"] = range (min,max) of supported point sizes,
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = pointSizeRange,
                        },
                    [99] = {
                        ["type"] = float,
                        ["comment"] = range (min,max) of supported line widths,
                        ["arrayLength"] = 2,
                        ["array"] = true,
                        ["name"] = lineWidthRange,
                        },
                    [100] = {
                        ["type"] = float,
                        ["name"] = pointSizeGranularity,
                        ["comment"] = granularity of supported point sizes,
                        },
                    [101] = {
                        ["type"] = float,
                        ["name"] = lineWidthGranularity,
                        ["comment"] = granularity of supported line widths,
                        },
                    [102] = {
                        ["type"] = VkBool32,
                        ["name"] = strictLines,
                        ["comment"] = line rasterization follows preferred rules,
                        },
                    [103] = {
                        ["type"] = VkBool32,
                        ["name"] = standardSampleLocations,
                        ["comment"] = supports standard sample locations for all supported sample counts,
                        },
                    [104] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = optimalBufferCopyOffsetAlignment,
                        ["comment"] = optimal offset of buffer copies,
                        },
                    [105] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = optimalBufferCopyRowPitchAlignment,
                        ["comment"] = optimal pitch of buffer copies,
                        },
                    [106] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = nonCoherentAtomSize,
                        ["comment"] = minimum size and alignment for non-coherent host-mapped device memory access,
                        },
                    },
                },
            ["VkWin32KeyedMutexAcquireReleaseInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = acquireCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkDeviceMemory,
                        ["name"] = pAcquireSyncs,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pAcquireKeys,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pAcquireTimeoutMilliseconds,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = releaseCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkDeviceMemory,
                        ["name"] = pReleaseSyncs,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pReleaseKeys,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkFenceGetWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fence,
                        ["type"] = VkFence,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    },
                },
            ["VkImportFenceWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = fence,
                        ["type"] = VkFence,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkFenceImportFlags,
                        },
                    [5] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalFenceHandleTypeFlags,
                        },
                    [6] = {
                        ["name"] = handle,
                        ["type"] = HANDLE,
                        },
                    [7] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkImageFormatListCreateInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = viewFormatCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkFormat,
                        ["name"] = pViewFormats,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkImportSemaphoreFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = semaphore,
                        ["type"] = VkSemaphore,
                        },
                    [4] = {
                        ["name"] = flags,
                        ["type"] = VkSemaphoreImportFlags,
                        },
                    [5] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    [6] = {
                        ["name"] = fd,
                        ["type"] = int,
                        },
                    },
                },
            ["VkExportMemoryWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = SECURITY_ATTRIBUTES,
                        ["name"] = pAttributes,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = dwAccess,
                        ["type"] = DWORD,
                        },
                    [5] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkImagePlaneMemoryRequirementsInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = planeAspect,
                        ["type"] = VkImageAspectFlags,
                        },
                    },
                },
            ["VkSparseImageFormatProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = aspectMask,
                        ["type"] = VkImageAspectFlags,
                        },
                    [2] = {
                        ["name"] = imageGranularity,
                        ["type"] = VkExtent3D,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkSparseImageFormatFlags,
                        },
                    },
                },
            ["VkMappedMemoryRange"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkDeviceMemory,
                        ["name"] = memory,
                        ["comment"] = Mapped memory object,
                        },
                    [4] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Offset within the memory object where the range starts,
                        },
                    [5] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = size,
                        ["comment"] = Size of the range within the memory object,
                        },
                    },
                },
            ["VkDescriptorBufferInfo"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkBuffer,
                        ["name"] = buffer,
                        ["comment"] = Buffer used for this descriptor slot.,
                        },
                    [2] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = offset,
                        ["comment"] = Base offset from buffer start in bytes to update in the descriptor set.,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = range,
                        ["comment"] = Size in bytes of the buffer resource for this descriptor update.,
                        },
                    },
                },
            ["VkPhysicalDevicePointClippingProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = pointClippingBehavior,
                        ["type"] = VkPointClippingBehavior,
                        },
                    },
                },
            ["VkCommandPoolCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkCommandPoolCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Command pool creation flags,
                        },
                    [4] = {
                        ["name"] = queueFamilyIndex,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkSparseBufferMemoryBindInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    [2] = {
                        ["name"] = bindCount,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = VkSparseMemoryBind,
                        ["name"] = pBinds,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkFramebufferCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkFramebufferCreateFlags,
                        },
                    [4] = {
                        ["name"] = renderPass,
                        ["type"] = VkRenderPass,
                        },
                    [5] = {
                        ["name"] = attachmentCount,
                        ["type"] = uint32_t,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = VkImageView,
                        ["name"] = pAttachments,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = width,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["name"] = height,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["name"] = layers,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkDisplayEventInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = displayEvent,
                        ["type"] = VkDisplayEventTypeEXT,
                        },
                    },
                },
            ["VkMemoryGetWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memory,
                        ["type"] = VkDeviceMemory,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    },
                },
            ["VkSparseImageMemoryRequirements"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = formatProperties,
                        ["type"] = VkSparseImageFormatProperties,
                        },
                    [2] = {
                        ["name"] = imageMipTailFirstLod,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = imageMipTailSize,
                        ["comment"] = Specified in bytes, must be a multiple of sparse block size in bytes / alignment,
                        },
                    [4] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = imageMipTailOffset,
                        ["comment"] = Specified in bytes, must be a multiple of sparse block size in bytes / alignment,
                        },
                    [5] = {
                        ["type"] = VkDeviceSize,
                        ["name"] = imageMipTailStride,
                        ["comment"] = Specified in bytes, must be a multiple of sparse block size in bytes / alignment,
                        },
                    },
                },
            ["VkPhysicalDeviceScalarBlockLayoutFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = scalarBlockLayout,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkSubmitInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = waitSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkSemaphore,
                        ["name"] = pWaitSemaphores,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkPipelineStageFlags,
                        ["name"] = pWaitDstStageMask,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = commandBufferCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkCommandBuffer,
                        ["name"] = pCommandBuffers,
                        ["pointer"] = true,
                        },
                    [8] = {
                        ["name"] = signalSemaphoreCount,
                        ["type"] = uint32_t,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = VkSemaphore,
                        ["name"] = pSignalSemaphores,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkImportMemoryFdInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalMemoryHandleTypeFlags,
                        },
                    [4] = {
                        ["name"] = fd,
                        ["type"] = int,
                        },
                    },
                },
            ["VkPhysicalDeviceImageFormatInfo2"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = format,
                        ["type"] = VkFormat,
                        },
                    [4] = {
                        ["name"] = type,
                        ["type"] = VkImageType,
                        },
                    [5] = {
                        ["name"] = tiling,
                        ["type"] = VkImageTiling,
                        },
                    [6] = {
                        ["name"] = usage,
                        ["type"] = VkImageUsageFlags,
                        },
                    [7] = {
                        ["name"] = flags,
                        ["type"] = VkImageCreateFlags,
                        },
                    },
                },
            ["VkDeviceGeneratedCommandsFeaturesNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = computeBindingPointSupport,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkDisplayModeParametersKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = VkExtent2D,
                        ["name"] = visibleRegion,
                        ["comment"] = Visible scanout region.,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = refreshRate,
                        ["comment"] = Number of times per second the display is updated.,
                        },
                    },
                },
            ["VkPhysicalDeviceDepthClipEnableFeaturesEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["pointer"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["comment"] = Pointer to next structure,
                        },
                    [3] = {
                        ["name"] = depthClipEnable,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPresentRegionKHR"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = rectangleCount,
                        ["comment"] = Number of rectangles in pRectangles,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = VkRectLayerKHR,
                        ["comment"] = Array of rectangles that have changed in a swapchain's image(s),
                        ["pointer"] = true,
                        ["name"] = pRectangles,
                        },
                    },
                },
            ["VkPhysicalDeviceShaderAtomicInt64FeaturesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = shaderBufferInt64Atomics,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = shaderSharedInt64Atomics,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceDriverPropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = driverID,
                        ["type"] = VkDriverIdKHR,
                        },
                    [4] = {
                        ["arrayLength"] = VK_MAX_DRIVER_NAME_SIZE_KHR,
                        ["type"] = char,
                        ["name"] = driverName,
                        ["array"] = true,
                        },
                    [5] = {
                        ["arrayLength"] = VK_MAX_DRIVER_INFO_SIZE_KHR,
                        ["type"] = char,
                        ["name"] = driverInfo,
                        ["array"] = true,
                        },
                    [6] = {
                        ["name"] = conformanceVersion,
                        ["type"] = VkConformanceVersionKHR,
                        },
                    },
                },
            ["VkConformanceVersionKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = major,
                        ["type"] = uint8_t,
                        },
                    [2] = {
                        ["name"] = minor,
                        ["type"] = uint8_t,
                        },
                    [3] = {
                        ["name"] = subminor,
                        ["type"] = uint8_t,
                        },
                    [4] = {
                        ["name"] = patch,
                        ["type"] = uint8_t,
                        },
                    },
                },
            ["VkPhysicalDeviceCooperativeMatrixFeaturesNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = cooperativeMatrix,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = cooperativeMatrixRobustBufferAccess,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPhysicalDeviceProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = apiVersion,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["name"] = driverVersion,
                        ["type"] = uint32_t,
                        },
                    [3] = {
                        ["name"] = vendorID,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["name"] = deviceID,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["name"] = deviceType,
                        ["type"] = VkPhysicalDeviceType,
                        },
                    [6] = {
                        ["arrayLength"] = VK_MAX_PHYSICAL_DEVICE_NAME_SIZE,
                        ["type"] = char,
                        ["name"] = deviceName,
                        ["array"] = true,
                        },
                    [7] = {
                        ["arrayLength"] = VK_UUID_SIZE,
                        ["type"] = uint8_t,
                        ["name"] = pipelineCacheUUID,
                        ["array"] = true,
                        },
                    [8] = {
                        ["name"] = limits,
                        ["type"] = VkPhysicalDeviceLimits,
                        },
                    [9] = {
                        ["name"] = sparseProperties,
                        ["type"] = VkPhysicalDeviceSparseProperties,
                        },
                    },
                },
            ["VkWin32KeyedMutexAcquireReleaseInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = acquireCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkDeviceMemory,
                        ["name"] = pAcquireSyncs,
                        ["pointer"] = true,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pAcquireKeys,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["const"] = true,
                        ["type"] = uint32_t,
                        ["name"] = pAcquireTimeouts,
                        ["pointer"] = true,
                        },
                    [7] = {
                        ["name"] = releaseCount,
                        ["type"] = uint32_t,
                        },
                    [8] = {
                        ["const"] = true,
                        ["type"] = VkDeviceMemory,
                        ["name"] = pReleaseSyncs,
                        ["pointer"] = true,
                        },
                    [9] = {
                        ["const"] = true,
                        ["type"] = uint64_t,
                        ["name"] = pReleaseKeys,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineDepthStencilStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineDepthStencilStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = depthTestEnable,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = depthWriteEnable,
                        ["type"] = VkBool32,
                        },
                    [6] = {
                        ["name"] = depthCompareOp,
                        ["type"] = VkCompareOp,
                        },
                    [7] = {
                        ["type"] = VkBool32,
                        ["name"] = depthBoundsTestEnable,
                        ["comment"] = optional (depth_bounds_test),
                        },
                    [8] = {
                        ["name"] = stencilTestEnable,
                        ["type"] = VkBool32,
                        },
                    [9] = {
                        ["name"] = front,
                        ["type"] = VkStencilOpState,
                        },
                    [10] = {
                        ["name"] = back,
                        ["type"] = VkStencilOpState,
                        },
                    [11] = {
                        ["name"] = minDepthBounds,
                        ["type"] = float,
                        },
                    [12] = {
                        ["name"] = maxDepthBounds,
                        ["type"] = float,
                        },
                    },
                },
            ["VkSemaphoreGetWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = semaphore,
                        ["type"] = VkSemaphore,
                        },
                    [4] = {
                        ["name"] = handleType,
                        ["type"] = VkExternalSemaphoreHandleTypeFlags,
                        },
                    },
                },
            ["VkObjectTableVertexBufferEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    [3] = {
                        ["name"] = buffer,
                        ["type"] = VkBuffer,
                        },
                    },
                },
            ["VkObjectTableDescriptorSetEntryNVX"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = type,
                        ["type"] = VkObjectEntryTypeNVX,
                        },
                    [2] = {
                        ["name"] = flags,
                        ["type"] = VkObjectEntryUsageFlagsNVX,
                        },
                    [3] = {
                        ["name"] = pipelineLayout,
                        ["type"] = VkPipelineLayout,
                        },
                    [4] = {
                        ["name"] = descriptorSet,
                        ["type"] = VkDescriptorSet,
                        },
                    },
                },
            ["VkPhysicalDeviceIDProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["arrayLength"] = VK_UUID_SIZE,
                        ["type"] = uint8_t,
                        ["name"] = deviceUUID,
                        ["array"] = true,
                        },
                    [4] = {
                        ["arrayLength"] = VK_UUID_SIZE,
                        ["type"] = uint8_t,
                        ["name"] = driverUUID,
                        ["array"] = true,
                        },
                    [5] = {
                        ["arrayLength"] = VK_LUID_SIZE,
                        ["type"] = uint8_t,
                        ["name"] = deviceLUID,
                        ["array"] = true,
                        },
                    [6] = {
                        ["name"] = deviceNodeMask,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["name"] = deviceLUIDValid,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkPipelineVertexInputDivisorStateCreateInfoEXT"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = vertexBindingDivisorCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkVertexInputBindingDivisorDescriptionEXT,
                        ["name"] = pVertexBindingDivisors,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkVertexInputAttributeDescription"] = {
                ["members"] = {
                    [1] = {
                        ["type"] = uint32_t,
                        ["name"] = location,
                        ["comment"] = location of the shader vertex attrib,
                        },
                    [2] = {
                        ["type"] = uint32_t,
                        ["name"] = binding,
                        ["comment"] = Vertex buffer binding id,
                        },
                    [3] = {
                        ["type"] = VkFormat,
                        ["name"] = format,
                        ["comment"] = format of source data,
                        },
                    [4] = {
                        ["type"] = uint32_t,
                        ["name"] = offset,
                        ["comment"] = Offset of first element in bytes from base of vertex,
                        },
                    },
                },
            ["VkExportFenceWin32HandleInfoKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["const"] = true,
                        ["type"] = SECURITY_ATTRIBUTES,
                        ["name"] = pAttributes,
                        ["pointer"] = true,
                        },
                    [4] = {
                        ["name"] = dwAccess,
                        ["type"] = DWORD,
                        },
                    [5] = {
                        ["name"] = name,
                        ["type"] = LPCWSTR,
                        },
                    },
                },
            ["VkPhysicalDeviceMemoryProperties"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = memoryTypeCount,
                        ["type"] = uint32_t,
                        },
                    [2] = {
                        ["arrayLength"] = VK_MAX_MEMORY_TYPES,
                        ["type"] = VkMemoryType,
                        ["name"] = memoryTypes,
                        ["array"] = true,
                        },
                    [3] = {
                        ["name"] = memoryHeapCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["arrayLength"] = VK_MAX_MEMORY_HEAPS,
                        ["type"] = VkMemoryHeap,
                        ["name"] = memoryHeaps,
                        ["array"] = true,
                        },
                    },
                },
            ["VkPipelineViewportStateCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkPipelineViewportStateCreateFlags,
                        },
                    [4] = {
                        ["name"] = viewportCount,
                        ["type"] = uint32_t,
                        },
                    [5] = {
                        ["const"] = true,
                        ["type"] = VkViewport,
                        ["name"] = pViewports,
                        ["pointer"] = true,
                        },
                    [6] = {
                        ["name"] = scissorCount,
                        ["type"] = uint32_t,
                        },
                    [7] = {
                        ["const"] = true,
                        ["type"] = VkRect2D,
                        ["name"] = pScissors,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPipelineViewportExclusiveScissorStateCreateInfoNV"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = exclusiveScissorCount,
                        ["type"] = uint32_t,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = VkRect2D,
                        ["name"] = pExclusiveScissors,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkMemoryFdPropertiesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = memoryTypeBits,
                        ["type"] = uint32_t,
                        },
                    },
                },
            ["VkIOSSurfaceCreateInfoMVK"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = flags,
                        ["type"] = VkIOSSurfaceCreateFlagsMVK,
                        },
                    [4] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pView,
                        ["pointer"] = true,
                        },
                    },
                },
            ["VkPhysicalDeviceVulkanMemoryModelFeaturesKHR"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["name"] = vulkanMemoryModel,
                        ["type"] = VkBool32,
                        },
                    [4] = {
                        ["name"] = vulkanMemoryModelDeviceScope,
                        ["type"] = VkBool32,
                        },
                    [5] = {
                        ["name"] = vulkanMemoryModelAvailabilityVisibilityChains,
                        ["type"] = VkBool32,
                        },
                    },
                },
            ["VkFenceCreateInfo"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = sType,
                        ["type"] = VkStructureType,
                        },
                    [2] = {
                        ["const"] = true,
                        ["type"] = void,
                        ["name"] = pNext,
                        ["pointer"] = true,
                        },
                    [3] = {
                        ["type"] = VkFenceCreateFlags,
                        ["name"] = flags,
                        ["comment"] = Fence creation flags,
                        },
                    },
                },
            },
        ["unions"] = {
            ["VkClearValue"] = {
                ["members"] = {
                    [1] = {
                        ["name"] = color,
                        ["type"] = VkClearColorValue,
                        },
                    [2] = {
                        ["name"] = depthStencil,
                        ["type"] = VkClearDepthStencilValue,
                        },
                    },
                },
            ["VkClearColorValue"] = {
                ["members"] = {
                    [1] = {
                        ["arrayLength"] = 4,
                        ["type"] = float,
                        ["name"] = float32,
                        ["array"] = true,
                        },
                    [2] = {
                        ["arrayLength"] = 4,
                        ["type"] = int32_t,
                        ["name"] = int32,
                        ["array"] = true,
                        },
                    [3] = {
                        ["arrayLength"] = 4,
                        ["type"] = uint32_t,
                        ["name"] = uint32,
                        ["array"] = true,
                        },
                    },
                },
            },
        },
    }
